[{"title":"sentry发送邮件问题","date":"2019-01-15T08:08:09.000Z","path":"server/sentry-mail.html","text":"Sentry&#x670D;&#x52A1;&#x5668;&#x5728;docker&#x4E2D;&#x65E0;&#x6CD5;&#x53D1;&#x9001;&#x90AE;&#x4EF6;&#x95EE;&#x9898; &#x95EE;&#x9898;&#x539F;&#x56E0; &#x6392;&#x67E5;&#x95EE;&#x9898; &#x7B2C;&#x4E00;&#x6B65;&#x67E5;&#x770B;&#x65E5;&#x5FD7; &#x6392;&#x67E5;&#x6211;&#x4EEC;&#x94FE;&#x63A5;&#x7684;&#x670D;&#x52A1;&#x5668;&#x662F;&#x5426;&#x6B63;&#x5E38; &#x6392;&#x67E5;&#x6211;&#x4EEC;&#x670D;&#x52A1;&#x5668;&#x7684;&#x7F51;&#x7EDC;&#x548C;&#x7AEF;&#x53E3;&#x95EE;&#x9898; &#x603B;&#x7ED3; &#x95EE;&#x9898;&#x539F;&#x56E0;&#x5728;centos&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;&#x5229;&#x7528;docker&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x90E8;&#x7F72;&#x597D;sentry&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x540E;&#x3002;&#x5076;&#x7136;&#x53D1;&#x73B0;&#xFF0C;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x670D;&#x52A1;&#x5C45;&#x7136;&#x4E0D;&#x80FD;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x3002; &#x6392;&#x67E5;&#x95EE;&#x9898;&#x7B2C;&#x4E00;&#x6B65;&#x67E5;&#x770B;&#x65E5;&#x5FD7;&#x5229;&#x7528;docker logs &#x6765;&#x67E5;&#x770B;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x670D;&#x52A1;&#x4E3A;&#x5565;&#x4E0D;&#x80FD;&#x6B63;&#x5E38;&#x8FD0;&#x884C;&#x3002;&#x9996;&#x5148;&#x67E5;&#x770B;web &#x670D;&#x52A1;&#x7684;&#x5E94;&#x7528;&#xFF0C;&#x770B;&#x770B;&#x90AE;&#x4EF6;&#x662F;&#x5426;&#x6709;&#x88AB;&#x6B63;&#x5E38;&#x53D1;&#x9001;&#x3002;1docker logs -f --tail 1000 -t 2662ddd463c2 &#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF1A; &#x5F88;&#x660E;&#x663E;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x53D1;&#x73B0;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x6709;&#x88AB;&#x6B63;&#x5E38;&#x8BF7;&#x6C42;&#xFF0C;&#x4E5F;&#x80FD;&#x53D1;&#x73B0;&#x90AE;&#x4EF6;&#x8BF7;&#x6C42;&#xFF0C;&#x88AB;&#x8F6C;&#x53D1;&#x5230; mail.queued &#x4E2D;&#x3002;&#x5F88;&#x663E;&#x7136;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x5F02;&#x6B65;&#x4EFB;&#x52A1;&#xFF0C;&#x8FD9;&#x4E2A;&#x4EFB;&#x52A1;&#x80AF;&#x5B9A;&#x662F;&#x5728; worker &#x670D;&#x52A1;&#x4E2D;&#x88AB;&#x6CE8;&#x518C;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x63A5;&#x7740;&#x67E5;&#x770B; workder &#x65E5;&#x5FD7;&#x3002;1docker logs -f --tail 1000 -t onpremise_worker_1 &#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF1A; &#x7ED3;&#x679C;&#x662F;&#x6211;&#x4EEC;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#x4E0E;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x670D;&#x52A1;&#x5668;&#x4E4B;&#x95F4;&#x7684;&#x94FE;&#x63A5;&#x8D85;&#x65F6;&#x4E86;&#x3002; &#x6392;&#x67E5;&#x6211;&#x4EEC;&#x94FE;&#x63A5;&#x7684;&#x670D;&#x52A1;&#x5668;&#x662F;&#x5426;&#x6B63;&#x5E38;&#x8FD9;&#x4E2A;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6392;&#x67E5;&#x6211;&#x4EEC;&#x7684; docker-compose.yml &#x7684;&#x90AE;&#x4EF6;&#x914D;&#x7F6E;&#x662F;&#x5426;&#x6B63;&#x5E38;&#xFF08;&#x6211;&#x8FD9;&#x91CC;&#x662F;&#x6B63;&#x5E38;&#x7684;&#xFF0C;&#x4F7F;&#x7528;&#x7684;&#x662F;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#xFF09;&#x3002;12345678910111213environment: # Run `docker-compose run web config generate-secret-key` # to get the SENTRY_SECRET_KEY value. SENTRY_SECRET_KEY: &apos;....&apos; SENTRY_MEMCACHED_HOST: memcached SENTRY_REDIS_HOST: redis SENTRY_POSTGRES_HOST: postgres SENTRY_EMAIL_HOST: &apos;smtp.qiye.aliyun.com&apos; SENTRY_EMAIL_PORT: 25 SENTRY_SERVER_EMAIL: &apos;&#x4F60;&#x7684;&#x90AE;&#x4EF6;&#x5730;&#x5740;&apos; SENTRY_EMAIL_USER: &apos;&#x4F60;&#x7684;&#x90AE;&#x4EF6;&#x5730;&#x5740;&apos; SENTRY_EMAIL_PASSWORD: &apos;&#x4F60;&#x7684;&#x5BC6;&#x7801;&apos; &#x5728;&#x6211;&#x4EEC;&#x4FEE;&#x6539;&#x597D;&#xFF0C;docker-compose.yml &#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x91CD;&#x65B0;&#x7F16;&#x8BD1;&#x4E00;&#x4E0B;&#x955C;&#x50CF;&#x6587;&#x4EF6;&#xFF0C;&#x5E76;&#x91CD;&#x542F;.123docker-compose builddocker kill $(docker ps -a -q) # &#x6211;&#x8FD9;&#x91CC;&#x76F4;&#x63A5;&#x505C;&#x6B62;&#x4E86;&#x6240;&#x6709;&#x7684;&#x670D;&#x52A1;docker-compose up -d # &#x542F;&#x52A8;&#x670D;&#x52A1; &#x542F;&#x52A8;&#x597D;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x81EA;&#x5DF1;&#x7684;sentry&#x670D;&#x52A1;&#x5668;&#x3002; https://&#x4F60;&#x7684;&#x57DF;&#x540D;/manage/status/mail/ &#x4E2D;&#x67E5;&#x770B;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x914D;&#x7F6E;&#x3002;&#x5F53;&#x524D;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; docker &#x6765;&#x67E5;&#x770B;&#x6211;&#x4EEC;&#x67D0;&#x4E00;&#x4E2A;&#x955C;&#x50CF;&#x7684;&#x73AF;&#x5883;&#x3002;123docker exec -it onpremise_worker_1[&#x5BB9;&#x5668;&#x540D;] bash[shell&#x65B9;&#x5F0F;]# &#x5728;&#x63A5;&#x4E0B;&#x6765;&#x7684;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#xFF0C;&#x68C0;&#x6D4B;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x548C;&#x53C2;&#x6570;&#x662F;&#x5426;&#x6B63;&#x786E;echo $SENTRY_EMAIL_HOST &#x7ED3;&#x679C;&#x5982;&#x56FE;&#xFF1A; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF1A;&#x6211;&#x4EEC;&#x7684;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;&#x90FD;&#x662F;&#x6B63;&#x5E38;&#x7684;&#x3002; &#x6392;&#x67E5;&#x6211;&#x4EEC;&#x670D;&#x52A1;&#x5668;&#x7684;&#x7F51;&#x7EDC;&#x548C;&#x7AEF;&#x53E3;&#x95EE;&#x9898;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x662F;&#x4F7F;&#x7528;&#x7684;&#x963F;&#x91CC;&#x4E91;&#x670D;&#x52A1;&#x5668;&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E2A;&#x5B89;&#x5168;&#x7EC4;&#xFF0C;&#x9700;&#x8981;&#x67E5;&#x770B;&#x6211;&#x4EEC;&#x7684;25&#x7AEF;&#x53E3;&#x7684;&#x51FA;&#x5165;&#x662F;&#x5426;&#x6CA1;&#x6709;&#x9650;&#x5236;&#x3002;&#x7ECF;&#x8FC7;&#x6392;&#x67E5;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x51FA;&#x5165;&#x65B9;&#x5411;&#x7684;25&#x7AEF;&#x53E3;&#x90FD;&#x6CA1;&#x6709;&#x9650;&#x5236;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B;&#x662F;&#x5426;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x6211;&#x4EEC;&#x7684;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x3002;12ping smtp.qiye.aliyun.comtelnet smtp.qiye.aliyun.com 25 &#x5982;&#x679C;&#x8FD9;&#x4E24;&#x4E2A;&#x90FD;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x8BBF;&#x95EE;&#xFF0C;&#x90A3;&#x4E48;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x5C31;&#x53EF;&#x4EE5;&#x6B63;&#x5E38;&#x4F7F;&#x7528;&#x4E86;&#x3002;&#x7136;&#x800C;&#xFF0C;&#x6211;&#x8FD9;&#x91CC;&#x662F;&#x80FD;&#x591F;ping&#x901A;&#xFF0C;&#x4F46;&#x662F; telnet &#x65E0;&#x6CD5;&#x6B63;&#x5E38;&#x8FDE;&#x4E0A;&#x90AE;&#x4EF6;&#x670D;&#x52A1;&#x5668;&#x7684;25&#x7AEF;&#x53E3;&#x3002;&#x4F46;&#x662F;&#x963F;&#x91CC;&#x4E91;&#x7684;465&#x7AEF;&#x53E3;&#x662F;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x8BBF;&#x95EE;&#x7684;&#xFF0C;&#x4F46;&#x662F;sentry&#x7684;&#x90AE;&#x4EF6;&#x53D1;&#x9001;&#x6682;&#x65F6;&#x6CA1;&#x6709;&#x652F;&#x6301;ssl&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x4E0D;&#x8003;&#x8651;465&#x7AEF;&#x53E3;&#x3002; &#x540E;&#x6765;&#x901A;&#x8FC7;&#x963F;&#x91CC;&#x4E91;&#x5DE5;&#x5355;&#x5F97;&#x77E5;&#xFF0C;2018&#x5E74;9&#x6708;&#x4EFD;&#x4E4B;&#x540E;&#x8D2D;&#x4E70;&#x7684;&#x670D;&#x52A1;&#x5668;&#x7684;25&#x7AEF;&#x53E3;&#x662F;&#x53D7;&#x9650;&#x7684;&#x3002;&#x8BE6;&#x60C5;&#x67E5;&#x770B; &#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x7533;&#x8BF7;25&#x7AEF;&#x53E3;&#x89E3;&#x5C01;&#x6765;&#x89E3;&#x51B3;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x3002; &#x603B;&#x7ED3;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x65B9;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A; &#x901A;&#x8FC7;&#x67E5;&#x770B;&#x65E5;&#x5FD7;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5B9A;&#x4F4D;&#xFF0C;&#x731C;&#x6D4B;&#xFF0C;&#x9A8C;&#x8BC1;&#x95EE;&#x9898;&#x7684;&#x6765;&#x6E90;&#x3002; &#x77E5;&#x9053;&#x95EE;&#x9898;&#x7684;&#x539F;&#x56E0;&#x4E4B;&#x540E;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x89E3;&#x51B3;&#x627E;&#x5230;&#x5BF9;&#x5E94;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; &#x5728;&#x89E3;&#x51B3;&#x95EE;&#x9898;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x4F1A;&#x5B66;&#x5230;&#x5F88;&#x591A;&#x65B0;&#x4E1C;&#x897F;&#x3002;&#x4F8B;&#x5982;&#x6211;&#x8FD9;&#x91CC;&#xFF1A;docker &#x7684;&#x64CD;&#x4F5C;&#x64CD;&#x4F5C;&#x65B9;&#x5F0F;&#x3002;","tags":[{"name":"sentry, docker, aliyun","slug":"sentry-docker-aliyun","permalink":"http://www.lagel.me/tags/sentry-docker-aliyun/"}]},{"title":"SqlAlchemy单表查询过滤之谜","date":"2017-11-17T02:34:01.000Z","path":"server/sqlalchemy.html","text":"SqlAlchemy&#x5355;&#x8868;&#x67E5;&#x8BE2;&#x8FC7;&#x6EE4;&#x4E4B;&#x8C1C; &#x53D1;&#x751F;&#x80CC;&#x666F; &#x5947;&#x7279;&#x7684;&#x4E00;&#x5E55; &#x6DF1;&#x5165;&#x63A2;&#x7A76; &#x6E90;&#x7801;&#x5206;&#x6790;~ filtered &#x5206;&#x6790;~ single_entity &#x5206;&#x6790;~ proc &#x51FD;&#x6570;&#x5206;&#x6790;~ util.unique_list &#x5904;&#x7406;&#x51FD;&#x6570; &#x603B;&#x7ED3; &#x53D1;&#x751F;&#x80CC;&#x666F;&#x5047;&#x8BBE;&#x6211;&#x6709;&#x4E24;&#x4E2A;&#x8868;&#xFF0C;A &#x548C; BA&#x8868;&#x7ED3;&#x6784;&#x5982;&#x4E0B;&#xFF1A; id content 1 &#x6D4B;&#x8BD5;1 2 &#x6D4B;&#x8BD5;2 B&#x8868;&#x7ED3;&#x6784;&#x5982;&#x4E0B;: id aid content 1 1 &#x6D4B;&#x8BD5;1 2 1 &#x6D4B;&#x8BD5;2 3 2 &#x6D4B;&#x8BD5;3 4 1 &#x6D4B;&#x8BD5;4 5 2 &#x6D4B;&#x8BD5;5 &#x73B0;&#x5728;&#x6211;&#x6709;&#x4E86;&#x4E24;&#x4E2A;&#x6A21;&#x578B; 12345class A(model): ...class B(model): .... &#x5947;&#x7279;&#x7684;&#x4E00;&#x5E55;&#x5F53;&#x6211;&#x8FDE;&#x63A5;A,B&#x4E24;&#x4E2A;&#x8868;&#x65F6;&#xFF0C;&#x53D1;&#x751F;&#x4E86;&#x5947;&#x602A;&#x7684;&#x4E00;&#x5E55;&#x3002; 12345678results = A.query.join( B, B.aid = A.id).all()# &#x5C45;&#x7136; len(results) &#x7684;&#x503C; 2total = A.query.join( B, B.aid = A.id).count()# &#x7136;&#x800C; total &#x7684;&#x503C;&#x662F; 5 &#x6DF1;&#x5165;&#x63A2;&#x7A76;&#x4ECE; sql &#x7684;&#x89D2;&#x5EA6;&#x6765;&#x8BF4;&#xFF0C;&#x67E5;&#x8BE2;&#x51FA;&#x6765;&#x5E94;&#x8BE5;&#x4E00;&#x5B9A;&#x662F;5&#x6761;&#x6570;&#x636E;&#xFF0C;&#x4E8E;&#x662F;&#x53EA;&#x80FD;&#x6DF1;&#x5165;&#x67E5;&#x8BE2; sqlalchemy &#x6E90;&#x7801;&#x6765;&#x63A2;&#x7A76;&#x4E86;&#x3002; &#x6E90;&#x7801;&#x5206;&#x6790;A.query &#x4E00;&#x5207;&#x90FD;&#x662F;&#x7EE7;&#x627F; Query&#xFF0C;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x53BB;&#x67E5;&#x770B; query.py &#x7684;&#x6E90;&#x7801; 1234567def all(self): &quot;&quot;&quot;Return the results represented by this ``Query`` as a list. This results in an execution of the underlying query. &quot;&quot;&quot; return list(self) &#x53D1;&#x73B0; all&#x65B9;&#x6CD5; &#x662F;&#x8C03;&#x7528; list&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4; query &#x5BF9;&#x8C61;&#x662F;&#x4E00;&#x4E2A;&#x53EF;&#x8FED;&#x4EE3;&#x7684;&#x5BF9;&#x8C61;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53BB;&#x770B; __iter__ &#x65B9;&#x6CD5; 1234567def __iter__(self): context = self._compile_context() context.statement.use_labels = True if self._autoflush and not self._populate_existing: self.session._autoflush() return self._execute_and_instances(context) _compile_context() &#x662F;&#x5904;&#x7406; sql &#x8BED;&#x53E5;&#x7684;&#x65B9;&#x6CD5;&#x3002; _execute_and_instances(context) &#x624D;&#x662F;&#x771F;&#x6B63;&#x8FD0;&#x884C;&#x7684; sql &#x7684;&#x8BED;&#x53E5;&#x3002; 12345678def _execute_and_instances(self, querycontext): conn = self._get_bind_args( querycontext, self._connection_from_session, close_with_result=True) result = conn.execute(querycontext.statement, self._params) return loading.instances(querycontext.query, result, querycontext) &#x7ECF;&#x8FC7;&#x8C03;&#x8BD5;&#xFF0C;&#x6211;&#x4EEC;&#x53D1;&#x73B0; result &#x7684;&#x6570;&#x636E;&#x4F9D;&#x7136;&#x662F; 5 &#x6761;&#x3002;\b &#x56E0;&#x6B64;&#x5904;&#x7406;&#x540E;&#x7684;&#x6570;&#x636E;&#x5E94;&#x8BE5;&#x662F;&#x5728; loading.instances &#x91CC;&#x9762;&#x88AB;&#x5904;&#x7406;&#x7684;&#x3002;\b &#x56E0;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x8FFD;&#x8E2A; loading.py 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061def instances(query, cursor, context): &quot;&quot;&quot;Return an ORM result as an iterator.&quot;&quot;&quot; context.runid = _new_runid() filtered = query._has_mapper_entities single_entity = len(query._entities) == 1 and \\ query._entities[0].supports_single_entity if filtered: if single_entity: filter_fn = id else: def filter_fn(row): return tuple( id(item) if ent.use_id_for_hash else item for ent, item in zip(query._entities, row) ) try: (process, labels) = \\ list(zip(*[ query_entity.row_processor(query, context, cursor) for query_entity in query._entities ])) if not single_entity: keyed_tuple = util.lightweight_named_tuple(&apos;result&apos;, labels) while True: context.partials = {} if query._yield_per: fetch = cursor.fetchmany(query._yield_per) if not fetch: break else: fetch = cursor.fetchall() if single_entity: proc = process[0] rows = [proc(row) for row in fetch] else: rows = [keyed_tuple([proc(row) for proc in process]) for row in fetch] if filtered: rows = util.unique_list(rows, filter_fn) for row in rows: yield row if not query._yield_per: break except Exception as err: cursor.close() util.raise_from_cause(err) &#x5728;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x5982;&#x4E0B;&#x51E0;&#x70B9;&#xFF1A; filtered &#x53C2;&#x6570;. single_entity \b&#x53C2;&#x6570;. proc &#x51FD;&#x6570; util.unique_list &#x5904;&#x7406;&#x51FD;&#x6570;. filtered &#x5206;&#x6790;&#x6211;&#x4EEC;&#x662F;&#x5728;&#x4EC0;&#x4E48;&#x65F6;&#x5019;&#x8BBE;&#x7F6E; query._has_mapper_entities&#x3002;&#x4E0D;&#x96BE;&#x770B;&#x51FA;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#x662F;&#x6765;&#x6E90;&#x4E8E; query &#x5BF9;&#x8C61;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x8D76;&#x5FEB;&#x53BB;&#x67E5;&#x770B; query &#x51FD;&#x6570;&#x3002; 123456789101112131415def __init__(self, entities, session=None): self.session = session self._polymorphic_adapters = {} self._set_entities(entities)def _set_entities(self, entities, entity_wrapper=None): if entity_wrapper is None: entity_wrapper = _QueryEntity self._entities = [] self._primary_entity = None self._has_mapper_entities = False for ent in util.to_list(entities): entity_wrapper(self, ent) self._set_entity_selectables(self._entities) Query &#x7684; _set_entities &#x53D1;&#x73B0;&#x5B83;&#x5C06; _has_mapper_entities &#x8BBE;&#x7F6E;&#x6210;&#x4E86; False \b&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x53EA;&#x80FD;&#x5BC4;&#x5E0C;&#x671B;&#x4E8E; _QueryEntity &#x4E86;. 123456789101112131415161718192021222324252627class _QueryEntity(object): &quot;&quot;&quot;represent an entity column returned within a Query result.&quot;&quot;&quot; def __new__(cls, *args, **kwargs): if cls is _QueryEntity: entity = args[1] if not isinstance(entity, util.string_types) and \\ _is_mapped_class(entity): cls = _MapperEntity elif isinstance(entity, Bundle): cls = _BundleEntity else: cls = _ColumnEntity return object.__new__(cls)class _MapperEntity(_QueryEntity): &quot;&quot;&quot;mapper/class/AliasedClass entity&quot;&quot;&quot; def __init__(self, query, entity): if not query._primary_entity: query._primary_entity = self query._entities.append(self) query._has_mapper_entities = True self.entities = [entity] self.expr = entity supports_single_entity = True &#x4ECE; _QueryEntity &#x7684; __new__ &#x65B9;&#x6CD5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6E05;&#x6670;&#x7684;&#x53D1;&#x73B0;&#xFF0C;&#x5B83;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; _MapperEntity &#x5BF9;&#x8C61;&#xFF0C;&#x5728;&#x8FD9;&#x4E2A;&#x5BF9;&#x8C61;&#x91CC;&#x9762;&#x8BBE;&#x7F6E;&#x4E86; _has_mapper_entities &#x5BF9;&#x8C61;&#x3002;&#x5230;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4E86;&#x89E3;&#x5230;&#xFF1A;&#x5728;&#x5904;&#x7406; instantce &#x65F6;&#x6211;&#x4EEC;&#x7684; filtered &#x4E3A; True &#x4E86;&#x3002; single_entity &#x5206;&#x6790;&#x8FD9;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x5176;&#x5B9E;&#x5C31;&#x662F;&#x770B; query._entities &#x6709;&#x591A;&#x5C11;&#x4E2A;&#x3002; 1234def __init__(self, entities, session=None): self.session = session self._polymorphic_adapters = {} self._set_entities(entities) &#x5206;&#x6790;&#x8FD9;&#x4E2A;&#xFF0C;&#x8FD8;&#x662F;&#x4ECE; Query &#x7684; __init__ &#x65B9;&#x6CD5;&#x4E2D;&#x5206;&#x6790;&#x3002; 123A.query.join( B, B.aid = A.id) &#x5F53;&#x6211;&#x4EEC;&#x7ECF;&#x8FC7;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x8C03;&#x8BD5;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53D1;&#x8D77;&#x6211;&#x4EEC;&#x7684; entities &#x53EA;&#x4F20;&#x5165;&#x4E86;&#x4E00;&#x4E2A; A &#x5BF9;&#x8C61;&#x3002; &#x5F53; _MapperEntity &#x5BF9;&#x8C61;&#x88AB;&#x521B;&#x5EFA;&#x65F6;&#xFF0C;&#x5C31;&#x5DF2;&#x7ECF;&#x8BBE;&#x7F6E;&#x4E86; supports_single_entity &#x53C2;&#x6570;&#x3002; &#x7ECF;&#x8FC7;&#x4EE5;&#x4E0A;&#x5206;&#x6790;&#xFF1A;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5F97;&#x51FA;&#x6211;&#x4EEC;&#x7684;&#x6848;&#x4F8B;&#xFF0C;&#x5C5E;&#x4E8E;&#x5355;&#x4E2A;&#x5BF9;&#x8C61;&#x67E5;&#x8BE2;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x7684;&#x8FC7;&#x6EE4;&#x662F;&#xFF1A;123if filtered: if single_entity: filter_fn = id # &#x6211;&#x4EEC;&#x7684;&#x8FC7;&#x6EE4;&#x5668;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x5185;&#x7F6E;&#x51FD;&#x6570; id proc &#x51FD;&#x6570;&#x5206;&#x6790;&#x4ECE; loading.py &#x7684; instances &#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5206;&#x6790;&#x51FA;&#xFF0C;proc &#x662F;&#x6765;&#x81EA;&#x4E8E; _MapperEntity &#x5BF9;&#x8C61;&#x7684; row_processor &#x65B9;&#x6CD5;. 1234567891011121314def row_processor(self, query, context, result): ... _instance = loading._instance_processor( self.mapper, context, result, self.path, adapter, only_load_props=only_load_props, refresh_state=refresh_state, polymorphic_discriminator=self._polymorphic_discriminator ) return _instance, self._label_name &#x4ECE;&#x8FD9;&#x91CC;&#x53EF;&#x4EE5;&#x770B;&#x51FA; _instance &#x6765;&#x81EA; loading._instance_processor 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125def _instance_processor( mapper, context, result, path, adapter, only_load_props=None, refresh_state=None, polymorphic_discriminator=None, _polymorphic_from=None): &quot;&quot;&quot;Produce a mapper level row processor callable which processes rows into mapped instances.&quot;&quot;&quot;...identity_class = mapper._identity_class...def _instance(row): # determine the state that we&apos;ll be populating if refresh_identity_key: # fixed state that we&apos;re refreshing state = refresh_state instance = state.obj() dict_ = instance_dict(instance) isnew = state.runid != runid currentload = True loaded_instance = False else: # look at the row, see if that identity is in the # session, or we have to create a new one identitykey = ( identity_class, tuple([row[column] for column in pk_cols]) ) instance = session_identity_map.get(identitykey) if instance is not None: # existing instance state = instance_state(instance) dict_ = instance_dict(instance) isnew = state.runid != runid currentload = not isnew loaded_instance = False if version_check and not currentload: _validate_version_id(mapper, state, dict_, row, adapter) else: # create a new instance # check for non-NULL values in the primary key columns, # else no entity is returned for the row if is_not_primary_key(identitykey[1]): return None isnew = True currentload = True loaded_instance = True instance = mapper.class_manager.new_instance() dict_ = instance_dict(instance) state = instance_state(instance) state.key = identitykey # attach instance to session. state.session_id = session_id session_identity_map._add_unpresent(state, identitykey) # populate. this looks at whether this state is new # for this load or was existing, and whether or not this # row is the first row with this identity. if currentload or populate_existing: # full population routines. Objects here are either # just created, or we are doing a populate_existing # be conservative about setting load_path when populate_existing # is in effect; want to maintain options from the original # load. see test_expire-&gt;test_refresh_maintains_deferred_options if isnew and (propagate_options or not populate_existing): state.load_options = propagate_options state.load_path = load_path _populate_full( context, row, state, dict_, isnew, load_path, loaded_instance, populate_existing, populators) if isnew: if loaded_instance: if load_evt: state.manager.dispatch.load(state, context) if persistent_evt: loaded_as_persistent(context.session, state.obj()) elif refresh_evt: state.manager.dispatch.refresh( state, context, only_load_props) if populate_existing or state.modified: if refresh_state and only_load_props: state._commit(dict_, only_load_props) else: state._commit_all(dict_, session_identity_map) else: # partial population routines, for objects that were already # in the Session, but a row matches them; apply eager loaders # on existing objects, etc. unloaded = state.unloaded isnew = state not in context.partials if not isnew or unloaded or populators[&quot;eager&quot;]: # state is having a partial set of its attributes # refreshed. Populate those attributes, # and add to the &quot;context.partials&quot; collection. to_load = _populate_partial( context, row, state, dict_, isnew, load_path, unloaded, populators) if isnew: if refresh_evt: state.manager.dispatch.refresh( state, context, to_load) state._commit(dict_, to_load) return instance...return _instance note: &#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x5148;&#x4E0D;&#x8C08;&#x5176;&#x4ED6;&#x7684; _instance &#x5904;&#x7406;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x53EA;&#x9009;&#x53D6;&#x4E86;&#x6211;&#x4EEC;&#x8FD9;&#x4E2A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7684;&#x8FD0;&#x884C;&#x8F68;&#x8FF9;&#x3002;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x53D1;&#x73B0;&#xFF0C;proc &#x51FD;&#x6570;&#x5C31;&#x662F;&#x8FD9;&#x91CC;&#x7684; _instance &#x51FD;&#x6570;&#x3002; &#x4ECE;&#x4E0A;&#x9762;&#x7684; session_identity_map &#x548C; identitykey &#x53EF;&#x4EE5;&#x770B;&#x51FA;&#x9488;&#x5BF9;(&#x7C7B;&#x540D; + &#x4E3B;&#x952E;&#xFF09;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x5B58;&#x50A8;&#x7F13;&#x5B58;&#x5BF9;&#x8C61;,&#x9488;&#x5BF9;&#x76F8;&#x540C;&#x4E3B;&#x952E;&#x7684;ID&#x548C;&#x7C7B;&#x4F1A;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#x3002; &#x7528;&#x6211;&#x4EEC;&#x7684;&#x6848;&#x4F8B;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#xFF0C;A(1) &#x6709;&#x4E09;&#x6761;&#x6570;&#x636E;&#xFF0C;A(2) &#x6709;&#x4E24;&#x6761;&#x6570;&#x636E;&#x3002;&#x6700;&#x540E;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x542B;&#x6709;(5)&#x6761;&#x6570;&#x636E;&#x7684; list&#x3002;1list(A1, A1, A2, A1, A2) util.unique_list &#x5904;&#x7406;&#x51FD;&#x6570;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x8F7B;&#x6613;&#x7684;&#x5728; _collections.py &#x4E2D;&#xFF0C;&#x770B;&#x5230; unique_list 1234567891011def unique_list(seq, hashfunc=None): seen = set() seen_add = seen.add if not hashfunc: return [x for x in seq if x not in seen and not seen_add(x)] else: return [x for x in seq if hashfunc(x) not in seen and not seen_add(hashfunc(x))] &#x7ECF;&#x8FC7;&#x4E0A;&#x9762;&#x7684;&#x5206;&#x6790;&#xFF0C;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6E05;&#x695A;&#x7684;&#x77E5;&#x9053;&#xFF1A; seq &#x5C31;&#x662F;&#x6211;&#x4EEC;&#x6700;&#x540E;&#x5F97;&#x51FA;&#x7684;&#x542B;&#x6709;&#x7F13;&#x5B58;&#x5BF9;&#x8C61;&#x7684; list; hashfunc &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x5185;&#x7F6E;&#x7684; id &#x51FD;&#x6570;; &#x540C;&#x4E00;&#x5BF9;&#x8C61;&#x7684; hash &#x503C;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF1B; &#x7EFC;&#x4E0A;&#x6240;&#x8FF0;&#xFF1A;&#x6240;&#x4EE5;&#x6700;&#x540E;&#x6211;&#x4EEC;&#x5F97;&#x51FA;&#x53EA;&#x542B;&#x6709;&#x4E24;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;(list) &#x603B;&#x7ED3; sqlalchemy &#x8FD9;&#x6837;&#x7684;&#x505A;&#x6CD5;&#xFF0C;&#x4F1A;&#x4F7F;&#x6211;&#x4EEC;&#x548C;SQL&#x4E4B;&#x95F4;&#x4EA7;&#x751F;&#x7591;&#x60D1;&#x3002; &#x5206;&#x6790;&#x5F97;&#x51FA;&#xFF0C;sqlalchemy &#x5728;&#x505A;&#x5355; entity &#x67E5;&#x8BE2;&#x65F6;&#xFF0C;&#x4F1A;&#x5BF9;&#x540C;&#x4E00;&#x6761;&#x6570;&#x636E;&#x7684;&#x5BF9;&#x8C61;&#x91CD;&#x590D;&#x5229;&#x7528;&#x3002;","tags":[]},{"title":"Centos 开发端口之旅","date":"2017-09-12T03:31:49.000Z","path":"server/centos.html","text":"Centos &#x5F00;&#x53D1;&#x7AEF;&#x53E3;&#x4E4B;&#x65C5; &#x53D1;&#x8F6B;&#x4E4B;&#x59CB; &#x4ED4;&#x7EC6;&#x7AEF;&#x8BE6; &#x5343;&#x8F9B;&#x4E07;&#x82E6; &#x82E6;&#x5C3D;&#x7518;&#x6765; &#x53D1;&#x8F6B;&#x4E4B;&#x59CB;&#x7ECF;&#x5E38;&#x5728;&#x6211;&#x4EEC;&#x5BF9;&#x63A5;&#x7B2C;&#x4E09;&#x65B9;&#x5E73;&#x53F0;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x5230;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x63A8;&#x9001;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x670D;&#x52A1;&#x5668;&#x3002;&#x4F46;&#x662F;&#x7ECF;&#x5E38;&#x5728;&#x5F00;&#x53D1;&#x7684;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x8FD9;&#x4E2A;&#x5BF9;&#x63A5;&#x5C31;&#x663E;&#x5F97;&#x975E;&#x5E38;&#x9EBB;&#x70E6;&#x4E86;&#x3002;&#x7ECF;&#x8FC7;&#x67E5;&#x627E;&#x8D44;&#x6599; &#x53CD;&#x5411;&#x4EE3;&#x7406;&#xFF0C;&#x5177;&#x4F53;&#x53C2;&#x8003;&#x4E86;&#x962E;&#x8001;&#x5E08;&#x7684;ssh&#x7AEF;&#x53E3;&#x8F6C;&#x53D1;. &#x4ED4;&#x7EC6;&#x7AEF;&#x8BE6;&#x9605;&#x8BFB;&#x962E;&#x8001;&#x5E08;&#x7684;&#x6587;&#x7AE0;&#x540E;&#xFF0C;&#x53D1;&#x73B0;&#x4EE3;&#x7406;&#x7AEF;&#x53E3;&#x975E;&#x5E38;&#x7B80;&#x5355;&#x3002; 1ssh -r remote_port:127.0.0.1:5000 remote_server &#x56E0;&#x4E3A;&#x5728;&#x963F;&#x91CC;&#x4E91;&#x4E70;&#x4E86;&#x4E00;&#x53F0;&#x65B0;&#x7684;&#x670D;&#x52A1;&#x5668;&#xFF0C;&#x56E0;&#x6B64;&#xFF0C;&#x8D76;&#x7D27;&#x5C06; remote_port &#x7684; nginx &#x914D;&#x7F6E;&#x597D;&#xFF0C;&#x8BA9;&#x6211;&#x4EEC;&#x80FD;&#x591F;&#x76F4;&#x63A5;&#x901A;&#x8FC7;IP + &#x7AEF;&#x53E3;&#x53F7;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x5230;&#x3002; nginx &#x914D;&#x7F6E;&#x5982;&#x4E0B;&#xFF1A;1234567891011121314151617server { listen 9000; client_max_body_size 4G; error_page 500 501 502 /500.html; server_name rabbit_server; location / { proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-Real_IP $remote_addr; proxy_redirect off; proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504; proxy_pass http://localhost:9000; }} &#x5F00;&#x59CB;&#x6211;&#x4EEC;&#x7684;&#x7B2C;&#x4E00;&#x6B21;&#x8BBF;&#x95EE;&#x3002; 1ssh -R 9000:127.0.0.1:5000 test_server(1.1.1.1) # &#x5047;&#x8BBE;IP &#x662F; &#x8FD9;&#x6837; &#x63A5;&#x7740;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x4E2D;&#x8F93;&#x5165;&#x5730;&#x5740;&#xFF1A; 1http://1.1.1.1:9000 &#x5343;&#x8F9B;&#x4E07;&#x82E6;&#x4E3A;&#x4EC0;&#x4E48;&#x8BBF;&#x95EE;&#x4E0D;&#x5230;&#xFF1F;&#x96BE;&#x9053;&#x662F; nginx &#x914D;&#x7F6E;&#x4E0D;&#x5BF9;&#x3002;&#x56E0;&#x6B64;&#x6211;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x9A8C;&#x8BC1;&#x4E86; nginx &#x662F;&#x5426;&#x80FD;&#x591F;&#x8BBF;&#x95EE;&#x3002; 1curl http://1.1.1.1:9000 &#x7136;&#x800C;&#x662F;&#x6709;&#x6570;&#x636E;&#x8FD4;&#x56DE;&#x7684;&#x3002; &#x539F;&#x6765;&#x662F;&#x5FD8;&#x8BB0;&#x4E86;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x7684;&#x9632;&#x706B;&#x5899;&#x9650;&#x5236;&#x4E86;&#x7AEF;&#x53E3;&#x3002; centos7 &#x5173;&#x95ED;&#x9632;&#x706B;&#x5899;&#x548C;selinux Centos Linux &#x5F00;&#x542F;&#x7AEF;&#x53E3; - &#x89E3;&#x51B3;Centos&#x53D1;&#x5E03;&#x670D;&#x52A1;&#x5916;&#x7F51;&#x8BBF;&#x95EE;&#x4E0D;&#x4E86;&#x7684;&#x95EE;&#x9898; CentOS7&#x4F7F;&#x7528;firewalld&#x6253;&#x5F00;&#x5173;&#x95ED;&#x9632;&#x706B;&#x5899;&#x3001;&#x7AEF;&#x53E3; CentOS 7&#x5F00;&#x653E;&#x7AEF;&#x53E3;&#x548C;&#x5173;&#x95ED;&#x9632;&#x706B;&#x5899; &#x53C2;&#x8003;&#x4EE5;&#x4E0A;&#x6587;&#x6848;&#x540E;&#xFF0C;&#x624D;&#x4E86;&#x89E3;&#x5230; CentOS 7 &#x4EE5;&#x540E;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x4F7F;&#x7528;&#x7684;&#x662F; firewalld &#x9632;&#x706B;&#x5899;&#x3002;&#x63A5;&#x7740;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5; &#x4F7F;&#x7528; firewalld-cmd &#x547D;&#x4EE4;&#x6765;&#x5F00;&#x653E;&#x6211;&#x4EEC;&#x7684;&#x7AEF;&#x53E3;&#x53F7;&#x4E86;&#x3002; &#x53E6;&#x5916;&#x4E00;&#x79CD;&#x4F7F;&#x7528;&#x7684;&#x975E;&#x5E38;&#x5E7F;&#x6CDB;&#x7684;: iptables &#x5C31;&#x4E0D;&#x518D;&#x8FD9;&#x91CC;&#x4ECB;&#x7ECD;&#x4E86;&#xFF0C;&#x6709;&#x5174;&#x8DA3;&#x7684;&#x670B;&#x53CB;&#x53EF;&#x4EE5;&#x9605;&#x8BFB;iptables&#x5B98;&#x65B9;&#x6587;&#x6863;-&#x8F6C;&#x8F7D; 123456# &#x67E5;&#x770B;&#x5F53;&#x524D;&#x6240;&#x6709;&#x5F00;&#x653E;&#x7684;&#x7AEF;&#x53E3;&#x53F7;firewall-cmd --list-ports# &#x5F00;&#x653E;&#x7AEF;&#x53E3;&#x53F7;firewall-cmd --zone=dmz --permanent --add-port=9000/tcp# &#x6DFB;&#x52A0;&#x7AEF;&#x53E3;&#x53F7;&#x662F;&#x52A8;&#x6001;&#x5237;&#x65B0;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;firewall-cmd --reload &#x6CE8;&#x610F;: &#x2013;permanent &#x662F;&#x6C38;&#x4E45;&#x5F00;&#x653E;&#x7AEF;&#x53E3;&#x53F7;&#x3002; &#x2013;zone &#x8BF7;&#x53C2;&#x8003;&#x5B98;&#x65B9;&#x6587;&#x6863; zone &#x533A;&#x57DF;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5927;&#x81F4;&#x76F8;&#x5F53;&#x4E8E;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x7684;&#x7C7B;&#x578B;&#x3002;&#xFF08;&#x516C;&#x5171;&#x7F51;&#x7EDC;&#xFF0C;&#x5BB6;&#x5EAD;&#x7F51;&#x7EDC;&#xFF0C;&#x529E;&#x516C;&#x7F51;&#x7EDC;&#x4EE5;&#x53CA;&#x5185;&#x7F51;&#x7684;&#x533A;&#x522B;&#xFF09; &#x82E6;&#x5C3D;&#x7518;&#x6765;&#x914D;&#x7F6E;&#x597D;&#x8FD9;&#x4E00;&#x5207;&#x4E4B;&#x540E;&#xFF0C;&#x6211;&#x60F3;&#x603B;&#x4E8E;&#x53EF;&#x4EE5;&#x5728;&#x5916;&#x7F51;&#x8BBF;&#x95EE;&#x6211;&#x7684;&#x670D;&#x52A1;&#x4E86;&#x5427;&#x3002;&#x6700;&#x540E;&#x5F00;&#x5FC3;&#x7684;&#x5728;&#x6D4F;&#x89C8;&#x5668;&#x91CC;&#x9762;&#x8F93;&#x5165;&#x4E86;&#xFF1A; 1http://1.1.1.1:9000 /(&#x3112;o&#x3112;)/~~&#xFF0C;&#x7ED3;&#x679C;&#x4F9D;&#x7136;&#x662F;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x3002; &#x5E78;&#x8FD0;&#x7684;&#x662F;&#xFF0C;&#x6211;&#x5728;&#x57FA;&#x53CB;&#x7FA4;&#x53BB;&#x5410;&#x69FD;&#x8FD9;&#x4E00;&#x5207;&#xFF0C;&#x4ED6;&#x4EEC;&#x7ED9;&#x6211;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x6761;&#x660E;&#x8DEF;&#x3002; &#x739B;&#x5FB7;&#xFF0C;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x670D;&#x52A1;&#x5668;&#x9700;&#x8981;&#x914D;&#x7F6E;&#x5BF9;&#x5E94;&#x7684;&#x5B89;&#x5168;&#x7EC4;&#x3002; &#x5728;&#x963F;&#x91CC;&#x4E91;&#x7684;&#x5B89;&#x5168;&#x7EC4;&#x91CC;&#x9762;&#x6DFB;&#x52A0;&#x4E0A;&#x4E86;&#x6211;&#x7684; 9000 &#x7AEF;&#x53E3;&#x540E;&#xFF0C;&#x7EC8;&#x4E8E;&#x53EF;&#x4EE5;&#x5728;&#x5916;&#x7F51;&#x6210;&#x529F;&#x8BBF;&#x95EE;&#x6211;&#x7684;&#x670D;&#x52A1;&#x4E86;&#x3002;&#x6211;&#x8C03;&#x8BD5;&#x7B2C;&#x4E09;&#x65B9;&#x5E73;&#x53F0;&#x4E5F;&#x65B9;&#x4FBF;&#x4E86;&#x8BB8;&#x591A;&#x3002; note: &#x5982;&#x679C;&#x5927;&#x5BB6;&#x6709;&#x8FD9;&#x6837;&#x7684;&#x9700;&#x6C42;&#xFF0C;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x73B0;&#x6210;&#x7684; ngrok &#x7B49;&#x3002; &#x5199;&#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x65F6;&#xFF0C;&#x5F53;&#x65F6;&#x4E3B;&#x8981;&#x6536;&#x83B7;&#x4E1C;&#x897F;&#x662F;&#xFF1A; &#x5B66;&#x4F1A;&#x4E86;&#x5982;&#x4F55;&#x5728;&#x670D;&#x52A1;&#x5668;&#x4E0A;&#x64CD;&#x4F5C;&#x9632;&#x706B;&#x5899;&#x5F00;&#x653E;&#x548C;&#x5173;&#x95ED;&#x7AEF;&#x53E3;&#x3002; &#x4E86;&#x89E3;&#x5230;&#x4E86;&#x963F;&#x91CC;&#x4E91;&#x670D;&#x52A1;&#x5668;&#x7684;&#x5751;&#x3002;","tags":[]},{"title":"jQuery 第一课分析 无new构造模式与链式调用","date":"2017-02-08T03:19:36.000Z","path":"jquery/constructor.html","text":"jQuery &#x7684;&#x65E0; new &#x6784;&#x9020;&#x6A21;&#x5F0F; &#x5206;&#x6790; &#x5C1D;&#x8BD5; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B; &#x5728;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x521D;&#x59CB;&#x5316; jQuery &#x7684;&#x65E0; new &#x6784;&#x9020;&#x6A21;&#x5F0F;&#x6211;&#x4EEC;&#x7ECF;&#x5E38;&#x4F7F;&#x7528; jQuery &#x7684;&#x4EE3;&#x7801;&#x5982;&#x4E0B;: 12$(&apos;#id&apos;).find(xxx).val();$(&apos;#id&apos;).html(); &#x5206;&#x6790;&#x4ECE;&#x4E0A;&#x9762;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x770B;&#x51FA; $(&apos;#id&apos;) &#x6BCF;&#x6B21;&#x90FD;&#x662F;&#x6784;&#x9020;&#x4E86;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x6CA1;&#x6709;&#x4F7F;&#x7528; new &#x5173;&#x952E;&#x5B57;&#x6765;&#x521B;&#x5EFA;&#x3002; &#x5C1D;&#x8BD5;&#x6211;&#x4EEC;&#x5C1D;&#x8BD5;&#x81EA;&#x5DF1;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x8FD9;&#x6837;&#x7684;&#x4E00;&#x4E2A;&#x7C7B;&#x5427;&#x3002; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7C7B;12345678910var Demo = function(selector, context) {};Demo.prototype = { hello: function() { return &apos;hello my name is &apos; + this.name; }, name: &apos;Demo&apos;};var demo = new Demo();demo.name();// hello my name is Demo &#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x5C31;&#x662F;&#x5728;javascript&#x4E2D;&#xFF0C;&#x662F;&#x7C7B;&#x7684;&#x8868;&#x73B0;&#x5F62;&#x5F0F;&#x3002;&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x7C7B;&#x540D;&#x53EB;Demo&#x7684;&#x7C7B;&#x3002;&#x8FD9;&#x91CC;&#x7684;Demo.prototype &#x6307;&#x7684;&#x5C31;&#x662F;Demo&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x65B9;&#x6CD5;&#x6709;&#x54EA;&#x4E9B;&#x3002;&#x4F46;&#x662F;&#x8FD9;&#x91CC;&#xFF0C;&#x8FD8;&#x6CA1;&#x6709;&#x8FBE;&#x5230;&#x6211;&#x4EEC;&#x7684;&#x76EE;&#x7684;&#xFF0C;&#x56E0;&#x6B64;&#x6211;&#x4EEC;&#x7EE7;&#x7EED;&#x2026; &#x5728;&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x91CC;&#x9762;&#x521D;&#x59CB;&#x5316;1234567891011var Demo = function(selector, context) { return new Demo();};Demo.prototype = { hello: function() { return &apos;hello my name is &apos; + this.name; }, name: &apos;Demo&apos;};var demo = new Demo();// &#x4E0D;&#x96BE;&#x53D1;&#x73B0;&#x8FD9;&#x91CC;&#x4F1A;&#x9677;&#x5165;&#x6B7B;&#x5FAA;&#x73AF;&#xFF0C;&#x51FA;&#x73B0;&#x6808;&#x6EA2;&#x51FA;&#x9519;&#x8BEF; &#x5728; javascript &#x4E2D;&#xFF0C; prototype &#x662F;&#x4E00;&#x4E2A;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6211;&#x4EEC;&#x53EA;&#x8981;&#x5728; prototype &#x91CC;&#x9762;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#xFF0C;&#x5C06;&#x5B83;&#x81EA;&#x5DF1;&#x8FD4;&#x56DE;&#x51FA;&#x53BB;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x5B9E;&#x4F8B;&#x5316;&#x6548;&#x679C;&#xFF08;&#x6211;&#x4EEC;&#x771F;&#x662F;&#x592A;&#x806A;&#x660E;&#x4E86;&#xFF09;&#x3002;&#x4E8E;&#x662F;&#x6211;&#x4EEC;&#x5C31;&#x6765;&#x5C1D;&#x8BD5;&#x4E00;&#x4E0B;&#x5427;&#x2026; 1234567891011121314var Demo = function(selector, context) { return Demo.prototype.init();};Demo.prototype = { init: function() { return this; }, hello: function() { return &apos;hello my name is &apos; + this.name; }, name: &apos;Demo&apos;};Demo().hello();// hello my name is Demo perfect &#x6211;&#x4EEC;&#x5C31;&#x8FBE;&#x5230;&#x4E86;&#x65E0;new&#x7684;&#x6784;&#x9020;&#x6A21;&#x5F0F;&#xFF0C;&#x76F4;&#x63A5;&#x8C03;&#x7528;&#x5B9E;&#x4F8B;&#x5316;&#x65B9;&#x6CD5;&#x7684;&#x76EE;&#x7684;&#x3002;&#x3002;&#x3002;&#x3002;== &#x600E;&#x4E48;&#x611F;&#x89C9;&#x4E00;&#x5207;&#x90FD;&#x592A;&#x5BB9;&#x6613;&#x4E86;&#x3002;&#x3002;&#x3002;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x6D4B;&#x8BD5;&#x4E00;&#x4E0B; 123456// &#x7EE7;&#x4EE5;&#x4E0A;&#x4EE3;&#x7801;var demo = Demo();demo.name = &apos;world!&apos;;var demo1 = Demo();demo1.hello();// hello my name is world! &#x1F621; &#x4E3A;&#x6BDB;&#x8FD9;&#x91CC;&#x7684;demo1 &#x7684; name &#x5C31;&#x53D8;&#x6210;&#x4E86; world! &#x4E86;&#x554A;&#xFF0C;&#x4E0D;&#x5E94;&#x8BE5;&#x662F; demo &#x7684; name &#x662F; world! &#x5417;? &#x548B;&#x4EEC;&#x4ED4;&#x7EC6;&#x5206;&#x6790;&#x4E00;&#x4E0B;&#xFF0C;&#x54E6;&#xFF0C;&#x539F;&#x6765;&#x6211;&#x4EEC;&#x5728;&#x6784;&#x9020;&#x51FD;&#x6570;&#x91CC;&#x9762;&#x6CA1;&#x6709;&#x4F7F;&#x7528; new &#x5173;&#x952E;&#x5B57;&#x6765;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61;&#xFF0C;&#x5728; javascript &#x4E2D; new &#x5173;&#x952E;&#x5B57;&#x7684;&#x4F5C;&#x7528;&#x662F;&#x5206;&#x914D; this &#x7684;&#x4F5C;&#x7528;&#x57DF;&#xFF0C;&#x6CA1;&#x6709;&#x4F7F;&#x7528;new&#x5173;&#x952E;&#x5B57;&#x7684;&#x8BDD;&#x9ED8;&#x8BA4;&#x6307;&#x5411;&#x5168;&#x5C40;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x8BF4;&#x6211;&#x4EEC;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x6CA1;&#x6709;&#x88AB;&#x9694;&#x79BB;&#xFF0C;&#x56E0;&#x6B64;&#x5B83;&#x4EEC;&#x90FD;&#x662F;&#x4F7F;&#x7528;&#x4E86;&#x540C;&#x4E00;&#x4E2A;&#x4F5C;&#x7528;&#x57DF;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x6765;&#x7A0D;&#x7A0D;&#x4FEE;&#x6539;&#x4E00;&#x4E0B;&#x3002; 12345678910111213var Demo = function(selector, context) { return new Demo.prototype.init();};Demo.prototype = { init: function() { return this; }, hello: function() { return &apos;hello my name is &apos; + this.name; }, name: &apos;Demo&apos;};Demo().hello(); &#x7136;&#x540E;&#x548B;&#x4EEC;&#x4E00;&#x8FD0;&#x884C; &#x3002;&#x3002;&#x3002;&#x3002;&#x3002; &#x5751;&#x7239;&#x554A;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48; Demo() &#x5BF9;&#x8C61;&#x627E;&#x4E0D;&#x5230; hello&#x65B9;&#x6CD5;&#x4E86;&#x3002;&#x601D;&#x8003;&#x4E86;&#x534A;&#x5929;&#x89E3;&#x51B3;&#x4E0D;&#x4E86;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x6765;&#x770B;&#x770B; jQuery &#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x5427;&#x3002; 12// Give the init function the jQuery prototype for later instantiationjQuery.fn.init.prototype = jQuery.fn; &#x54E6;&#xFF0C;&#x539F;&#x6765;&#x5982;&#x6B64;&#xFF0C;&#x5B83;&#x662F;&#x5C06; jQuery.fn.init &#x7684;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61; &#x6307;&#x5411;&#x4E86; jQuery.fn &#x7684;&#x5B9E;&#x4F8B;&#x5316;&#x5BF9;&#x8C61;&#x3002;(&#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; jQuery.fn &#x5176;&#x5B9E;&#x5C31;&#x662F;&#x7B49;&#x4E8E; jQuery.prototype&#x3002;)&#x6240;&#x4EE5;&#xFF0C;&#x6211;&#x4EEC;&#x6765;&#x7EE7;&#x7EED;&#x6539;&#x9020;&#x6211;&#x4EEC;&#x7684;&#x4EE3;&#x7801;&#x3002;&#x3002;&#x3002; 123456789101112131415161718192021var Demo = function(selector, context) { return new Demo.prototype.init();};Demo.prototype = { init: function() { return this; }, hello: function() { return &apos;hello my name is &apos; + this.name; }, name: &apos;Demo&apos;};Demo.prototype.init.prototype = Demo.prototype;var demo = Demo();demo.name = &apos;world!&apos;;demo.hello();// hello my name is world!var demo1 = Demo();demo1.hello();// hello my name is Demo &#x81F3;&#x6B64;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x5B8C;&#x7F8E;&#x53C2;&#x8003; jQuery &#x5B9E;&#x73B0;&#x4E86;&#x6211;&#x4EEC;&#x81EA;&#x5DF1;&#x7684;&#x65E0; new&#x6784;&#x9020;&#x65B9;&#x6CD5;&#x3002; &#x53C2;&#x8003;&#x6765;&#x6E90;&#xFF1A; &#x827E;&#x4F26; Aaron &#x7684;&#x535A;&#x5BA2; jQuery &#x6E90;&#x7801;","tags":[{"name":"jquery","slug":"jquery","permalink":"http://www.lagel.me/tags/jquery/"},{"name":"javascript","slug":"javascript","permalink":"http://www.lagel.me/tags/javascript/"}]},{"title":"indexedDB使用","date":"2017-01-20T02:20:05.000Z","path":"html5/indexeddb.html","text":"&#x9700;&#x6C42;&#x8BF4;&#x660E;&#x6700;&#x8FD1;&#x5B66;&#x4E60;&#x5173;&#x4E8E;&#x524D;&#x7AEF;&#x7F13;&#x5B58;&#x7684;&#x95EE;&#x9898;&#x3002;&#x4E0B;&#x6765;&#x6765;&#x4ECB;&#x7ECD;&#x4E00;&#x4E0B;&#x5173;&#x4E8E;indexedDB&#x7684;&#x4E00;&#x4E2A;&#x7B80;&#x5355;Demo&#x3002;&#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;indexedDB&#x76EE;&#x524D;&#x53EA;&#x652F;&#x6301;&#x65B0;&#x7248;&#x6D4F;&#x89C8;&#x5668;&#x3002;&#x5177;&#x4F53;&#x53EF;&#x4EE5;&#x53C2;&#x8003;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x3002;&#x518D;&#x6765;&#x8BF4;&#x8BF4;&#x8FD9;&#x6B21;Demo&#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x4E3B;&#x8981;&#x95EE;&#x9898;&#xFF0C;&#x5728;&#x6211;&#x7684;&#x7528;&#x6237;&#x573A;&#x666F;&#x4E2D;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x7528;&#x6237;&#x662F;&#x79FB;&#x52A8;&#x7F51;&#x7EDC;&#xFF0C;&#x52A0;&#x8F7D;&#x901F;&#x5EA6;&#x8D85;&#x6162;&#x4E14;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x9274;&#x4E8E;&#x4E0D;&#x4F1A;&#x7ECF;&#x8FC7;&#x66F4;&#x65B0;&#x9759;&#x6001;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x3002;&#x56E0;&#x6B64;&#x6253;&#x7B97;&#x4F7F;&#x7528;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x6765;&#x5B9E;&#x73B0;&#x8D44;&#x6E90;&#x7F13;&#x5B58;&#xFF08;&#x4E0D;&#x8981;&#x95EE;&#x6211;&#x4E3A;&#x4EC0;&#x4E48;&#x4E0D;&#x4F7F;&#x7528;CDN&#xFF09;&#x3002; &#x5206;&#x6790;&#x5B9E;&#x73B0;&#x65B9;&#x6848; &#x7528;&#x6237;&#x7AEF;&#x7F51;&#x7EDC;&#x4E0D;&#x7A33;&#x5B9A;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;&#x5C3D;&#x91CF;&#x8F83;&#x5C11;&#x7528;&#x6237;&#x8BF7;&#x6C42;&#xFF0C;&#x7279;&#x522B;&#x662F;&#x9488;&#x5BF9;&#x4E8E;&#x975E;&#x5FC5;&#x8981;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;js &#x811A;&#x672C;&#x3002; &#x4F7F;&#x7528;&#x4F55;&#x79CD;&#x7F13;&#x5B58;&#x624B;&#x6BB5;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;&#x8FD9;&#x4E2A;&#x95EE;&#x9898;&#x4E5F;&#x5C31;&#x7B80;&#x5316;&#x5230;&#x4E86;&#x4F7F;&#x7528;&#x4F55;&#x79CD;&#x65B9;&#x6848;&#x6765;&#x5B9E;&#x73B0;&#x524D;&#x7AEF;&#x672C;&#x5730;&#x5B58;&#x50A8;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x6709;&#xFF08;localStorage, indexedDB, websql&#xFF09;&#xFF0C;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x91C7;&#x7528; indexedDB&#x3002; &#x5982;&#x4F55;&#x89E3;&#x51B3;&#x66F4;&#x65B0;&#x95EE;&#x9898;&#x3002; &#x89E3;&#x51B3;&#x65B9;&#x6848;&#xFF1A;&#x6BCF;&#x6B21;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x65F6;&#xFF0C;&#x66F4;&#x65B0;&#x4E00;&#x4E0B;&#x4F7F;&#x7528;&#x65F6;&#x95F4;&#x3002;&#x8BBE;&#x7F6E;&#x811A;&#x672C;&#x7684;&#x540D;&#x79F0;&#x4E3A;&#x7D22;&#x5F15;&#x5B57;&#x6BB5;&#x3002;&#x4E5F;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4F7F;&#x7528;&#x65F6;&#x95F4;&#xFF0C;&#x5E9F;&#x5F03;&#x6389;&#x5DF2;&#x4E0D;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x5185;&#x5BB9;&#xFF0C;&#x8282;&#x7EA6;&#x7A7A;&#x95F4;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x7B2C;&#x4E00;&#x9636;&#x6BB5;&#xFF0C;&#x521D;&#x59CB;&#x5316; indexDB1234567891011121314151617181920212223242526272829303132var DB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB, supportDB = !!DB, db = null; if (supportDB) { var tableName = &apos;js-cache&apos;, openRequest = DB.open(tableName, 1); openRequest.onupgradeneeded = function(e) { var thisDB = e.target.result, store = null; // &#x89E3;&#x51B3;&#x591A;&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;objectStore &#x5DF2;&#x5B58;&#x5728;&#x95EE;&#x9898; if (!thisDB.objectStoreNames.contains(tableName)) { store = thisDB.createObjectStore( tableName, {autoIncrement: true} ); } else { store = e.currentTarget.transaction.objectStore(tableName); } // &#x89E3;&#x51B3;&#x591A;&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x7D22;&#x5F15;&#x5B58;&#x5728;&#x95EE;&#x9898; if (store.indexNames.contains(&apos;name&apos;)) { store.deleteIndex(&apos;name&apos;); } store.createIndex(&apos;name&apos;, &apos;name&apos;, { unique: true }); } openRequest.onsuccess = function(e) { db = e.target.result; } } &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A; indexedDB &#x6570;&#x636E;&#x5E93;&#xFF0C;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; `index` &#x7D22;&#x5F15;&#xFF0C;&#x6839;&#x636E;&#x5B58;&#x50A8;&#x7684;&#x6570;&#x636E; `name` &#x5B57;&#x6BB5;. &#x7B2C;&#x4E8C;&#x9636;&#x6BB5;&#xFF0C;&#x5B9E;&#x73B0;&#x7F13;&#x5B58;&#x548C;&#x8BFB;&#x53D6;&#x7F13;&#x5B58;12345678910111213141516171819202122232425262728293031323334353637383940414243...// &#x83B7;&#x53D6;&#x672C;&#x5730;&#x7F13;&#x5B58;function getCache(name, callback) { if (!supportDB) return callback(false); var transaction = db.transaction([tableName], &apos;readonly&apos;), store = transaction.objectStore(tableName), request = store.index(&apos;name&apos;).get(name); request.onsuccess = function(e) { var result = e.target.result; if(!!result) { callback(true, result); } else { callback(false); } } request.onerror = function(e) { callback(false); }}// &#x8BB0;&#x5F55;&#x5230;&#x672C;&#x5730;&#x7F13;&#x5B58;function setCache(name, data) { if (!supportDB) return; var transaction = db.transaction([tableName], &apos;readwrite&apos;), store = transaction.objectStore(tableName), cache = { name: name, content: data, created: new Date() }, request = store.add(cache); request.onerror = function(e) { console.log(&apos;Error&apos;, e.target.error.name); } request.onsuccess = function(e) {}} setCahce &#x51FD;&#x6570;&#xFF0C;&#x662F;&#x5C06;&#x4E0B;&#x8F7D;&#x597D;&#x7684; js &#x5185;&#x5BB9;&#x5B58;&#x50A8;&#x5230; indexedDB &#x4E2D;&#xFF0C; getCache &#x51FD;&#x6570;&#x901A;&#x8FC7; `name` &#x7D22;&#x5F15;&#x83B7;&#x53D6;&#x5BF9;&#x5E94;&#x7684; js &#x7F13;&#x5B58;&#x5185;&#x5BB9;&#x3002; &#x7B2C;&#x4E09;&#x9636;&#x6BB5;&#xFF0C;&#x5B9E;&#x73B0;&#x4E1A;&#x52A1;&#x903B;&#x8F91;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768...// &#x7528;&#x6765;&#x8BB0;&#x5F55;&#x5DF2;&#x7ECF;&#x88AB;&#x4F7F;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x5217;&#x8868;var cacheLists = [];// &#x83B7;&#x53D6;&#x672C;&#x5730;&#x7F13;&#x5B58;function getCache (name) { ... // &#x5728;&#x8FD9;&#x91CC;&#x6DFB;&#x52A0;&#x5230; cacheLists &#x5217;&#x8868;&#x4E2D; if(!!result) { cacheLists.push(name); callback(true, result); } ...}...// &#x4E0B;&#x8F7D;&#x67D0;&#x4E2A; js &#x811A;&#x672C;function downloadScript(name) { // &#x67E5;&#x627E;&#x672C;&#x5730;&#x662F;&#x5426;&#x6709;&#x7F13;&#x5B58; getCache(name, function(success, result) { if (success) { insertScriptToHead(data); } else { fetch(name).then( data =&gt; {return data.text();} ).then( data =&gt; { setCache(name, data); insertScriptToHead(data); } ).catch(err =&gt; { console.log(err); }); } });}// &#x6E05;&#x9664;&#x548C;&#x66F4;&#x65B0;&#x7F13;&#x5B58;function removeCache() { if (!supportDB) return; var transaction = db.transaction([tableName], &apos;readwrite&apos;), store = transaction.objectStore(tableName), twoWeek = 1209600000; store.openCursor().onsuccess = function(event) { var cursor = event.target.result; if (cursor) { if (cacheLists.indexOf(cursor.value.name) !== -1) { cursor.value.created = new Date(); cursor.update(cursor.value); } else { var now = new Date(), last = cursor.value.created; if (now - last &gt; twoWeek) { cursor.delete(); } } cursor.continue(); } }}var head = document.head;function insertScriptToHead(scriptContent) { var script = document.createElement(&apos;script&apos;); script.innerHTML = scriptContent; script.type = &apos;text/javascript&apos;; head.appendChild(script);} &#x589E;&#x52A0; cacheLists &#x6765;&#x8BB0;&#x5F55;&#xFF0C;&#x5DF2;&#x7ECF;&#x6B63;&#x5728;&#x88AB;&#x4F7F;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x3002; removeCache &#x51FD;&#x6570;&#xFF0C;&#x662F;&#x7528;&#x6765;&#x66F4;&#x65B0;&#x548C;&#x5220;&#x9664;&#x5DF2;&#x8FC7;&#x671F;&#x7684;&#x7F13;&#x5B58;&#x3002; downloadScript &#x51FD;&#x6570;&#xFF0C;&#x662F;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x7F13;&#x5B58;&#x548C;&#x52A8;&#x6001;&#x5C06; script &#x63D2;&#x5165;&#x5230;&#x7F51;&#x9875;&#x4E2D;&#x3002; &#x5728;&#x8FD9;&#x91CC;&#x79FB;&#x9664;&#x7F13;&#x5B58;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x5728;&#x8FD9;&#x91CC;&#x5B9A;&#x4E49;&#x7684;&#x662F;&#x672A;&#x4F7F;&#x7528;&#x7F13;&#x5B58;&#x8D85;&#x8FC7;14&#x5929;&#xFF0C;&#x5C31;&#x5220;&#x9664;&#x7F13;&#x5B58;&#x3002; &#x6700;&#x540E;&#xFF0C;&#x7ED9;&#x81EA;&#x5DF1;&#x7684;&#x51FD;&#x6570;&#xFF0C;&#x6DFB;&#x52A0;&#x4E0A;&#x95ED;&#x5305;&#xFF0C;&#x963B;&#x6B62; xss &#x653B;&#x51FB;&#x3002;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150// &#x4E3A;&#x4E86;&#x9632;&#x6B62;&#x5176;&#x4ED6;&#x4EBA;&#x76F4;&#x63A5;&#x8C03;&#x7528; donwload &#x51FD;&#x6570;&#xFF0C;&#x6211;&#x4EEC;&#x7ED9;&#x8FD9;&#x6BB5;&#x51FD;&#x6570;&#x52A0;&#x4E0A;&#x95ED;&#x5305;.(function () { // &#x68C0;&#x6D4B; indexedDB &#x517C;&#x5BB9;&#x6027;&#xFF0C;&#x56E0;&#x4E3A;&#x53EA;&#x6709;&#x65B0;&#x7248;&#x672C;&#x6D4F;&#x89C8;&#x5668;&#x652F;&#x6301; var DB = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB; var supportDB = !!DB, db = null; if (supportDB) { var tableName = &apos;js-cache&apos;, openRequest = DB.open(tableName, 1); openRequest.onupgradeneeded = function(e) { console.log(&apos;Upgrading&apos;); var thisDB = e.target.result, store = null; // &#x89E3;&#x51B3;&#x591A;&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;objectStore &#x5DF2;&#x5B58;&#x5728;&#x95EE;&#x9898; if (!thisDB.objectStoreNames.contains(tableName)) { store = thisDB.createObjectStore( tableName, {autoIncrement: true} ); } else { store = e.currentTarget.transaction.objectStore(tableName); } // &#x89E3;&#x51B3;&#x591A;&#x7248;&#x672C;&#x4E4B;&#x540E;&#xFF0C;&#x7D22;&#x5F15;&#x5B58;&#x5728;&#x95EE;&#x9898; if (store.indexNames.contains(&apos;name&apos;)) { store.deleteIndex(&apos;name&apos;); } store.createIndex(&apos;name&apos;, &apos;name&apos;, { unique: true }); } openRequest.onsuccess = function(e) { db = e.target.result; downloads(); removeCache(); } } else { downloads(); } // &#x8FD9;&#x91CC;&#x5199;&#x4E0A; fake uri function downloads() { downloadScript(&apos;http://www.aliyun.com/aliyun-oss-sdk-4.3.0.min.js&apos;); downloadScript(&apos;http://cdn.google.com/RecordRTC.js&apos;); downloadScript(&apos;http://cdn.google.com/gumadapter.js&apos;); downloadScript(&apos;http://cdn.google.com/ping.js&apos;); } // &#x7528;&#x6765;&#x8BB0;&#x5F55;&#x5DF2;&#x7ECF;&#x88AB;&#x4F7F;&#x7528;&#x7684;&#x7F13;&#x5B58;&#x5217;&#x8868; var cacheLists = []; // &#x83B7;&#x53D6;&#x672C;&#x5730;&#x7F13;&#x5B58; function getCache(name, callback) { if (!supportDB) return callback(false); var transaction = db.transaction([tableName], &apos;readonly&apos;), store = transaction.objectStore(tableName), request = store.index(&apos;name&apos;).get(name); request.onsuccess = function(e) { var result = e.target.result; if(!!result) { cacheLists.push(name); callback(true, result); } else { callback(false); } } request.onerror = function(e) { callback(false); } } // &#x8BB0;&#x5F55;&#x5230;&#x672C;&#x5730;&#x7F13;&#x5B58; function setCache(name, data) { if (!supportDB) return; var transaction = db.transaction([tableName], &apos;readwrite&apos;), store = transaction.objectStore(tableName), cache = { name: name, content: data, created: new Date() }, request = store.add(cache); request.onerror = function(e) { console.log(&apos;Error&apos;, e.target.error.name); } request.onsuccess = function(e) {} } // &#x4E0B;&#x8F7D;&#x67D0;&#x4E2A; js &#x811A;&#x672C; function downloadScript(name) { // &#x67E5;&#x627E;&#x672C;&#x5730;&#x662F;&#x5426;&#x6709;&#x7F13;&#x5B58; getCache(name, function(success, result) { if (success) { insertScriptToHead(data); } else { fetch(name).then( data =&gt; {return data.text();} ).then( data =&gt; { setCache(name, data); insertScriptToHead(data); } ).catch(err =&gt; { console.log(err); }); } }); } // &#x6E05;&#x9664;&#x548C;&#x66F4;&#x65B0;&#x7F13;&#x5B58; function removeCache() { if (!supportDB) return; var transaction = db.transaction([tableName], &apos;readwrite&apos;), store = transaction.objectStore(tableName), twoWeek = 1209600000; store.openCursor().onsuccess = function(event) { var cursor = event.target.result; if (cursor) { if (cacheLists.indexOf(cursor.value.name) !== -1) { cursor.value.created = new Date(); cursor.update(cursor.value); } else { var now = new Date(), last = cursor.value.created; if (now - last &gt; twoWeek) { cursor.delete(); } } cursor.continue(); } } } var head = document.head; function insertScriptToHead(scriptContent) { var script = document.createElement(&apos;script&apos;); script.innerHTML = scriptContent; script.type = &apos;text/javascript&apos;; head.appendChild(script); }})(); &#x603B;&#x7ED3; &#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x662F; indexedDB &#x6765;&#x7F13;&#x5B58;&#x672C;&#x5730;&#x6587;&#x4EF6;&#xFF0C;&#x662F;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7684;&#x5B58;&#x50A8;&#x7A7A;&#x95F4;&#x662F;&#x65E0;&#x9650;&#x7684;&#x3002;&#x800C; localstorage &#x9ED8;&#x8BA4;&#x60C5;&#x51B5;&#x4E0B;&#x53EA;&#x6709; 5M, &#x800C; web sql &#x5DF2;&#x7ECF;&#x88AB;&#x5F03;&#x7528;&#x3002; &#x5728;&#x7F13;&#x5B58;&#x6587;&#x4EF6;&#x5F88;&#x591A;&#x7684;&#x65F6;&#x5019;&#x6216;&#x8005;&#x56E0;&#x4E3A;&#x8BFB;&#x53D6;indexedDB&#x9047;&#x5230;&#x6027;&#x80FD;&#x95EE;&#x9898;&#x65F6;&#xFF0C; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; web worker service &#x6765;&#x64CD;&#x4F5C; indexedDB &#x7136;&#x540E;&#x540C;&#x6B65;&#x5230;&#x6211;&#x4EEC;&#x7684; ui &#x7EBF;&#x7A0B;&#x3002;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://www.lagel.me/tags/javascript/"},{"name":"html5","slug":"html5","permalink":"http://www.lagel.me/tags/html5/"},{"name":"indexedDB","slug":"indexedDB","permalink":"http://www.lagel.me/tags/indexedDB/"}]},{"title":"Angular2 图片延迟加载组件","date":"2016-12-29T09:49:37.000Z","path":"ng2/lazyload.html","text":"&#x7B80;&#x4ECB;&#x5728;&#x6700;&#x8FD1;&#x7684;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x4E2D;&#xFF0C;&#x9047;&#x5230;&#x4E86;&#x5728;&#x4E00;&#x4E2A;&#x9875;&#x9762;&#x9700;&#x8981;&#x52A0;&#x8F7D;&#x5F88;&#x591A;&#x5F20;&#x56FE;&#x7247;&#xFF0C;&#x4F46;&#x662F;&#x7528;&#x6237;&#x57FA;&#x672C;&#x4E0A;&#x662F;&#x79FB;&#x52A8;&#x7F51;&#x7EDC;&#xFF0C;&#x6821;&#x56ED;&#x7F51;&#x7EDC;, &#x4E8E;&#x662F;&#x6253;&#x7B97;&#x4F7F;&#x7528;&#x56FE;&#x7247;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#x6280;&#x672F;&#x3002; &#x6CE8;&#x610F;&#xFF0C;&#x6211;&#x7684;&#x6848;&#x4F8B;&#x662F;&#x5728; `ul` `li` &#x4E2D;&#x8FDB;&#x884C;&#xFF0C;&#x6CA1;&#x6709;&#x4F7F;&#x7528; `img`, &#x6211;&#x7684;&#x56FE;&#x7247;&#x662F;&#x4F5C;&#x4E3A;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x52A0;&#x8F7D;&#x3002; &#x7B2C;&#x4E00;&#x7248;&#x56E0;&#x4E3A;&#x662F;&#x7B2C;&#x4E00;&#x6B21;&#x9020;&#x8F6E;&#x5B50;&#xFF0C;&#x6240;&#x4EE5;&#x8FD8;&#x6CA1;&#x6709;&#x53C2;&#x8003; jquery lazyload &#x601D;&#x8DEF; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6307;&#x4EE4;&#x9488;&#x5BF9;&#x6BCF;&#x4E2A;li&#x5143;&#x7D20;&#x3002; &#x5728;&#x6BCF;&#x4E2A;&#x6307;&#x4EE4;&#x4E2D;&#x76D1;&#x542C; window &#x6216;&#x8005; li &#x5143;&#x7D20;&#x7684; parent &#x7684; scroll &#x4E8B;&#x4EF6;&#x3002; &#x5224;&#x65AD;&#x6BCF;&#x4E2A;li&#x5143;&#x7D20;&#x7684;offsetTop&#x503C;&#xFF0C;&#x4E0E;&#x5F53;&#x524D;&#x7684;&#x6EDA;&#x52A8;&#x8DDD;&#x79BB;(scrollTop)&#x548C;&#x5F53;&#x524D;&#x5C4F;&#x5E55;(ul&#x7684;&#x7EDD;&#x5BF9;&#x9AD8;&#x5EA6;)&#x3002; &#x9009;&#x62E9;&#x6027;&#x7684;&#x66F4;&#x65B0;&#x8FDC;&#x7A0B;&#x56FE;&#x7247;&#xFF0C;&#x5E76;&#x6807;&#x6CE8;&#x8BE5;&#x56FE;&#x7247;&#x5DF2;&#x52A0;&#x8F7D;&#xFF0C;&#x4E0D;&#x8981;&#x91CD;&#x590D;&#x52A0;&#x8F7D;&#x8FDC;&#x7A0B;&#x56FE;&#x7247;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051// lazyload.directive.tsimport { Directive, Input, ElementRef, Renderer, HostListener, OnDestroy, AfterViewInit } from &apos;@angular/core&apos;;@Directive({ selector: &apos;[lazy-load]&apos;})export class LazyloadDirective implements AfterViewInit, OnDestroy { @Input(&apos;lazy-load&apos;) data: string; @Input(&apos;parent&apos;) typeName: string = &apos;window&apos;; private parent: HTMLElement | Window = window; private callback: (event) =&gt; void; private target: HTMLElement; private isLoaded: boolean = false; constructor(private el: ElementRef, private renderer: Renderer) { this.callback = (event) =&gt; { if (!this.isLoaded) { this.onScroll(event); } }; } ngOnDestroy() { this.parent.removeEventListener(&apos;scroll&apos;, this.callback, false); } ngAfterViewInit() { this.target = this.el.nativeElement; if (this.typeName === &apos;window&apos;) { this.parent = window; } else { this.parent = document.querySelector(this.typeName) as HTMLElement; } this.parent.addEventListener(&apos;scroll&apos;, this.callback, false); // &#x56E0;&#x4E3A;&#x7B2C;&#x4E00;&#x6B21;&#x8FDB;&#x5165;&#x4E0D;&#x4F1A;&#x89E6;&#x53D1;&#x6EDA;&#x52A8;&#x4E8B;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x624B;&#x52A8;&#x89E6;&#x53D1; this.onScroll(&apos;&apos;); } onScroll(event) { let distance = this.parent[&apos;scrollTop&apos;] || this.parent[&apos;screenY&apos;] || 0, viewHeight = this.parent[&apos;clientHeight&apos;] || this.parent[&apos;innerHeight&apos;] || 0, fold = distance + viewHeight; if (fold &gt;= this.target.offsetTop) { this.isLoaded = true; this.renderer.setElementStyle(this.target, &apos;backgroundImage&apos;, this.data); } }} 1234567&lt;!-- index.html &#x8FD9;&#x91CC;&#x662F;&#x4EE3;&#x7801;&#x7247;&#x6BB5;--&gt;&lt;ul class=&quot;parent&quot;&gt; &lt;li *ngFor=&quot;let page of pages; let idx = index;&quot; [lazy-load]=&apos;page.imageUri&apos; [parent]=&quot;&apos;ul.parent&apos;&quot; [ngClass]=&quot;{&apos;active&apos;: currentPage === idx}&quot;&gt; &lt;span class=&quot;pagenum&quot;&gt;{{idx+1}}&lt;/span&gt; &lt;/li&gt; &lt;li class=&quot;page-add&quot; (click)=&quot;createPage()&quot;&gt;&lt;/li&gt;&lt;/ul&gt; &#x95EE;&#x9898; &#x5728;&#x5C11;&#x91CF;&#x7684;&#x56FE;&#x7247;&#x65F6;&#xFF0C;&#x6548;&#x679C;&#x8FD8;&#x662F;&#x5F88;&#x663E;&#x8457;&#x7684;&#x3002;&#x4F46;&#x662F;&#x5F53;&#x56FE;&#x7247;&#x4E00;&#x591A;&#x65F6;&#xFF0C;&#x5361;&#x987F;&#x975E;&#x5E38;&#x660E;&#x663E;&#x3002; &#x5206;&#x6790; &#x4E8B;&#x4EF6;&#x7684;&#x91CD;&#x590D;&#x76D1;&#x542C;&#x3002; &#x5F88;&#x660E;&#x663E;&#x6211;&#x4EEC;&#x8FD9;&#x91CC;&#x7684;&#x6BCF;&#x4E2A;li&#x90FD;&#x4F1A;&#x6267;&#x884C;&#x4E00;&#x4E2A;&#x6307;&#x4EE4;&#xFF0C;&#x6BCF;&#x4E2A;&#x6307;&#x4EE4;&#x90FD;&#x53C8;&#x91CD;&#x590D;&#x76D1;&#x542C;scroll&#x4E8B;&#x4EF6;&#x3002; Dom &#x7684;&#x591A;&#x6B21;&#x67E5;&#x8BE2;&#x548C;&#x64CD;&#x4F5C;&#x3002; &#x56E0;&#x4E3A;&#x6BCF;&#x4E2A;&#x6307;&#x4EE4;&#x90FD;&#x76D1;&#x542C;&#x4E86;scroll&#x4E8B;&#x4EF6;&#xFF0C;&#x56E0;&#x6B64;&#x6BCF;&#x6B21;&#x6EDA;&#x52A8;&#x90FD;&#x6CA1;&#x6279;&#x91CF;&#x7EA7;&#x7684;&#x67E5;&#x8BE2;dom&#x548C;&#x64CD;&#x4F5C;dom&#x3002; &#x7B2C;&#x4E8C;&#x7248;&#x57FA;&#x4E8E;&#x7B2C;&#x4E00;&#x6B21;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x505A;&#x51FA;&#x4E86;&#x4EE5;&#x4E0B;&#x66F4;&#x6539;&#x3002; &#x5C06;&#x6307;&#x4EE4;&#x9488;&#x5BF9;&#x7236;&#x7EA7;&#x8282;&#x70B9;&#xFF0C;&#x53EF;&#x4EE5;&#x51CF;&#x5C11;&#x4E8B;&#x4EF6;&#x7684;&#x76D1;&#x542C;&#x3002; &#x51CF;&#x5C11; dom &#x7684;&#x67E5;&#x8BE2;&#x548C;&#x64CD;&#x4F5C;&#x3002; &#x5C06;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x5730;&#x5740;&#x7ED1;&#x5B9A;&#x5230;data-origin&#x5C5E;&#x6027;&#x4E0A;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768// lazyload.directive.tsimport { Directive, Input, ElementRef, Renderer, HostListener, OnDestroy, AfterViewInit, OnChanges, SimpleChanges, Output, EventEmitter } from &apos;@angular/core&apos;;@Directive({ selector: &apos;[lazy-load]&apos;})export class LazyloadDirective implements AfterViewInit, OnDestroy, OnChanges { @Input(&apos;lazy-child&apos;) childName: string; private callback: (event) =&gt; void; private target: HTMLElement; private childs: NodeListOf&lt;Element&gt;; constructor(private el: ElementRef, private renderer: Renderer) { this.callback = (event) =&gt; { this.onScroll(event); }; } ngOnDestroy() { this.target.removeEventListener(&apos;scroll&apos;, this.callback, false); } ngAfterViewInit() { this.target = this.el.nativeElement; this.childs = this.target.querySelectorAll(this.childName); this.target.addEventListener(&apos;scroll&apos;, this.callback, false); // &#x56E0;&#x4E3A; ng2 &#x6E32;&#x67D3; dom &#x9700;&#x8981;&#x65F6;&#x95F4;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;&#x6E32;&#x67D3;&#x7684;&#x4E8B;&#x4EF6;&#x8FD4;&#x56DE;&#xFF0C; &#x56E0;&#x6B64;&#x5728;&#x8FD9;&#x91CC;&#x4F7F;&#x7528;&#x5EF6;&#x65F6;&#x5668;&#xFF0C;&#x9488;&#x5BF9;&#x7B2C;&#x4E00;&#x6B21;&#x52A0;&#x8F7D; setTimeout(() =&gt; { this.onScroll(&apos;&apos;); }, 60); } onScroll(event) { // &#x5728;&#x8FD9;&#x91CC;&#x52A8;&#x6001;&#x67E5;&#x8BE2; dom &#x56E0;&#x4E3A;&#x5728;&#x4E1A;&#x52A1;&#x903B;&#x8F91;&#x4E2D;&#xFF0C;dom &#x662F;&#x4F1A;&#x88AB;&#x6DFB;&#x52A0;&#x7684; this.childs = this.target.querySelectorAll(this.childName); let length = this.childs.length; for (let i = 0; i &lt; length; i++) { let item = this.childs.item(i), data = item.getAttribute(&apos;data-origin&apos;), top = (item as HTMLElement).offsetTop; if (!this.isBelow(top)) { if (data) { (item as HTMLElement).style.cssText = `background-image: url(&apos;${data}&apos;);`; } } } } /** * &#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x5728;&#x754C;&#x9762;&#x4E0B;&#x65B9; * * @param {number} top * @returns {boolean} * * @memberOf LazyloadDirective */ isBelow(top: number): boolean { let distance = this.target.scrollTop, viewHeight = this.target.clientHeight, fold = distance + viewHeight; return fold &lt; top; }} 1234567&lt;!-- index.html --&gt; &lt;ul lazy-load [lazy-child]=&quot;&apos;.li-page&apos;&quot;&gt; &lt;li *ngFor=&quot;let page of pages; let idx = index;&quot; class=&quot;li-page&quot; [ngClass]=&quot;{&apos;active&apos;: currentPage === idx}&quot; [attr.data-origin]=&quot;page.imageUri&quot;&gt; &lt;span class=&quot;pagenum&quot;&gt;{{idx+1}}&lt;/span&gt; &lt;/li&gt; &lt;li class=&quot;page-add&quot; (click)=&quot;createPage()&quot;&gt;&lt;/li&gt; &lt;/ul&gt; &#x6548;&#x679C;&#x8868;&#x73B0; &#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x6B63;&#x5E38;&#x7684;dom&#x5728;&#x89C6;&#x7A97;&#x4E2D;&#x65F6;&#xFF0C;&#x624D;&#x88AB;&#x52A0;&#x8F7D;&#x3002; &#x5728;&#x4E00;&#x5B9A;&#x6570;&#x91CF;&#x7EA7;&#x7684;&#x56FE;&#x7247;&#x65F6;&#xFF0C;&#x4E0D;&#x4F1A;&#x6709;&#x5F88;&#x660E;&#x663E;&#x7684;&#x5361;&#x987F;&#x73B0;&#x8C61;&#x3002; &#x95EE;&#x9898; &#x65E0;&#x6CD5;&#x9488;&#x5BF9; window &#x7684; scroll &#x4E8B;&#x4EF6;&#x3002; &#x5F53;&#x9891;&#x7E41;&#x5207;&#x6362;&#x754C;&#x9762;&#x65F6;&#xFF0C;&#x4E00;&#x4F46;&#x6D4F;&#x89C8;&#x5668;&#x7981;&#x7528;&#x7F13;&#x5B58;&#xFF0C;&#x90A3;&#x4E48;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x5C31;&#x4F1A;&#x91CD;&#x65B0;&#x52A0;&#x8F7D;&#xFF0C;&#x9020;&#x6210;&#x8D44;&#x6E90;&#x6D6A;&#x8D39;&#x3002; &#x7B2C;&#x4E09;&#x7248; &#x4E3B;&#x8981;&#x89E3;&#x51B3;&#x7F13;&#x5B58;&#x95EE;&#x9898;. &#x524D;&#x63D0; &#x6D4F;&#x89C8;&#x5668;&#x7981;&#x7528;&#x4E86;&#x56FE;&#x7247;&#x7F13;&#x5B58;&#x3002; &#x6709;&#x591A;&#x4E2A; pages &#x53EF;&#x4EE5;&#x5207;&#x6362;&#x663E;&#x793A;&#x3002; &#x5206;&#x6790; &#x7F13;&#x5B58;&#x56FE;&#x7247; &#x5C06;&#x8FDC;&#x7A0B;&#x7684;&#x56FE;&#x7247;&#xFF0C;&#x8F6C;&#x6362;&#x6210; base64 &#x5B58;&#x50A8;&#x5230;&#x672C;&#x5730;&#x3002; &#x52A8;&#x6001;&#x5C06; &#x56FE;&#x7247;base64 &#x8D4B;&#x7ED9; li &#x5143;&#x7D20;&#x7684;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x3002; &#x9700;&#x8981;&#x89E3;&#x51B3;&#x7684;&#x95EE;&#x9898;&#xFF0C;&#x56E0;&#x4E3A;&#x56FE;&#x7247;&#x8F6C;&#x6362;&#x6210;base64&#x540E;&#xFF0C;&#x4F1A;&#x6709;&#x53D8;&#x6210;&#x5F88;&#x591A;&#x5B57;&#x7B26;&#xFF0C;&#x5168;&#x90E8;&#x5C55;&#x793A;&#x5728;dom&#x4E0A;&#xFF0C;&#x4F1A;&#x5F88;&#x5361;&#x987F;&#x3002; &#x9690;&#x85CF;&#x4E0D;&#x53EF;&#x89C1;&#x533A;&#x57DF;&#x7684;&#x80CC;&#x666F;&#x56FE;&#x7247;&#x3002; &#x9690;&#x85CF;&#x4E0D;&#x5728;&#x5F53;&#x524D;&#x533A;&#x57DF;&#x7684;&#x56FE;&#x7247;&#x3002; &#x4EE3;&#x7801;&#x5B9E;&#x73B0;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132// lazyload.directive.tsimport { Directive, Input, ElementRef, Renderer, HostListener, OnDestroy, AfterViewInit, OnChanges, SimpleChanges, Output, EventEmitter } from &apos;@angular/core&apos;;@Directive({ selector: &apos;[lazy-load]&apos;})export class LazyloadDirective implements AfterViewInit, OnDestroy, OnChanges { @Input(&apos;lazy-child&apos;) childName: string; // &#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x5237;&#x65B0;&#x7684;&#x60C5;&#x51B5;&#xFF0C;&#x56E0;&#x4E3A;&#x6BCF;&#x6B21;&#x5207;&#x6362; pages, angular2 &#x9700;&#x8981;&#x6E32;&#x67D3;dom.&#x9700;&#x8981;&#x4E00;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x3002; @Input(&apos;lazy-init&apos;) refresh: boolean; // &#x4E8B;&#x4EF6;&#x901A;&#x77E5;&#xFF0C;&#x544A;&#x77E5;&#x5916;&#x90E8;&#x5DF2;&#x5237;&#x65B0; @Output(&apos;over&apos;) refreshed = new EventEmitter(); private callback: (event) =&gt; void; private target: HTMLElement; private childs: NodeListOf&lt;Element&gt;; // &#x6309;&#x7167;&#x56FE;&#x7247;&#x5B58;&#x50A8; base64&#x7F16;&#x7801;. private cache: Map&lt;string, string&gt;; private urlReg: RegExp = /^url\\(\\&quot;([\\w\\W]*)\\&quot;\\)$/; private canvas: CanvasRenderingContext2D; constructor(private el: ElementRef, private renderer: Renderer) { this.cache = new Map&lt;string, string&gt;(); this.callback = (event) =&gt; { this.onScroll(event); }; } ngOnDestroy() { this.target.removeEventListener(&apos;scroll&apos;, this.callback, false); } ngAfterViewInit() { this.target = this.el.nativeElement; this.childs = this.target.querySelectorAll(this.childName); this.target.addEventListener(&apos;scroll&apos;, this.callback, false); let canvas = document.createElement(&apos;canvas&apos;); this.canvas = canvas.getContext(&apos;2d&apos;); this.onScroll(&apos;&apos;); } ngOnChanges(simple: SimpleChanges) { if (simple[&apos;refresh&apos;]) { if (simple[&apos;refresh&apos;].currentValue === true) { // &#x6BCF;&#x6B21;&#x5F53;dom&#x52A0;&#x8F7D;&#x597D;&#x65F6;&#xFF0C;&#x89E6;&#x53D1;&#x6EDA;&#x52A8;&#x83B7;&#x53D6;&#x56FE;&#x7247;&#xFF0C;&#x88AB;&#x901A;&#x77E5;&#x5916;&#x90E8;&#x5DF2;&#x5237;&#x65B0;&#x3002; setTimeout(() =&gt; { this.onScroll(&apos;&apos;); this.refreshed.emit(); }, 60); } } } onScroll(event) { this.childs = this.target.querySelectorAll(this.childName); let length = this.childs.length; for (let i = 0; i &lt; length; i++) { let item = this.childs.item(i), data = item.getAttribute(&apos;data-origin&apos;), top = (item as HTMLElement).offsetTop, style = item.attributes.getNamedItem(&apos;style&apos;); if (this.isBelow(top)) { // &#x5728;&#x754C;&#x9762;&#x4E0B;&#x65B9;&#x65F6;&#xFF0C;&#x7B2C;&#x4E00;&#x4E2A;&#x6709;&#x8FDC;&#x7A0B;&#x56FE;&#x7247;&#x5C5E;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x6CA1;&#x6709;style&#x65F6;&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x518D;&#x64CD;&#x4F5C; dom &#x76F4;&#x63A5;&#x7ED3;&#x675F;&#x3002; if (data &amp;&amp; !style) { break; } else if (style) { item.attributes.removeNamedItem(&apos;style&apos;); } } else if (this.isAbove(top)) { // &#x5728;&#x754C;&#x9762;&#x4E0A;&#x65B9;&#x65F6;&#xFF0C;&#x56E0;&#x4E3A;&#x4E0D;&#x53EF;&#x89C1;&#x4E86;&#xFF0C;&#x76F4;&#x63A5;&#x79FB;&#x9664; style &#x5C5E;&#x6027;&#x3002; if (style) { item.attributes.removeNamedItem(&apos;style&apos;); } } else { if (data &amp;&amp; !this.cache.has(data)) { let image = new Image(); image.onload = (e) =&gt; { // &#x8FD9;&#x91CC;&#x4F7F;&#x7528; canvas &#x5BF9;&#x8C61;&#x6765;&#x5C06; image &#x8F6C;&#x6362;&#x6210;base64. // &#x6CE8;&#x610F;&#xFF0C;&#x8FD9;&#x91CC;&#x4E00;&#x5B9A;&#x8981;&#x8BBE;&#x5B9A; canvas &#x7684;&#x5927;&#x5C0F;&#x6210;&#x56FE;&#x7247;&#x7684;&#x5927;&#x5C0F;&#x3002; // &#x4E0D;&#x7136;&#xFF0C;&#x8F6C;&#x6362;&#x6210;&#x7684;&#x56FE;&#x7247;&#x4F1A;&#x6709;&#x5F88;&#x5927;&#x6216;&#x8005;&#x4E00;&#x90E8;&#x5206;&#x7684;&#x900F;&#x660E;&#x533A;&#x57DF;&#x3002; this.canvas.canvas.width = image.naturalWidth; this.canvas.canvas.height = image.naturalHeight; this.canvas.drawImage(image, 0, 0); let baseData = this.canvas.canvas.toDataURL(); this.cache.set(data, baseData); (item as HTMLElement).style.cssText = ` background-image: url(&apos;${baseData}&apos;); `; }; if (this.urlReg.test(data)) { image.crossOrigin = &apos;Anonymous&apos;; image.src = data.match(this.urlReg)[1]; } } else if (this.cache.has(data)) { (item as HTMLElement).style.backgroundImage = `url(&apos;${this.cache.get(data)}&apos;)`; } } } } /** * &#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x5728;&#x754C;&#x9762;&#x4E0B;&#x65B9; * * @param {number} top * @returns {boolean} * * @memberOf LazyloadDirective */ isBelow(top: number): boolean { let distance = this.target.scrollTop, viewHeight = this.target.clientHeight, fold = distance + viewHeight; return fold &lt; top; } /** * &#x5224;&#x65AD;&#x5F53;&#x524D;&#x8282;&#x70B9;&#x662F;&#x5426;&#x5728;&#x754C;&#x9762;&#x4E0A;&#x65B9; * * @param {number} top * @returns {boolean} * * @memberOf LazyloadDirective */ isAbove(top: number): boolean { let distance = this.target.scrollTop; return distance &gt; top; }} 1234567&lt;!-- index.html --&gt;&lt;ul lazy-load [lazy-child]=&quot;&apos;.li-page&apos;&quot;&gt; &lt;li *ngFor=&quot;let page of pages; let idx = index;&quot; class=&quot;li-page&quot; [ngClass]=&quot;{&apos;active&apos;: currentPage === idx}&quot; [attr.data-origin]=&quot;page.imageUri&quot;&gt; &lt;span class=&quot;pagenum&quot;&gt;{{idx+1}}&lt;/span&gt; &lt;/li&gt; &lt;li class=&quot;page-add&quot; (click)=&quot;createPage()&quot;&gt;&lt;/li&gt;&lt;/ul&gt; &#x603B;&#x7ED3;&#x7ECF;&#x8FC7;&#x8FD9;&#x4E09;&#x7248;&#x7684;&#x5EF6;&#x8FDF;&#x52A0;&#x8F7D;&#xFF0C;&#x8981;&#x5236;&#x4F5C;&#x4E00;&#x4E2A;&#x9AD8;&#x6548;&#x7387;&#x7684;&#x7EC4;&#x4EF6;&#x3002;&#x4E00;&#x5B9A;&#x8981;&#xFF1A; - &#x51CF;&#x5C11;&#x4E8B;&#x4EF6;&#x7684;&#x91CD;&#x590D;&#x76D1;&#x542C; - &#x51CF;&#x5C11;&#x76F4;&#x63A5;&#x5BF9;dom&#x7684;&#x67E5;&#x8BE2;&#x548C;&#x64CD;&#x4F5C;&#x3002;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://www.lagel.me/tags/javascript/"},{"name":"html5","slug":"html5","permalink":"http://www.lagel.me/tags/html5/"},{"name":"angular","slug":"angular","permalink":"http://www.lagel.me/tags/angular/"},{"name":"lazyload","slug":"lazyload","permalink":"http://www.lagel.me/tags/lazyload/"}]},{"title":"我的第一个Angular2测试","date":"2016-11-25T10:14:03.000Z","path":"ng2/unittest.html","text":"&#x7B80;&#x4ECB; &#x6700;&#x8FD1;&#x521A;&#x5B66;&#x4E60;&#x4E86; angular2&#xFF0C;&#x4E8E;&#x662F;&#x60F3;&#x7ED9; angular2 &#x52A0;&#x4E0A;&#x6D4B;&#x8BD5;&#x5185;&#x5BB9;&#x3002; &#x9047;&#x5230;&#x7684;&#x5751; &#x6587;&#x6863;&#x95EE;&#x9898;&#xFF0C;&#x4EE5;&#x53CA;&#x6D4B;&#x8BD5;&#x914D;&#x7F6E;&#x95EE;&#x9898;&#x3002; &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0E;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x7684;&#x533A;&#x522B;&#x3002; &#x6587;&#x6863; &#x8FD9;&#x70B9;&#x8FD8;&#x597D;&#x3002;angular2 &#x63D0;&#x4F9B;&#x7684; testings &#x6A21;&#x5757;&#x975E;&#x5E38;&#x7684;&#x8BE6;&#x7EC6;&#x3002;&#xFF08;&#x6587;&#x6863;&#x5168;&#x82F1;&#x6587;&#xFF0C;&#x4E0D;&#x8FC7;&#x4E5F;&#x6709;&#x4E2D;&#x6587;&#x6587;&#x6863;) &#x914D;&#x7F6E;&#x95EE;&#x9898; &#x56E0;&#x4E3A;&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x4F7F;&#x7528;karma &#x8FD9;&#x4E2A;&#x524D;&#x7AEF;&#x516C;&#x8BA4;&#x7684;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;&#x3002;&#x4F46;&#x662F;angualr2&#x5B98;&#x65B9;&#x7684;&#x5751;&#x5728;&#x4E8E;&#x5B83;&#x6CA1;&#x6709;&#x63D0;&#x4F9B;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x6E90;&#x6587;&#x4EF6;&#x5C55;&#x793A;&#x3002;&#x8FD9;&#x8BA9;&#x6211;&#x7B2C;&#x4E00;&#x6B21;&#x5165;&#x624B;&#x6D4B;&#x8BD5;&#x51FA;&#x73B0;&#x4E86;&#x56F0;&#x96BE;&#x3002;&#xFF08;&#x56E0;&#x4E3A;&#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x6CA1;&#x6709;&#x4F7F;&#x7528; angular-cli &#x5BFC;&#x81F4;&#x7684;&#x95EE;&#x9898;, &#x5728; cli &#x4E2D;&#xFF0C;&#x6D4B;&#x8BD5;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x5DF2;&#x88AB;&#x81EA;&#x52A8;&#x751F;&#x6210;&#xFF09; &#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x4E0E;&#x529F;&#x80FD;&#x6D4B;&#x8BD5; &#x56E0;&#x4E3A;&#x4E0D;&#x61C2;karma&#x914D;&#x7F6E;&#xFF0C;&#x4E8E;&#x662F;&#x81EA;&#x5DF1;&#x75AF;&#x72C2;&#x53BB; github &#x4EE5;&#x53CA; google &#x9700;&#x627E;&#x7B2C;&#x4E09;&#x65B9;&#x4EE3;&#x7801;&#x7684;karma&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x4F46;&#x662F;&#x641C;&#x7D22;&#x7684;&#x5173;&#x952E;&#x8BCD;&#x662F; angular2 + karma &#x5927;&#x591A;&#x6570;&#x4ECB;&#x7ECD;&#x7684;&#x662F;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x3002;&#x4F46;&#x662F;&#x6211;&#x9700;&#x8981;&#x7684;&#x662F;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x529F;&#x80FD;&#x3002; &#x5F00;&#x59CB;&#x914D;&#x7F6E; &#x9996;&#x5148;&#xFF0C;&#x524D;&#x5F80; karma &#x5B98;&#x65B9;&#xFF0C;&#x5BFB;&#x627E;&#x5230;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x57FA;&#x672C;&#x4FE1;&#x606F;&#x3002;&#x521B;&#x5EFA;&#x6211;&#x4EEC;&#x7684; karma.config.js 1234567891011module.exports = function(config) { config.set({ frameworks: [&apos;jasmine&apos;], reporters: [&apos;coverage&apos;], port: 7500, colors: true, logLevel: config.LOG_INFO, autoWatch: true, browsers: [&apos;Chrome&apos;], singleRun: false }); &#x56E0;&#x4E3A;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x662F; typescript &#x7F16;&#x7A0B;&#xFF0C;&#x5728;&#x5F88;&#x591A;&#x7684;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x4E2D;&#xFF0C;&#x5927;&#x591A;&#x6570;&#x90FD;&#x662F;&#x4F7F;&#x7528; tsc &#x5C06; ts &#x4EE3;&#x7801;&#x76F4;&#x63A5;&#x7F16;&#x7A0B;&#x6210; js&#x3002;&#x4F46;&#x662F;&#x6211;&#x60F3;&#x76F4;&#x63A5;&#x4F7F;&#x7528; ts &#x4E0D;&#x60F3;&#x7F16;&#x7A0B;&#x6210; js &#x6587;&#x4EF6;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;&#x56E0;&#x4E3A;&#x6211;&#x4F7F;&#x7528;&#x7684;&#x662F; webpack &#x8FDB;&#x884C;&#x7A0B;&#x5E8F;&#x6253;&#x5305;&#xFF0C;&#x56E0;&#x6B64;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;&#x6D4B;&#x8BD5;&#x914D;&#x7F6E;&#x4E2D;&#x4F7F;&#x7528; webpack, &#x4E00;&#x5207;&#x90FD;&#x5F52;&#x529F;&#x4E8E; karma-webpack &#x8FD9;&#x4E2A;&#x63D2;&#x4EF6;&#x3002; &#x5728;&#x4F7F;&#x7528;&#x4E4B;&#x524D;&#x9700;&#x8981; npm install karma-webpack1234567891011121314151617const webpackConfig = require(&apos;./webpack-test.config&apos;);module.exports = function(config) { config.set({ frameworks: [&apos;jasmine&apos;], preprocessors: { &apos;./tests/unnit/**/*.ts&apos;: [&apos;webpack&apos;], }, webpack: webpackConfig, port: 7500, colors: true, logLevel: config.LOG_INFO, autoWatch: true, browsers: [&apos;Chrome&apos;], singleRun: false });} &#x6211;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A; webpack-test.config.js 123456789101112131415161718192021222324252627282930let webpack = require(&apos;webpack&apos;);module.exports = { entry: [ &apos;./node_modules/core-js/client/shim.min.js&apos;, &apos;./node_modules/zone.js/dist/zone.js&apos;, &apos;./node_modules/reflect-metadata/Reflect.js&apos;, ], output: { filename: &apos;./dist/bundle.js&apos; }, resolve: { extensions: [&apos;&apos;, &apos;.ts&apos;, &apos;.tsx&apos;, &apos;.js&apos;] }, module: { loaders: [ { test: /\\.tsx?$/, loader: &apos;ts-loader&apos;}, { test: /\\.tsx?$/, loader: &apos;angular2-load-children-loader&apos;}, { test: /\\.css$/, loader: &apos;style-loader!css-loader&apos; }, { test: /\\.html$/, loader: &apos;raw-loader&apos;}, { test: /\\.(png|jpg)$/, loader: &apos;url-loader?limit=8192&apos;} ], preLoaders: [ { test: /\\.js$/, loader: &apos;source-map-loader&apos;} ] }, node: { fs: &apos;empty&apos; },} &#x63A5;&#x7740;&#x5C06; angular2 &#x6240;&#x9700;&#x8981;&#x7684;&#x73AF;&#x5883;&#x63D0;&#x524D;&#x5728; karma.config.js &#x4E2D;&#x52A0;&#x8F7D;. &#x56E0;&#x4E3A;&#x5728;&#x8FD0;&#x884C; angular2 &#x4E4B;&#x524D;&#xFF0C;&#x9700;&#x8981;&#x5C06; core-js &#x4EE5;&#x53CA; zone.js, reflect-metadata &#x63D0;&#x524D;&#x52A0;&#x8F7D;&#x597D;&#x3002;&#x8FD9;&#x4E9B;&#x6587;&#x4EF6;&#x4EE5;&#x53CA;&#x6D4B;&#x8BD5;&#x6587;&#x4EF6;&#x9700;&#x8981;&#x88AB; webpack &#x6253;&#x5305;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x63D0;&#x524D;&#x52A0;&#x8F7D;&#x8FDB;&#x6765;&#x3002;1234567891011121314151617181920212223242526const webpackConfig = require(&apos;./webpack-test.config&apos;);module.exports = function(config) { config.set({ frameworks: [&apos;jasmine&apos;], files: [ &apos;./node_modules/core-js/client/shim.min.js&apos;, &apos;./node_modules/zone.js/dist/zone.js&apos;, &apos;./node_modules/zone.js/dist/sync-test.js&apos;, &apos;./node_modules/zone.js/dist/proxy.js&apos;, &apos;./node_modules/zone.js/dist/jasmine-patch.js&apos;, &apos;./node_modules/reflect-metadata/Reflect.js&apos;, &apos;./tests/unnit/**/*.ts&apos; ], preprocessors: { &apos;./tests/unnit/**/*.ts&apos;: [&apos;webpack&apos;], }, webpack: webpackConfig, port: 7500, colors: true, logLevel: config.LOG_INFO, autoWatch: true, browsers: [&apos;Chrome&apos;], singleRun: false });} &#x6700;&#x540E;&#x8FD0;&#x884C;&#x6211;&#x7684;&#x6D4B;&#x8BD5;&#x4EE3;&#x7801;, &#x7ED3;&#x679C;&#x5982;&#x4E0B; &#x54CE;&#x5440;&#x8FD9;&#x4EE3;&#x7801;&#x592A;&#x4E11;&#x4E86;&#xFF0C;&#x751A;&#x81F3;&#x6211;&#x8FDE;&#x8DD1;&#x4E86;&#x54EA;&#x4E2A;&#x6D4B;&#x8BD5;&#x90FD;&#x4E0D;&#x77E5;&#x9053;&#x3002;&#x4E8E;&#x662F;&#x53BB; karma &#x9009;&#x62E9;&#x4E00;&#x4E2A; reporter &#x63D2;&#x4EF6;&#x3002; 12345678910111213141516171819202122232425262728293031323334const webpackConfig = require(&apos;./webpack-test.config&apos;);module.exports = function(config) { config.set({ frameworks: [&apos;jasmine&apos;, &apos;chai&apos;], reporters: [&apos;spec&apos;, &apos;coverage&apos;], files: [ &apos;./node_modules/core-js/client/shim.min.js&apos;, &apos;./node_modules/zone.js/dist/zone.js&apos;, &apos;./node_modules/zone.js/dist/sync-test.js&apos;, &apos;./node_modules/zone.js/dist/proxy.js&apos;, &apos;./node_modules/zone.js/dist/jasmine-patch.js&apos;, &apos;./node_modules/reflect-metadata/Reflect.js&apos;, &apos;./tests/unnit/**/*.ts&apos; ], preprocessors: { &apos;./tests/unnit/**/*.ts&apos;: [&apos;webpack&apos;], }, coverageReporter: { dir: &apos;./tests/coverage&apos;, reporters: [ { type: &apos;lcov&apos;, subdir: &apos;.&apos; }, { type: &apos;text-summary&apos; } ] }, webpack: webpackConfig, port: 7500, colors: true, logLevel: config.LOG_INFO, autoWatch: true, browsers: [&apos;Chrome&apos;], singleRun: false });} &#x5728;&#x8FD9;&#x91CC;&#xFF0C;&#x6211;&#x9009;&#x62E9;&#x4E86;&#x4F7F;&#x7528; chai &#x4EE5;&#x53CA; karma-spec-reporter &#x63D2;&#x4EF6;&#x3002; &#x4EE5;&#x53CA;&#x6DFB;&#x52A0; coverageReporter &#x914D;&#x7F6E;&#x3002; &#x4FEE;&#x6539;&#x4E4B;&#x540E;&#xFF0C;&#x518D;&#x6B21;&#x8FD0;&#x884C;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x3002; &#x8FD9;&#x80FD;&#x591F;&#x6E05;&#x6670;&#x7684;&#x770B;&#x51FA;&#x6211;&#x7684;&#x4EE3;&#x7801;&#x54EA;&#x4E9B;&#x6D4B;&#x8BD5;&#x88AB;&#x901A;&#x8FC7;&#x4E86;&#x3002; &#x603B;&#x7ED3; &#x5728; angular2 &#x7684;&#x6D4B;&#x8BD5;&#x4E2D;&#xFF0C;&#x8FD9;&#x91CC;&#x4E3B;&#x8981;&#x4F7F;&#x7528;&#x4E86; karma &#x548C; webpack &#x7684;&#x7ED3;&#x5408;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5;&#x3002;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://www.lagel.me/tags/javascript/"},{"name":"html5","slug":"html5","permalink":"http://www.lagel.me/tags/html5/"},{"name":"angular","slug":"angular","permalink":"http://www.lagel.me/tags/angular/"},{"name":"webpack","slug":"webpack","permalink":"http://www.lagel.me/tags/webpack/"}]},{"title":"Canvas的缩放比例","date":"2016-11-24T08:47:14.000Z","path":"javascript/canvas.html","text":"&#x9700;&#x6C42;&#x8BF4;&#x660E; &#x9700;&#x8981;&#x5C06;&#x4E00;&#x4E2A;&#x5927;&#x5C0F;&#x4E0D;&#x5B9A;&#x7684; cavas &#x753B;&#x677F;&#x7F29;&#x653E;&#x6210;&#x4E00;&#x4E2A;&#x6807;&#x51C6;&#x7684;&#x753B;&#x5E03;&#x5927;&#x5C0F;&#x3002;&#x968F;&#x7740;&#x6D4F;&#x89C8;&#x5668;&#x7684;resize&#x800C;&#x53D8;&#x6362;&#x3002; index.html &#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; canvas &#x5BF9;&#x8C61;&#xFF0C;&#x5728; dom &#x7ED3;&#x6784;&#x4E2D;, &#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7F29;&#x653E;&#x7684; canvas &#x5927;&#x5C0F;&#x662F; 1024*640 1234567891011&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;&lt;/title&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt; &lt;/head&gt; &lt;body&gt; &lt;canvas id=&quot;target&quot; width=&quot;1024&quot; height=&quot;640&quot;&gt;&lt;/canvas&gt; &lt;/body&gt;&lt;/html&gt; &#x6837;&#x5F0F; &#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x9700;&#x8981;canvas&#x81EA;&#x9002;&#x5E94;&#xFF0C;&#x6240;&#x4EE5;&#x5728; css &#x91CC;&#x9762;&#x8BBE;&#x7F6E;&#x5B83;&#x7684;&#x5BBD;&#x9AD8;&#x90FD;&#x4E3A; 100%. 123456&lt;style&gt;#target { width: 100%; height: 100%;}&lt;/style&gt; javascript &#x64CD;&#x4F5C;12345678910111213141516171819202122232425262728293031&lt;script&gt;window.onload = () =&gt; { let canvas = document.getElementById(&apos;target&apos;); let context = canvas.getContext(&apos;2d&apos;); // &#x7ED9; canvas &#x52A0;&#x4E0A;&#x9F20;&#x6807;&#x4E8B;&#x4EF6; let drawing = false; context.lineWidth = 3; context.strokeStyle = &apos;red&apos;; canvas.addEventListener(&apos;mousedown&apos;, (e) =&gt; { context.beginPath(); context.moveTo(e.offsetX, e.offsetY); drawing = true; }); canvas.addEventListener(&apos;mousemove&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX, e.offsetY); context.stroke(); } }); canvas.addEventListener(&apos;mouseup&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX, e.offsetY); context.stroke(); drawing = false; } });};&lt;/script&gt; &#x52A0;&#x4E0A;&#x5982;&#x4E0A;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x7684; canvas &#x5C31;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;&#x4E86;&#xFF0C;&#x6765;&#x6D4B;&#x8BD5;&#x4E00;&#x756A;&#x5427;&#x3002; BUG &#x5F88;&#x9057;&#x61BE;&#xFF0C;&#x5F53;&#x6211;&#x5C4F;&#x5E55;&#x7684;&#x5927;&#x5C0F;&#x53EA;&#x6709;1024 * 640 &#x65F6;&#xFF0C;&#x6211;&#x4EEC;&#x7684;&#x9F20;&#x6807;&#x624D;&#x80FD;&#x591F;&#x548C;&#x753B;&#x5E03;&#x4E0A;&#x9762;&#x7684;&#x70B9;&#x5BF9;&#x5E94;&#x4E0A;&#x3002; &#x539F;&#x56E0; &#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x5F3A;&#x5236;&#x8981;&#x6C42; &#x753B;&#x5E03;&#x7684;&#x5927;&#x5C0F;&#x662F; 1024 * 640&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x753B;&#x5E03;&#x7684;&#x5927;&#x5C0F;&#x662F;&#x5927;&#x4E8E;&#x6216;&#x5C0F;&#x4E8E;&#x8981;&#x6C42;&#x7684;&#x5927;&#x5C0F;&#x7684;&#x3002; &#x7531;&#x4E8E;&#x6211;&#x4EEC;&#x7684;&#x5927;&#x5C0F;&#x4E0D;&#x4E00;&#x81F4;&#xFF0C;&#x4E8E;&#x662F;canvas &#x81EA;&#x52A8;&#x6267;&#x884C;&#x4E86; scale&#x65B9;&#x6CD5;&#xFF0C;&#x4E5F;&#x5C31;&#x662F; canvas &#x7684;&#x7F29;&#x653E;&#x529F;&#x80FD;&#x3002; &#x6240;&#x4EE5;&#x5BFC;&#x81F4;&#x4E86;&#x6211;&#x4EEC;&#x7684;&#x9F20;&#x6807;&#x70B9;&#x51FB;&#x540E;&#x663E;&#x793A;&#x7684;&#x4F4D;&#x7F6E;&#x662F;&#x7F29;&#x653E;&#x4E4B;&#x540E;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x89E3;&#x51B3; &#x6839;&#x636E;&#x4EE5;&#x4E0A;&#x6211;&#x4EEC;&#x5206;&#x6790;&#x51FA;&#x7684;&#x539F;&#x56E0;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x8BA1;&#x7B97;&#x51FA;&#x5F53;&#x524D;&#x753B;&#x5E03;&#x4E0E;&#x6807;&#x51C6;&#x753B;&#x5E03;&#x76F4;&#x63A5;&#x7684;&#x6BD4;&#x4F8B;&#x3002;&#x7136;&#x540E;&#x5C06;&#x9F20;&#x6807;&#x7684;&#x70B9;&#x51FB;&#x4F4D;&#x7F6E;&#xFF0C;&#x6309;&#x5BF9;&#x5E94;&#x7684;&#x6BD4;&#x4F8B;&#x6362;&#x7B97;&#xFF0C;&#x90A3;&#x4E48;&#x4E45;&#x4E0D;&#x4F1A;&#x5BFC;&#x81F4;&#x9F20;&#x6807;&#x70B9;&#x4E0E;&#x4F4D;&#x7F6E;&#x7684;&#x4E0D;&#x7EDF;&#x4E00;&#x3002; &#x4EE3;&#x7801;123456789101112131415161718192021222324252627282930313233window.onload = () =&gt; { let canvas = document.getElementById(&apos;target&apos;); let context = canvas.getContext(&apos;2d&apos;); // &#x7ED9; canvas &#x52A0;&#x4E0A;&#x9F20;&#x6807;&#x4E8B;&#x4EF6; let drawing = false; let ratio = canvas.width / canvas.clientWidth; let currentRatio = 1 / ratio;; context.lineWidth = 3; context.strokeStyle = &apos;red&apos;; canvas.addEventListener(&apos;mousedown&apos;, (e) =&gt; { context.beginPath(); context.moveTo(e.offsetX / currentRatio, e.offsetY / currentRatio); drawing = true; }); canvas.addEventListener(&apos;mousemove&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX / currentRatio, e.offsetY / currentRatio); context.stroke(); } }); canvas.addEventListener(&apos;mouseup&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX / currentRatio, e.offsetY / currentRatio); context.stroke(); drawing = false; } });}; &#x4E0D;&#x96BE;&#x770B;&#x51FA;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x6211;&#x4EEC;&#x8BA1;&#x7B97; &#x6807;&#x51C6;&#x5C3A;&#x5BF8;/&#x5F53;&#x524D;&#x5C3A;&#x5BF8; &#x7684;&#x6BD4;&#x4F8B;&#x3002;&#x7136;&#x540E;&#xFF0C;&#x5C06;&#x70B9;&#x8FDB;&#x884C;&#x53CD;&#x6BD4;&#x7F29;&#x653E;&#xFF0C;&#x7136;&#x540E;&#x5C06;&#x70B9;&#x7ED8;&#x5236;&#x51FA;&#x6765;&#xFF0C;&#x5C31;&#x8FBE;&#x5230;&#x4E86;&#x70B9;&#x548C;&#x753B;&#x5E03;&#x7684;&#x5BF9;&#x5E94;&#x3002; &#x6539;&#x8FDB; &#x5B9E;&#x65F6;&#x66F4;&#x6539;&#x753B;&#x5E03;&#x5927;&#x5C0F; &#x6211;&#x4EEC;&#x4E3A;&#x4E86;&#x5B9E;&#x65F6;&#x66F4;&#x6539;&#x753B;&#x5E03;&#x5927;&#x5C0F;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x9009;&#x62E9;&#x76D1;&#x542C; resize &#x4E8B;&#x4EF6;. &#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x65F6;&#x66F4;&#x6539;&#x5F53;&#x524D;&#x7684;&#x6BD4;&#x4F8B;&#x7CFB;&#x6570;&#x5373;&#x53EF;&#x3002; 1234567891011121314151617181920212223242526272829303132333435363738window.onload = () =&gt; { let canvas = document.getElementById(&apos;target&apos;); let context = canvas.getContext(&apos;2d&apos;); // &#x7ED9; canvas &#x52A0;&#x4E0A;&#x9F20;&#x6807;&#x4E8B;&#x4EF6; let drawing = false; let ratio = canvas.width / canvas.clientWidth; let currentRatio = 1 / ratio; window.onresize = () =&gt; { ratio = canvas.width / canvas.clientWidth; currentRatio = 1 / ratio; }; context.lineWidth = 3; context.strokeStyle = &apos;red&apos;; canvas.addEventListener(&apos;mousedown&apos;, (e) =&gt; { context.beginPath(); context.moveTo(e.offsetX / currentRatio, e.offsetY / currentRatio); drawing = true; }); canvas.addEventListener(&apos;mousemove&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX / currentRatio, e.offsetY / currentRatio); context.stroke(); } }); canvas.addEventListener(&apos;mouseup&apos;, (e) =&gt; { if (drawing) { context.lineTo(e.offsetX / currentRatio, e.offsetY / currentRatio); context.stroke(); drawing = false; } });}; :: &#x91CD;&#x70B9;&#x5728; window.onresize &#x4E8B;&#x4EF6;. &#x603B;&#x7ED3; &#x6211;&#x4EEC;&#x7684;&#x76EE;&#x6807;&#x662F;&#x5C06;&#x4E0D;&#x901A;&#x7684;&#x753B;&#x5E03;&#x5927;&#x5C0F;&#xFF0C;&#x8F6C;&#x6362;&#x6210;&#x6807;&#x51C6;&#x5927;&#x5C0F;&#x3002; &#x5728;&#x753B;&#x56FE;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x56E0;&#x4E3A;&#x6BD4;&#x4F8B;&#x4E0D;&#x5BF9;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x5C06;&#x70B9;&#x6309;&#x6BD4;&#x4F8B;&#x7F29;&#x653E;&#x5373;&#x53EF;&#x3002; &#x67E5;&#x770B; Demo &#x8BF7;&#x70B9;&#x51FB;&#x8FD9;&#x91CC;","tags":[{"name":"javascript","slug":"javascript","permalink":"http://www.lagel.me/tags/javascript/"},{"name":"canvas","slug":"canvas","permalink":"http://www.lagel.me/tags/canvas/"},{"name":"html5","slug":"html5","permalink":"http://www.lagel.me/tags/html5/"}]},{"title":"Siwft 类型集","date":"2016-06-25T08:09:53.000Z","path":"swift/04.html","text":"Collection Types &#x96C6;&#x5408;&#x53EF;&#x53D8;&#x6027; Arrays Array Type &#x7B80;&#x77ED;&#x7684;&#x8BED;&#x6CD5; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; Array &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x503C;&#x7684; Array &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x901A;&#x8FC7;&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6570;&#x7EC4; &#x4ECE;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x521B;&#x5EFA; Array &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x6570;&#x7EC4; &#x8FED;&#x4EE3;&#x6570;&#x7EC4; Sets Set &#x7C7B;&#x578B;&#x7684;Hash&#x503C; Set &#x7C7B;&#x578B;&#x8BED;&#x6CD5; &#x521B;&#x5EFA;&#x548C;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A; Set &#x7528;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x6765;&#x521B;&#x5EFA;Set &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;Set&#x96C6;&#x5408; &#x8FED;&#x4EE3;set&#x96C6;&#x5408; Swfit &#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x4E3B;&#x8981;&#x7684;&#x7C7B;&#x578B;&#x96C6;&#x5408;&#xFF0C;&#x4F17;&#x6240;&#x5468;&#x77E5;&#x7684; arrays, sets &#x548C; dictionaries &#x7528;&#x4E8E;&#x5B58;&#x50A8;&#x7C7B;&#x578B;&#x6570;&#x636E;&#x3002; Arrays &#x662F;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x7684;&#x7C7B;&#x578B;&#x503C;&#x3002; Sets &#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x5E8F;&#x4E14;&#x552F;&#x4E00;&#x7684;&#x7C7B;&#x578B;&#x503C;&#x3002; Dictionaries &#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x5E8F;&#x7684;&#x952E;&#x503C;&#x5BF9;&#x7C7B;&#x578B;&#x503C;&#x3002; Arrays, sets &#x548C; dictionaries &#x5728; Swift &#x91CC;&#x603B;&#x662F;&#x660E;&#x786E;&#x7684;&#x7C7B;&#x578B;&#x5BF9;&#x4E8E;&#x503C;&#x548C;&#x952E;&#x88AB;&#x5B58;&#x50A8;&#x3002;&#x4E5F;&#x5C31;&#x662F;&#x610F;&#x5473;&#x7740;&#x5982;&#x679C;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x7684;&#x503C;&#x7C7B;&#x578B;&#x5728;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x4E2D;&#x4F1A;&#x629B;&#x51FA;&#x9519;&#x8BEF;&#xFF0C;&#x4E5F;&#x610F;&#x5473;&#x7740;&#x4F60;&#x4ECE;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x91CC;&#x9762;&#x53D6;&#x51FA;&#x7684;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x662F;&#x786E;&#x5B9A;&#x7684;&#x3002; &#x96C6;&#x5408;&#x53EF;&#x53D8;&#x6027; &#x5982;&#x679C;&#x4F60;&#x521B;&#x5EFA;&#x4E00;&#x4E2A; Array, Set, Dictionary &#x5E76;&#x4E14;&#x5206;&#x914D;&#x7ED9;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#xFF0C;&#x8FD9;&#x4E2A;&#x88AB;&#x521B;&#x5EFA;&#x96C6;&#x5408;&#x662F;&#x53EF;&#x53D8;&#x7684;&#x3002;&#x8FD9;&#x4E5F;&#x5C31;&#x610F;&#x5473;&#x7740;&#x5B83;&#x662F;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x96C6;&#x5408;&#x88AB;&#x521B;&#x5EFA;&#x540E;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x6DFB;&#x52A0;&#xFF0C;&#x5220;&#x9664;&#x548C;&#x6539;&#x53D8;&#x64CD;&#x4F5C;&#x3002;&#x5982;&#x679C;&#x4F60;&#x5206;&#x914D;&#x4E00;&#x4E2A;Array&#xFF0C;Set&#xFF0C;Dictionary &#x7ED9;&#x4E00;&#x4E2A;&#x5E38;&#x91CF;&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;&#x96C6;&#x5408;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x5E76;&#x4E14;&#x5B83;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x5185;&#x5BB9;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002; Arrays &#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5B58;&#x50A8;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x5728;&#x4E00;&#x4E2A;&#x6709;&#x5E8F;&#x7684;&#x5217;&#x8868;&#x3002;&#x76F8;&#x540C;&#x7684;&#x503C;&#x53EF;&#x4EE5;&#x591A;&#x6B21;&#x51FA;&#x73B0;&#x5728;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x4E0D;&#x540C;&#x4F4D;&#x7F6E;&#x3002; Array Type &#x7B80;&#x77ED;&#x7684;&#x8BED;&#x6CD5; &#x4E00;&#x4E2A; Swift array &#x5199;&#x6CD5;&#x5B8C;&#x6574;&#x7684;&#x662F; Array&lt;Element&gt;&#xFF0C;&#x8FD9;&#x91CC;&#x7684; Element &#x662F;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5141;&#x8BB8;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x5199;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x7B80;&#x77ED;&#x5F62;&#x5F0F;&#x7C7B;&#x4F3C;[Element].&#x5C3D;&#x7BA1;&#x8FD9;&#x4E24;&#x79CD;&#x5F62;&#x5F0F;&#x5728;&#x529F;&#x80FD;&#x4E0A;&#x662F;&#x4E00;&#x76F4;&#x7684;&#xFF0C;&#x8FD9;&#x4E2A;&#x7B80;&#x6D01;&#x7684;&#x5F62;&#x5F0F;&#x662F;&#x4F18;&#x5148;&#x9009;&#x62E9;&#x7684;&#x3002; &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684; Array &#x4F60;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x786E;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x7A7A; Array&#x3002; 123var someInts = [Int]()print(&quot;someInts is of type [Int] with \\(someInts.cout) items.&quot;)// prints &quot;someInts is of type [Int] with 0 items.&quot; &#x6CE8;&#x610F;&#x8FD9;&#x4E2A; someInts &#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x88AB;&#x9690;&#x5F0F;&#x8F6C;&#x6362;&#x4E3A; [Int] &#x4ECE;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x7684;&#x7C7B;&#x578B;. &#x6216;&#x8005;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x5DF2;&#x7ECF;&#x88AB;&#x63D0;&#x4F9B;&#x4E86;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x6216;&#x8005;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x6709;&#x7C7B;&#x578B;&#x7684;&#x53D8;&#x91CF;&#x6216;&#x5E38;&#x91CF;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x6570;&#x7EC4;&#x548C;&#x4E00;&#x4E2A;&#x5B57;&#x9762;&#x7A7A;&#x6570;&#x7EC4;&#xFF0C;&#x5199;&#x6CD5;&#x662F; []. 1234someInts.append(3)// someInts now contains 1 value of type IntsomeInts = []// someInts is now an empty array, but is still of type [Int] &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x503C;&#x7684; Array Swift &#x7684; Array &#x7C7B;&#x578B;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x5668;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x786E;&#x5B9A;&#x5927;&#x5C0F;&#x7684;&#x6570;&#x7EC4;&#x6216;&#x8005;&#x8BBE;&#x7F6E;&#x76F8;&#x540C;&#x7684;&#x503C;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x503C;&#x3002;&#x4F60;&#x901A;&#x8FC7;&#x521D;&#x59CB;&#x5316;&#x5668;&#x591A;&#x4E2A;&#x6761;&#x76EE;&#x6DFB;&#x52A0;&#x5230;&#x4E00;&#x4E2A;&#x65B0; Array(&#x79F0;&#x4E4B;&#x4E3A;count)&#x548C;&#x63D0;&#x4F9B;&#x5408;&#x9002;&#x7684;&#x7C7B;&#x578B;&#x4F5C;&#x4E3A;&#x9ED8;&#x8BA4;&#x503C;&#xFF08;&#x79F0;&#x4E4B;&#x4E3A;repeatedValue&#xFF09;&#x3002; 12var threeDoubles = [Double](count: 3, repeatedValue: 0.0)// threeDoubles is of type [Double], and equals [0.0, 0.0, 0.0] &#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x901A;&#x8FC7;&#x5408;&#x5E76;&#x4E24;&#x4E2A;&#x6570;&#x7EC4; &#x4F60;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x6DFB;&#x52A0;&#x4E24;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x6570;&#x7EC4;&#x5E76;&#x4E14;&#x4F34;&#x968F;&#x4E00;&#x81F4;&#x7684;&#x7C7B;&#x578B;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A;&#x52A0;&#x6CD5;&#x64CD;&#x4F5C;&#x7B26;(+)&#x3002;&#x8FD9;&#x4E2A;&#x65B0;&#x6570;&#x7EC4;&#x7684;&#x7C7B;&#x578B;&#x4F1A;&#x88AB;&#x63A8;&#x5BFC;&#x4ECE;&#x4F60;&#x5171;&#x540C;&#x6DFB;&#x52A0;&#x7684;&#x4E24;&#x4E2A;&#x6570;&#x7EC4;&#x3002; 123var anotherThreeDoubles = [Double](count: 3, repeatedValue: 2.5)var sixDoubles = threeDoubles + anotherThreeDoubles// sixDoubles is inferred as [Double] and equals [0.0, 0.0, 0.0, 2.5, 2.5, 2.5] &#x4ECE;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x521B;&#x5EFA; Array &#x4F60;&#x53EF;&#x4EE5;&#x4ECE;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x6765;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#xFF0C;&#x8FD9;&#x79CD;&#x7B80;&#x6D01;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5199;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x503C;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x96C6;&#x5408;&#x3002;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x5199;&#x6CD5;&#x50CF;&#x4E00;&#x4E2A;&#x5217;&#x8868;&#xFF0C;&#x7528;&#x9017;&#x53F7;&#x5206;&#x9694;&#xFF0C;&#x4F7F;&#x7528;&#x4E2D;&#x62EC;&#x53F7;&#x5305;&#x56F4;&#x3002;[value1, value2, value3] 12var shoppingList: [String] = [&quot;Eggs&quot;, &quot;Milk&quot;]// shoppingList has been initialized with two initial items &#x8FD9;&#x4E2A; shoppingList &#x53D8;&#x91CF;&#x88AB;&#x58F0;&#x660E;&#x6210; &#x201C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x6570;&#x7EC4;&#x201D;,&#x5199;&#x6CD5;&#x662F;[String]&#x3002;&#x56E0;&#x4E3A;&#x8FD9;&#x4E2A;&#x7279;&#x522B;&#x7684;&#x6570;&#x7EC4;&#x5DF2;&#x7ECF;&#x6307;&#x5B9A;&#x4E86;&#x4E00;&#x4E2A;&#x503C;&#x7C7B;&#x578B;&#x4E3A;String, &#x5B83;&#x53EA;&#x5141;&#x8BB8;&#x5B58;&#x50A8;String&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002; &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x6570;&#x7EC4; &#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x5B83;&#x81EA;&#x6709;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#xFF0C;&#x6216;&#x901A;&#x8FC7;&#x4E0B;&#x6807;&#x8BED;&#x6CD5;&#x6765;&#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x6570;&#x7EC4;&#x3002; &#x4E3A;&#x4E86;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x9879;&#x76EE;&#x6570;&#x91CF;&#xFF0C;&#x68C0;&#x67E5;&#x8FD9;&#x4E2A;&#x53EA;&#x8BFB;&#x7684;&#x5C5E;&#x6027;count: 12print(&quot;The shopping list contains \\(shoppingList.count) items.&quot;)// Prints &quot;The shopping list contains 2 items.&quot; &#x4F7F;&#x7528;&#x8FD9;&#x4E2A;Boolean&#x7C7B;&#x578B;&#x7684;&#x5C5E;&#x6027;isEmpty&#xFF0C;&#x662F;&#x7528;&#x6765;&#x68C0;&#x6D4B;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x7684; count&#x5C5E;&#x6027;&#x662F;&#x5426;&#x7B49;&#x4E8E;0: 123456if shoppingList.isEmpty { print(&quot;The shopping list is empty.&quot;)} else { print(&quot;The shopping list is not empty.&quot;)}// Prints &quot;The shopping list is not empty.&quot; &#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6570;&#x7EC4;&#x7684; append(_:)&#x65B9;&#x6CD5;&#x6765;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x65B0;&#x9879;&#x5230;&#x6570;&#x7EC4;&#x4E2D;: 12shoppingList.append(&quot;Flour&quot;)// shoppingList now contains 3 items. &#x6216;&#x8005;,&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x4E00;&#x81F4;&#x7684;&#x9879;&#x76EE;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x52A0;&#x6CD5;&#x64CD;&#x4F5C;&#x7B26;(+=): 1234shoppingList += [&quot;Baking Powder&quot;]// shoppingList now contains 4 itemsshoppingList += [&quot;Chocolate Spread&quot;, &quot;Cheese&quot;, &quot;Butter&quot;]// shoppingList now contains 7 items &#x4F7F;&#x7528;&#x6570;&#x7EC4;&#x7684;&#x4E0B;&#x6807;&#x8BED;&#x6CD5;&#x6765;&#x53D6;&#x5F97;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x901A;&#x8FC7;&#x7D22;&#x5F15;&#x503C;&#x53EF;&#x4EE5;&#x53D6;&#x5F97;&#x4EFB;&#x4F55;&#x4F60;&#x60F3;&#x8981;&#x7684;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x540D;&#x5B57;&#x540E;&#x9762;&#x7684;&#x4E2D;&#x62EC;&#x53F7;&#x91CC;&#x4F7F;&#x7528;&#x3002; 12var firstItem = shoppingList[0]// firstItem is equal to &quot;Eggs&quot; &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5C0F;&#x6807;&#x8BED;&#x6CD5;&#x53BB;&#x66F4;&#x6539;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x503C;&#x3002; 1shoppingList[0] = &quot;Six eggs&quot; &#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E0B;&#x6807;&#x8BED;&#x6CD5;&#x4E00;&#x6B21;&#x6027;&#x53BB;&#x4FEE;&#x6539;&#x4E00;&#x4E2A;&#x8303;&#x56F4;&#x7684;&#x503C;&#xFF0C;&#x751A;&#x81F3;&#x53BB;&#x66FF;&#x6362;&#x4E0D;&#x540C;&#x957F;&#x5EA6;&#x7684;&#x6570;&#x7EC4; 12shoppingList[4...6] = [&quot;Bananas&quot;, &quot;Apples&quot;]// shoppingList now contains 6 items &#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x9879;&#x76EE;&#x5230;&#x6570;&#x7EC4;&#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x8C03;&#x7528;&#x6570;&#x7EC4;&#x65B9;&#x6CD5;(insert(_:atIndex:))&#xFF1A; 123shoppingList.insert(&quot;Maple Syrup&quot;, atIndex: 0)// shoppingList now contains 7 items// &quot;Maple Syrup&quot; is now the first item in the list &#x76F8;&#x4F3C;&#x7684;&#xFF0C;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x9879;&#x76EE;&#xFF0C;&#x4F7F;&#x7528;&#x6570;&#x7EC4;&#x65B9;&#x6CD5;(removeAtIndex(_:)),&#x8FD9;&#x4E2A;&#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x88AB;&#x79FB;&#x9664;&#x7684;&#x9879;&#x76EE;&#xFF1A; 1234let mapleSyrup = shoppingList.removeAtIndex(0)// the item that was at index 0 has just been removed// shoppingList now contains 6 items, and no Maple Syrup// the mapleSyrup constant is now equal to the removed &quot;Maple Syrup&quot; string &#x5982;&#x679C;&#x4F60;&#x60F3;&#x79FB;&#x9664;&#x6570;&#x7EC4;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x4F7F;&#x7528;&#x65B9;&#x6CD5;(removeLast)&#x800C;&#x4E0D;&#x662F;&#x4F7F;&#x7528; removeAtIndex&#x65B9;&#x6CD5;&#xFF0C;&#x4E3A;&#x4E86;&#x907F;&#x514D;&#x9700;&#x8981;&#x67E5;&#x8BE2;&#x6570;&#x7EC4;&#x7684;count&#x5C5E;&#x6027;: 1234let apples = shoppingList.removeLast()// the last item in the arry has just been removed// shoppingList now contains 5 items, and no apples// the apples constant is now equal to teh removed &quot;Apples&quot; string &#x8FED;&#x4EE3;&#x6570;&#x7EC4; &#x4F7F;&#x7528;for-in&#x5FAA;&#x73AF;&#x6765;&#x8FED;&#x4EE3;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x7684;&#x5B9E;&#x4F53;&#x503C;&#x3002; 123for item in shoppingList { print(item)} &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x4E0B;&#x6807;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; enumerate()&#x65B9;&#x6CD5;&#x6765;&#x8FED;&#x4EE3;&#x8FD9;&#x4E2A;&#x6570;&#x7EC4;&#x3002;&#x5BF9;&#x4E8E;&#x6570;&#x7EC4;&#x7684;&#x6BCF;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;enumerate()&#x65B9;&#x6CD5;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x5143;&#x7EC4;&#x3002; 123for (index, value) in shoppingList.enumerate() { print(&quot;Item \\(index + 1): \\(value)&quot;)} Sets &#x4E00;&#x4E2A;set&#x5B58;&#x50A8;&#x76F8;&#x540C;&#x7684;&#x7C7B;&#x578B;&#x548C;&#x4E0D;&#x540C;&#x7684;&#x503C;&#x5728;&#x4E00;&#x4E2A;&#x65E0;&#x5E8F;&#x7684;&#x96C6;&#x5408;&#x4E2D;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;set&#x6765;&#x66FF;&#x4EE3;&#x4E00;&#x4E2A;&#x6570;&#x7EC4;&#x5F53;&#x5143;&#x7D20;&#x7684;&#x987A;&#x5E8F;&#x4E0D;&#x662F;&#x5F88;&#x91CD;&#x8981;&#x65F6;&#xFF0C;&#x6216;&#x8005;&#x4F60;&#x9700;&#x8981;&#x786E;&#x4FDD;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#x53EA;&#x4F1A;&#x51FA;&#x73B0;&#x4E00;&#x6B21;&#x3002; Set &#x7C7B;&#x578B;&#x7684;Hash&#x503C; &#x5728;&#x4E00;&#x4E2A;set&#x4E2D;&#x5FC5;&#x987B;&#x5B58;&#x50A8;&#x53EF;&#x88AB;hash&#x8BDD;&#x7684;&#x503C;&#x3002;&#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x5FC5;&#x987B;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x53EF;&#x4EE5;&#x8BA1;&#x7B97;&#x5B83;&#x7684;hash&#x503C;&#xFF0C;&#x4E00;&#x4E2A;hash&#x503C;&#x662F;&#x4E00;&#x4E2A;Int&#x7C7B;&#x578B;,&#x5982;&#x679C;hash&#x503C;&#x76F8;&#x540C;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x90A3;&#x4E48;&#x4ED6;&#x4EEC;&#x662F;&#x76F8;&#x7B49;&#x7684;&#x3002;&#x4F8B;&#x5982;: a == b &#x76F8;&#x5F53;&#x4E8E; a.hasValue == b.hashValue &#x6240;&#x6709;&#x7684;Swift&#x57FA;&#x672C;&#x7C7B;&#x578B;&#xFF08;&#x4F8B;&#x5982;: String, Int, Double&#x548C;Bool&#xFF09;&#x9ED8;&#x8BA4;&#x90FD;&#x662F;&#x53EF;&#x88AB;hash&#x7684;,&#x5E76;&#x4E14;&#x4ED6;&#x4EEC;&#x53EF;&#x4EE5;&#x4F5C;&#x4E3A;set&#x7684;&#x503C;&#x7C7B;&#x578B;&#x6216;&#x8005;dictionary&#x7684;&#x952E;&#x7C7B;&#x578B;&#x3002; Set &#x7C7B;&#x578B;&#x8BED;&#x6CD5; &#x8FD9;&#x4E2A;&#x7C7B;&#x578B;&#x5728;swift&#x4E2D;&#x7684;&#x5199;&#x6CD5;&#x662F; Set&lt;Element&gt;, &#x8FD9;&#x91CC;&#x7684; Element&#x662F;&#x4E00;&#x79CD;&#x53EF;&#x5DF2;&#x5141;&#x8BB8;&#x88AB;&#x5B58;&#x50A8;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x4E0D;&#x50CF;&#x6570;&#x7EC4;&#xFF0C;set &#x6CA1;&#x6709;&#x7B80;&#x4FBF;&#x7684;&#x5F62;&#x5F0F;&#x3002; &#x521B;&#x5EFA;&#x548C;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A; Set &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x521D;&#x59CB;&#x5316;&#x8BED;&#x6CD5;&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;&#x5E76;&#x4E14;&#x7C7B;&#x578B;&#x660E;&#x786E;&#x7684;set&#xFF1A; 123var letters = Set&lt;Character&gt;()print(&quot;letters is of type Set&lt;Character&gt; with \\(letters.count) items.&quot;)// prints &quot;letters is of type Set&lt;Character&gt; with 0 items.&quot; &#x6216;&#x8005;&#xFF0C;&#x5982;&#x679C;&#x5B83;&#x7684;&#x4E0A;&#x4E0B;&#x6587;&#x4E2D;&#x5DF2;&#x7ECF;&#x63D0;&#x4F9B;&#x4E86;&#x7C7B;&#x578B;&#x4FE1;&#x606F;&#xFF0C;&#x4F8B;&#x5982;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x6216;&#x8005;&#x5DF2;&#x7ECF;&#x58F0;&#x660E;&#x4E86;&#x7684;&#x53D8;&#x91CF;&#x548C;&#x5E38;&#x91CF;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x7A7A;&#x7684;set&#x548C;&#x4E00;&#x4E2A;&#x7A7A;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;: 1234letters.insert(&quot;a&quot;)// letters now contains 1 value of type Characterletters = []// ltters is now an empty set, but is still of type Set&lt;Character&gt; &#x7528;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x6765;&#x521B;&#x5EFA;Set &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x6570;&#x7EC4;&#x5B57;&#x9762;&#x91CF;&#x6765;&#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;set&#xFF0C;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x6216;&#x591A;&#x4E2A;&#x503C;&#x5230;set&#x96C6;&#x5408;&#x7684;&#x7B80;&#x4ECB;&#x65B9;&#x5F0F;. 1var favoriteGenres: Set&lt;String&gt; = [&quot;Rock&quot;, &quot;Classical&quot;, &quot;Hip hop&quot;] &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;Set&#x96C6;&#x5408; &#x4F60;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;set&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#x6765;&#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x96C6;&#x5408;&#x3002;&#x627E;&#x51FA;&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x7684;&#x6240;&#x6709;&#x5143;&#x7D20;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;count &#x5C5E;&#x6027;&#x3002; 12print(&quot;I have \\(favoriteGenres.count) favorite music genres.&quot;)// Prints &quot;I have 3 favorite music genres.&quot; &#x4F7F;&#x7528;Boolean&#x7C7B;&#x578B;&#x5C5E;&#x6027;isEmpty&#xFF0C;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x68C0;&#x6D4B;count&#x5C5E;&#x6027;&#x662F;&#x5426;&#x7B49;&#x4E8E;0&#x7684;&#x7B80;&#x4FBF;&#x5199;&#x6CD5;&#x3002; 123456if favoriteGenres.isEmpty { print(&quot;As far as music goes, I&apos;m not picky.&quot;)} else { print(&quot;I have particular music preferences.&quot;)}// Prints &quot;I have particular music preferences.&quot; &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;insert(_:)&#x65B9;&#x6CD5;&#x6765;&#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x65B0;&#x5143;&#x7D20;&#x5230;set 12favoriteGenres.insert(&quot;Jazz&quot;)// favoriteGenres now contains 4 items &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;remove(_:)&#x65B9;&#x6CD5;&#x6765;&#x79FB;&#x9664;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x8BE5;&#x65B9;&#x6CD5;&#x4F1A;&#x8FD4;&#x56DE;&#x4F60;&#x79FB;&#x9664;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x5982;&#x679C;&#x8FD4;&#x56DE;&#x7684;&#x5143;&#x7D20;&#x4E3A;nil&#xFF0C;&#x90A3;&#x4E48;&#x8FD9;&#x4E2A;set&#x4E0D;&#x5305;&#x542B;&#x8FD9;&#x4E2A;&#x5143;&#x7D20;&#x3002;&#x6216;&#x8005;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;removeAll()&#x6765;&#x79FB;&#x9664;&#x6240;&#x6709;&#x7684;&#x5143;&#x7D20;&#x3002; 123456if let removedGenre = favoriteGenres.remove(&quot;Rock&quot;) { print(&quot;\\(removedGenre)? I&apos;m over it.&quot;)} else { print(&quot;I never much cared for that.&quot;)}// Prints &quot;Rock? I&apos;m over it.&quot; &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; contains(_:)&#x65B9;&#x6CD5;&#x6765;&#x68C0;&#x6D4B;set&#x4E2D;&#x662F;&#x5426;&#x5305;&#x542B;&#x5143;&#x7D20;. 123456if favoriteGenres.contains(&quot;Funk&quot;) { print(&quot;I get up on the good foot.&quot;)} else { print(&quot;It&apos;s too funky in here.&quot;)}// Prints &quot;It&apos;s too funky in here.&quot; &#x8FED;&#x4EE3;set&#x96C6;&#x5408; &#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;for-in&#x5FAA;&#x73AF;&#x6765;&#x8FED;&#x4EE3;set&#x96C6;&#x5408;. 123for genre in favoriteGenres { print(&quot;\\(genre)&quot;)}","tags":[{"name":"swift","slug":"swift","permalink":"http://www.lagel.me/tags/swift/"}]},{"title":"Study Jams 第一课","date":"2016-04-01T10:11:50.000Z","path":"study_jams/first_lesson.html","text":"&#x76EE;&#x5F55;&#xFF1A; Android &#x57FA;&#x672C;&#x5143;&#x7D20; &#x5F00;&#x53D1;Android &#x7684;&#x57FA;&#x672C;&#x77E5;&#x8BC6; &#x64CD;&#x4F5C;View&#x7684;&#x57FA;&#x672C;&#x5185;&#x5BB9; TextView ImageView &#x603B;&#x7ED3; Android &#x57FA;&#x672C;&#x5143;&#x7D20; Android &#x754C;&#x9762;&#x90FD;&#x662F;&#x7531; View &#x6784;&#x6210;&#x3002;&#x5E38;&#x89C1;&#x7684;&#x6709;&#x5982;&#x4E0B;View. TextView Android &#x4E2D;&#x5C55;&#x793A;&#x6587;&#x5B57;&#x5185;&#x5BB9;&#x7684;&#x89C6;&#x56FE;&#x3002; ImageView Android &#x4E2D;&#x5C55;&#x793A;&#x56FE;&#x7247;&#x5185;&#x5BB9;&#x7684;&#x89C6;&#x56FE;&#x3002; Button Android &#x4E2D;&#x7684;&#x6309;&#x94AE;&#x89C6;&#x56FE;&#x3002; &#x5F00;&#x53D1;Android &#x7684;&#x57FA;&#x672C;&#x77E5;&#x8BC6; IDE &#x5F00;&#x53D1;android&#x6211;&#x4EEC;&#x4F7F;&#x7528; google &#x63A8;&#x51FA;&#x7684;IDE&#x5DE5;&#x5177; android studio XML &#x8BED;&#x6CD5; Android &#x7684;&#x5E03;&#x5C40;&#x6587;&#x4EF6;&#x4E66;&#x5199;&#x90FD;&#x662F;&#x4F7F;&#x7528; XML &#x6765;&#x63CF;&#x8FF0;&#x3002;&#x5B83;&#x53EF;&#x4EE5;&#x5206;&#x4E3A;&#x5355;&#x6807;&#x7B7E;&#x548C;&#x53CC;&#x6807;&#x7B7E;&#x3002; &#x4E0B;&#x9762;&#x662F; XML &#x8BED;&#x6CD5;1234&lt;xml&gt; &lt;TextView /&gt; &lt;TextView&gt;&lt;/TextView&gt;&lt;/xml&gt; &#x64CD;&#x4F5C;View&#x7684;&#x57FA;&#x672C;&#x5185;&#x5BB9;TextView &#x4FEE;&#x6539;&#x5C55;&#x793A;&#x7684;&#x6587;&#x5B57;&#x5185;&#x5BB9;. 1234&lt;TextView android:layout_width=&quot;150dp&quot; android:layout_height=&quot;60dp&quot; android:text=&quot;Hello world!&quot;/&gt; &#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539; android:text &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x76EE;&#x7684;&#x3002; &#x4FEE;&#x6539;&#x5C55;&#x793A;&#x6587;&#x5B57;&#x7684;&#x5C55;&#x793A;&#x533A;&#x57DF;.1234&lt;TextView android:layout_width=&quot;150dp&quot; android:layout_height=&quot;60dp&quot; android:text=&quot;Hello world!&quot;/&gt; &#x4FEE;&#x6539; android:layout_width &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x89C6;&#x56FE;&#x7684;&#x5BBD;&#x5EA6;&#x3002;&#x4FEE;&#x6539; android:layout_height &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x89C6;&#x56FE;&#x7684;&#x9AD8;&#x5EA6;&#x3002; &#x5C0F;&#x63D0;&#x793A; Android &#x5728; layout_width &#x548C; layout_height &#x63D0;&#x4F9B;&#x4E86; wrap_content&#xFF0C;&#x4F5C;&#x7528;&#x662F;&#x9002;&#x5E94;&#x6587;&#x5B57;&#x5185;&#x5BB9;&#x7684;&#x6700;&#x5927;&#x533A;&#x57DF;&#x3002; &#x4FEE;&#x6539;&#x6587;&#x5B57;&#x7684;&#x989C;&#x8272;12345&lt;TextView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:textColor=&quot;#FFFFFF&quot; android:text=&quot;Hello world!&quot;/&gt; &#x4FEE;&#x6539; android:textColor &#x53EF;&#x4EE5;&#x8FBE;&#x5230;&#x4FEE;&#x6539;&#x6587;&#x5B57;&#x989C;&#x8272;&#x4F5C;&#x7528;&#xFF0C;&#x91CC;&#x9762;&#x7684;&#x503C;&#x662F; 16&#x8FDB;&#x5236;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x80CC;&#x3002; ImageView &#x6539;&#x53D8;&#x56FE;&#x7247;&#x5927;&#x5C0F;1234&lt;ImageView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:src=&quot;@drawable/app_start&quot;/&gt; &#x548C; TextView &#x4E00;&#x6837;&#xFF0C;&#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4FEE;&#x6539; android:layout_width &#x548C; android:layout_height &#x5C31;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x56FE;&#x7247;&#x5927;&#x5C0F;&#x3002; &#x6539;&#x53D8;&#x56FE;&#x7247;&#x5185;&#x5BB9;1234&lt;ImageView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:src=&quot;@drawable/app_start&quot;/&gt; ImageView &#x4FEE;&#x6539; android:src&#x7684;&#x5185;&#x5BB9; &#x5C31;&#x53EF;&#x4EE5;&#x5C55;&#x793A;&#x4E0D;&#x540C;&#x7684;&#x56FE;&#x7247;&#x3002;&#x4F46;&#x662F; android:src &#x7684;&#x5185;&#x5BB9;&#xFF0C;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x6DFB;&#x52A0;&#x5230; android &#x7684; drawable &#x6587;&#x4EF6;&#x5939;&#x4E2D;&#x3002; &#x6539;&#x53D8;&#x56FE;&#x7247;&#x7684;&#x5C55;&#x793A;&#x65B9;&#x5F0F; 12345&lt;ImageView android:layout_width=&quot;wrap_content&quot; android:layout_height=&quot;wrap_content&quot; android:src=&quot;@drawable/app_start&quot; android:scaleType=&quot;centerCrop&quot;/&gt; &#x6709;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5C55;&#x793A;&#x7684;&#x56FE;&#x7247;&#x5F88;&#x5927;&#xFF0C;&#x8D85;&#x8FC7;&#x4E86;&#x5C4F;&#x5E55;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x88C1;&#x526A;&#x548C;&#x7F29;&#x653E;&#x3002;&#x8FD9;&#x65F6;&#x6211;&#x4EEC;&#x5C31;&#x8981;&#x4F7F;&#x7528; android:scaleType &#x5C5E;&#x6027;&#x8FBE;&#x5230;&#x88C1;&#x526A;&#x548C;&#x7F29;&#x653E;&#x7684;&#x76EE;&#x7684;&#x3002;&#x8FD9;&#x91CC;&#x5C06;&#x56FE;&#x7247;&#x8FDB;&#x884C;&#x5C45;&#x4E2D;&#x88C1;&#x526A;&#x3002; &#x603B;&#x7ED3; Android App UI&#x7684;&#x90FD;&#x662F;&#x901A;&#x8FC7;View&#x6765;&#x6784;&#x6210;&#x7684;&#x3002; &#x5E38;&#x7528;&#x7684;&#x89C6;&#x56FE;&#x6709; TextView ImageView Button &#x5F00;&#x53D1; Android &#x9700;&#x8981;&#x4F7F;&#x7528; Android Studio &#x548C; XML&#x8BED;&#x6CD5; &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; TextView &#x7B49;&#x89C6;&#x56FE;&#x7684;&#x5C5E;&#x6027;&#xFF0C;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#x5B83;&#x7684;&#x5927;&#x5C0F;&#x548C;&#x5185;&#x5BB9;&#x4EE5;&#x53CA;&#x5176;&#x4ED6;&#x3002;","tags":[{"name":"android","slug":"android","permalink":"http://www.lagel.me/tags/android/"},{"name":"study","slug":"study","permalink":"http://www.lagel.me/tags/study/"}]},{"title":"如何使用RobotFramework写出好的测试案例","date":"2016-03-29T07:22:03.000Z","path":"robotframework/howToWriteGoodTestCase.html","text":"&#x539F;&#x6587;&#x5730;&#x5740; &#x76EE;&#x5F55;&#xFF1A; &#x4ECB;&#x7ECD; &#x53D6;&#x540D; &#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x540D;&#x79F0; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x547D;&#x540D; &#x5173;&#x952E;&#x5B57;&#x540D;&#x79F0; &#x521D;&#x59CB;&#x5316;(setup)&#x548C;&#x62C6;&#x5378;(teardown)&#x5173;&#x952E;&#x5B57;&#x547D;&#x540D; &#x6587;&#x6863; &#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x6587;&#x6863; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x6587;&#x6863; &#x7528;&#x6237;&#x5173;&#x952E;&#x5B57;&#x6587;&#x6863; &#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x7ED3;&#x6784; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7ED3;&#x6784; &#x5DE5;&#x4F5C;&#x6D41;&#x6D4B;&#x8BD5; &#x6570;&#x636E;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5; &#x7528;&#x6237;&#x5173;&#x952E;&#x5B57; &#x53D8;&#x91CF; &#x53D8;&#x91CF;&#x547D;&#x540D; &#x4F20;&#x9012;&#x548C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C; &#x907F;&#x514D;&#x4F7F;&#x7528;&#x4F11;&#x7720; &#x4ECB;&#x7ECD; &#x8FD9;&#x662F;&#x4F7F;&#x7528; Robot Framework &#x5199;&#x51FA;&#x597D;&#x7684;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7684;&#x9AD8;&#x7EA7;&#x5F15;&#x5BFC;&#x3002; &#x5982;&#x4F55;&#x771F;&#x6B63;&#x7684;&#x548C;&#x88AB;&#x6D4B;&#x8BD5;&#x7684;&#x7CFB;&#x7EDF;&#x4EA4;&#x4E92;&#xFF0C;&#x8FD9;&#x662F;&#x8D85;&#x51FA;&#x672C;&#x6587;&#x7684;&#x8303;&#x56F4;&#x3002; &#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x4FDD;&#x6301;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7B80;&#x5355;&#x6613;&#x61C2;&#xFF0C;&#x5C3D;&#x53EF;&#x80FD;&#x5728;&#x4EBA;&#x4EEC;&#x719F;&#x6089;&#x7684;&#x9886;&#x57DF;&#x662F;&#x6700;&#x91CD;&#x8981;&#x7684;&#x5F15;&#x5BFC;&#x65B9;&#x5F0F;&#x3002; &#x8FD9;&#x901A;&#x5E38;&#x4E5F;&#x7B80;&#x5316;&#x4E86;&#x7EF4;&#x62A4;&#x3002; &#x5173;&#x4E8E;&#x8FD9;&#x4E2A;&#x4E3B;&#x9898;&#x66F4;&#x591A;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x4F60;&#x53EF;&#x80FD;&#x60F3;&#x8981;&#x4E86;&#x89E3;&#x4E00;&#x4E9B;&#x5F88;&#x68D2;&#x7684;&#x8D44;&#x6E90;&#x3002; Robot Framework Dos and Don&#x2019;ts &#x662F;&#x57FA;&#x4E8E;Robot Framework&#x5982;&#x4F55;&#x505A;&#x7684;&#x4E00;&#x4E2A;&#x5E7B;&#x706F;&#x7247;&#x3002; &#x7F16;&#x5199;&#x53EF;&#x7EF4;&#x62A4;&#x7684;&#x81EA;&#x52A8;&#x5316;&#x9A8C;&#x6536;&#x6D4B;&#x8BD5;&#x662F; Dale Emery &#x5199;&#x7684;&#x6587;&#x7AE0;&#x3002; &#x5982;&#x4F55;&#x6784;&#x9020;&#x4E00;&#x5957;&#x53EF;&#x6269;&#x5C55;&#x548C;&#x53EF;&#x7EF4;&#x62A4;&#x7684;&#x9A8C;&#x6536;&#x6D4B;&#x8BD5;&#x8FD9;&#x662F;Andreas Ebbert-Karroum &#x7684;&#x4E00;&#x7BC7;&#x535A;&#x6587;&#x3002; &#x53D6;&#x540D;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x540D;&#x79F0; &#x5957;&#x4EF6;&#x540D;&#x5B57;&#x5E94;&#x8BE5;&#x5C3D;&#x53EF;&#x80FD;&#x7684;&#x4F7F;&#x7528;&#x63CF;&#x8FF0;&#x6027;&#x8BED;&#x8A00;&#x3002; &#x81EA;&#x52A8;&#x88AB;&#x521B;&#x5EFA;&#x7684;&#x540D;&#x5B57;&#x6765;&#x81EA;&#x6587;&#x4EF6;&#x6216;&#x6587;&#x4EF6;&#x5939;&#x540D;&#x5B57;&#x3002; &#x53BB;&#x6389;&#x540E;&#x7F00;&#x540D;&#x3002; &#x5C06;&#x4E0B;&#x5212;&#x7EBF;&#x8F6C;&#x6362;&#x6210;&#x7A7A;&#x683C;&#x3002; &#x5982;&#x679C;&#x540D;&#x5B57;&#x90FD;&#x662F;&#x5C0F;&#x5199;&#xFF0C;&#x5355;&#x8BCD;&#x5E94;&#x8BE5;&#x5927;&#x5199;&#x3002; &#x5728;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x4E2D;&#x540D;&#x79F0;&#x53EF;&#x4EE5;&#x76F8;&#x5BF9;&#x8F83;&#x957F;&#xFF0C;&#x4F46;&#x662F;&#x8FC7;&#x957F;&#x7684;&#x540D;&#x5B57;&#x662F;&#x4E0D;&#x65B9;&#x4FBF;&#x7684;&#x3002; &#x5982;&#x679C;&#x9700;&#x8981;&#x53EF;&#x4EE5;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4F7F;&#x7528; --name &#x9009;&#x9879;&#xFF0C;&#x6765;&#x66FF;&#x6362;&#x9876;&#x5C42;&#x7684;&#x5957;&#x4EF6;&#x540D;&#x79F0;&#x3002; &#x4F8B;&#x5982;&#xFF1A; login_tests.robot -&gt; Login Tests IP_v4_and_v6 -&gt; Ip v4 and v6 &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x547D;&#x540D; &#x6D4B;&#x8BD5;&#x540D;&#x79F0;&#x5E94;&#x8BE5;&#x548C;&#x5957;&#x4EF6;&#x540D;&#x79F0;&#x7684;&#x63CF;&#x8FF0;&#x4E00;&#x81F4;&#x3002; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5957;&#x4EF6;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x76F8;&#x540C;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x5E76;&#x4E14;&#x8FD9;&#x4E2A;&#x5957;&#x4EF6;&#x7684;&#x547D;&#x540D;&#x662F;&#x53EF;&#x53D6;&#x7684;&#xFF0C;&#x90A3;&#x4E48;&#x6D4B;&#x8BD5;&#x540D;&#x79F0;&#x53EF;&#x4EE5;&#x77ED;&#x5C0F;&#x3002; &#x6070;&#x5F53;&#x7684;&#x540D;&#x5B57;&#x5E94;&#x8BE5;&#x662F;&#x5728;&#x4F60;&#x7684;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x6587;&#x4EF6;&#x4E2D;&#x6307;&#x5B9A;&#x5E76;&#x4E14;&#x65E0;&#x9700;&#x4EFB;&#x4F55;&#x8F6C;&#x6362;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5047;&#x8BBE;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5728; invalid_login.robot &#x4E2D;&#x628A;invalid login &#x548C;&#x6D4B;&#x8BD5;&#x8054;&#x7CFB;&#x8D77;&#x6765;&#xFF0C;&#x4E0B;&#x9762;&#x90FD;&#x662F;OK&#x7684;&#x6D4B;&#x8BD5;&#x540D;&#x79F0;&#x3002; 1234567*** Test Cases ***Empty PasswordEmpty UsernameEmpty Username And PasswordInvalid UsernameInvalid PasswordInvalid Username And Password &#x4E0B;&#x9762;&#x8FD9;&#x4E9B;&#x547D;&#x540D;&#x662F;&#x6709;&#x70B9;&#x957F; 1234567*** Test Cases ***Login With Empty Password Should FailLogin With Empty Username Should FailLogin With Empty Username And Password Should FailLogin With Invalid Password Should FailLogin With Invalid Username Should FailLogin With Invalid UserName And Invalid Password Should Fail &#x5173;&#x952E;&#x5B57;&#x540D;&#x79F0; &#x6B64;&#x5916;&#xFF0C;&#x5173;&#x952E;&#x5B57;&#x547D;&#x540D;&#x5E94;&#x8BE5;&#x5177;&#x6709;&#x63CF;&#x8FF0;&#x6027;&#x548C;&#x6E05;&#x6670;&#x7684;&#x3002; &#x5E94;&#x8BE5;&#x9610;&#x8FF0;&#x5173;&#x952E;&#x5B57;&#x662F;&#x505A;&#x4EC0;&#x4E48;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x63CF;&#x8FF0;&#x5B83;&#x8BE5;&#x600E;&#x4E48;&#x505A;&#x3002; &#x975E;&#x5E38;&#x4E0D;&#x540C;&#x7684;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;(&#x4F8B;&#x5982; Input Text &#x6216;&#x8005; Administrator logs into system) &#x8FD9;&#x4E9B;&#x662F;&#x4E0D;&#x660E;&#x786E;&#x7684;&#xFF08;&#x53EF;&#x9009;&#x7684;&#xFF09;&#x6307;&#x5BFC;&#x65B9;&#x6848;,&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x6807;&#x9898;&#x5927;&#x5199;&#x6216;&#x8005;&#x662F;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#x3002; &#x6807;&#x9898;&#x5927;&#x5199;&#x7ECF;&#x5E38;&#x88AB;&#x4F7F;&#x7528;&#x5728;&#x5173;&#x952E;&#x5B57;&#x540D;&#x79F0;&#x5F88;&#x77ED;&#x7684;&#x65F6;&#x5019;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;Input Text)&#x3002; &#x901A;&#x5E38;&#x5173;&#x952E;&#x5B57;&#x7B2C;&#x4E00;&#x4E2A;&#x5B57;&#x6BCD;&#x5927;&#x5199;&#x662F;&#x8F83;&#x597D;&#x7684;&#x8FD0;&#x884C;&#x65B9;&#x5F0F;&#xFF0C;&#x56E0;&#x4E3A;&#x5B83;&#x5C31;&#x50CF;&#x4E00;&#x4E2A;&#x53E5;&#x5B50;&#x3002;&#x8FD9;&#x4E9B;&#x5173;&#x952E;&#x5B57;&#x5F80;&#x5F80;&#x4E5F;&#x6709;&#x66F4;&#x9AD8;&#x7684;&#x7B49;&#x7EA7;&#x3002;(&#x4F8B;&#x5982;&#xFF1A;Administrator logs into system) &#x597D;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 12*** Keywords ***Login With Valid Credentials &#x5DEE;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 1Input Valid Username And Valid Password And Click Login Button &#x521D;&#x59CB;&#x5316;(setup)&#x548C;&#x62C6;&#x5378;(teardown)&#x5173;&#x952E;&#x5B57;&#x547D;&#x540D; &#x5C3D;&#x91CF;&#x4F7F;&#x7528;&#x63CF;&#x8FF0;&#x5B83;&#x662F;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#x540D;&#x8BCD;&#x3002; &#x5C3D;&#x53EF;&#x80FD;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x5173;&#x952E;&#x5B57;&#x3002; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x548C;&#x62C6;&#x5378;&#x5305;&#x542B;&#x4E0D;&#x76F8;&#x5173;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x591A;&#x4E2A;&#x62BD;&#x8C61;&#x540D;&#x8BCD;&#x662F;&#x53EF;&#x88AB;&#x63A5;&#x53D7;&#x7684; &#x6E05;&#x5355;&#x4E2D;&#x540D;&#x8BCD;&#x7684;&#x6B65;&#x9AA4;&#x662F;&#x91CD;&#x590D;&#x548C;&#x7EF4;&#x62A4;&#x95EE;&#x9898;&#x3002; &#x4F7F;&#x7528;&#x4E00;&#x4E9B;&#x666E;&#x901A;&#x7684;&#x540D;&#x5B57;&#x662F;&#x66F4;&#x597D;&#x7684;&#x3002;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;Initialize system&#xFF09; &#x5982;&#x679C;&#x5173;&#x952E;&#x5B57;&#x8986;&#x5199;&#x4E86;&#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x5728;&#x66F4;&#x5E95;&#x5C42;&#x7684;&#x6B65;&#x9AA4;&#xFF0C;&#x4E00;&#x5B9A;&#x8981;&#x5185;&#x7F6E;&#x5173;&#x952E;&#x5B57;&#x8FD0;&#x884C;&#x5173;&#x952E;&#x5B57;&#x80FD;&#x591F;&#x6B63;&#x5E38;&#x5DE5;&#x4F5C;&#x3002; &#x5982;&#x679C;&#x521D;&#x59CB;&#x5316;&#x548C;&#x62C6;&#x5378;&#x573A;&#x666F;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528;&#x4E00;&#x6B21;&#xFF0C;&#x5C31;&#x4E0D;&#x8981;&#x91CD;&#x590D;&#x7684;&#x4F7F;&#x7528;&#x3002; &#x6BCF;&#x4E2A;&#x4EBA;&#x4F7F;&#x7528;&#x8FD9;&#x4E9B;&#x521D;&#x59CB;&#x5316;&#x548C;&#x62C6;&#x5378;&#x5E94;&#x5F53;&#x90FD;&#x662F;&#x660E;&#x786E;&#x7684;&#x3002; &#x597D;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 12*** Settings ***Suite Setup Initialize System &#x597D;&#x7684;&#x6848;&#x4F8B;&#xFF08;&#x5982;&#x679C;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x6B21;&#xFF09;&#xFF1A; 12345Suite Setup Run Keywords&#xB7;&#xB7;&#xB7; Login To System AND&#xB7;&#xB7;&#xB7; Add User AND&#xB7;&#xB7;&#xB7; Activate Alarms AND&#xB7;&#xB7;&#xB7; Check Balance &#x5DEE;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 12*** Settings ***Suite Setup Login To System, Add User, Activate Alarms And Check Balance &#x6587;&#x6863;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x6587;&#x6863; &#x7ECF;&#x5E38;&#x4E00;&#x4E2A;&#x597D;&#x7684;&#x60F3;&#x6CD5;&#x6DFB;&#x52A0;&#x5230;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x6587;&#x4EF6;&#x7684;&#x7EFC;&#x5408;&#x6587;&#x6863;&#x4E2D;&#x3002; &#x5E94;&#x5F53;&#x5305;&#x542B;&#x540E;&#x53F0;&#x4FE1;&#x606F;&#xFF0C;&#x4E3A;&#x4EC0;&#x4E48;&#x8981;&#x521B;&#x5EFA;&#x6D4B;&#x8BD5;&#xFF0C;&#x5907;&#x6CE8;&#x6267;&#x884C;&#x73AF;&#x5883;&#xFF0C;&#x7B49;&#x3002; &#x4E0D;&#x8981;&#x53EA;&#x91CD;&#x590D;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x540D;&#x79F0;&#x3002; &#x5982;&#x679C;&#x771F;&#x7684;&#x4E0D;&#x9700;&#x8981;&#x6700;&#x597D;&#x4E0D;&#x6DFB;&#x52A0;&#x6587;&#x6863;&#x3002; &#x4E0D;&#x8981;&#x5305;&#x542B;&#x592A;&#x591A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x8BE6;&#x60C5;&#x3002; &#x6D4B;&#x8BD5;&#x5E94;&#x5F53;&#x8DB3;&#x591F;&#x6E05;&#x6670;&#x660E;&#x4E86;&#x3002; &#x91CD;&#x590D;&#x7684;&#x4FE1;&#x606F;&#x662F;&#x6D6A;&#x8D39;&#x7684;&#x8FD8;&#x6709;&#x7EF4;&#x62A4;&#x95EE;&#x9898;&#x3002; &#x6587;&#x6863;&#x53EF;&#x4EE5;&#x5305;&#x542B;&#x66F4;&#x591A;&#x4FE1;&#x606F;&#x7684;&#x94FE;&#x63A5;&#x3002; &#x5982;&#x679C;&#x4F60;&#x9700;&#x8981;&#x6587;&#x6863;&#x4FE1;&#x606F;&#x76F8;&#x5F53;&#x4E8E; &#x952E;&#x503C;&#x5BF9;&#xFF0C;&#x53EF;&#x8981;&#x8003;&#x8651;&#x4F7F;&#x7528;&#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x5143;&#x6570;&#x636E;&#x3002; &#x6587;&#x6863;&#x548C;&#x5143;&#x6570;&#x636E;&#x662F;&#x9876;&#x5C42;&#x7684;&#x5957;&#x4EF6;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x5404;&#x81EA;&#x4F7F;&#x7528; --doc &#x548C; --metadata &#x9009;&#x9879;&#x3002; &#x597D;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 123456*** Settings ***Documentation Tests to verify that account withdrawals succeed and&#xB7;&#xB7;&#xB7; fail correctly depending from users account balance&#xB7;&#xB7;&#xB7; and account type dependent rules.&#xB7;&#xB7;&#xB7; See http://internal.example.com/docs/abs.pdfMetadata Version 0.1 &#x5DEE;&#x7684;&#x6848;&#x4F8B;&#xFF08;&#x5C24;&#x5176;&#x662F;&#x5982;&#x679C;&#x6761;&#x4EF6;&#x540D;&#x79F0;&#x662F; account_withdrawal.robot&#xFF09;: 12*** Settings ***Documentation Tests Account Withdrawal. &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x6587;&#x6863; &#x901A;&#x5E38;&#x6D4B;&#x8BD5;&#x4E0D;&#x9700;&#x8981;&#x6587;&#x6863;&#x3002; &#x7236;&#x5957;&#x4EF6;&#x7684;&#x6587;&#x6863;&#x548C;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7684;&#x540D;&#x79F0;&#xFF0C;&#x5E94;&#x5F53;&#x7ED9;&#x4E88;&#x8DB3;&#x591F;&#x7684;&#x540E;&#x53F0;&#x4FE1;&#x606F;&#x3002; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7ED3;&#x6784;&#x5E94;&#x5F53;&#x8DB3;&#x591F;&#x6E05;&#x6670;&#x5728;&#x6CA1;&#x6709;&#x6587;&#x6863;&#x548C;&#x6CE8;&#x91CA;&#x7684;&#x60C5;&#x51B5;&#x4E0B;&#x3002; &#x6807;&#x7B7E;&#x901A;&#x5E38;&#x6BD4;&#x6587;&#x6863;&#x66F4;&#x7075;&#x6D3B;&#x7684;&#x63D0;&#x4F9B;&#x66F4;&#x591A;&#x5B9E;&#x7528;&#x6027;&#xFF08;&#x7EDF;&#x8BA1;&#xFF0C;&#x5305;&#x542B;/&#x6392;&#x9664;&#xFF0C;&#x7B49;&#xFF09;&#x3002; &#x6709;&#x65F6;&#x5019;&#x6D4B;&#x8BD5;&#x6587;&#x6863;&#x662F;&#x6709;&#x7528;&#x7684;&#xFF0C;&#x65E0;&#x9700;&#x5BB3;&#x6015;&#x4F7F;&#x7528;&#x5B83;&#x3002; &#x597D;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 12345678*** Test Cases ***Valid Login [Tags] Iteration-3 Smoke Open Login Page Input Username ${VALID USERNAME} Input Password ${VALID PASSWORD} Submit Credentials Welcome Page Should Be Open &#x5DEE;&#x7684;&#x6848;&#x4F8B;&#xFF1A; 12345678910*** Test Cases ***Valid Login [Documentation] Opens a browser to login url, inputs valid username &#xB7;&#xB7;&#xB7; and password and checks that the welcome page is open. &#xB7;&#xB7;&#xB7; This is a smoke test. Created in iteration 3. Open Broser ${URL} ${BROWSER} Input Text field1 ${NU11} Input Text field2 ${PW11} Click Button button_12 Titlt Should Be Welcome Page &#x7528;&#x6237;&#x5173;&#x952E;&#x5B57;&#x6587;&#x6863; &#x5982;&#x679C;&#x5173;&#x952E;&#x5B57;&#x76F8;&#x5BF9;&#x7B80;&#x5355;&#x7684;&#x8BDD;&#xFF0C;&#x6587;&#x6863;&#x4E0D;&#x662F;&#x5FC5;&#x8981;&#x7684; &#x597D;&#x7684;&#x5173;&#x952E;&#x5B57;&#x548C;&#x53C2;&#x6570;&#x540D;&#x79F0;&#x548C;&#x6E05;&#x6670;&#x7684;&#x7ED3;&#x6784;&#x662F;&#x8DB3;&#x591F;&#x7684;&#x3002; &#x6700;&#x91CD;&#x8981;&#x7684;&#x4F7F;&#x7528;&#x65B9;&#x5F0F;&#xFF0C;&#x6587;&#x6863;&#x53C2;&#x6570;&#x548C;&#x8FD4;&#x56DE;&#x503C;&#x3002; &#x5728;&#x8D44;&#x6E90;&#x6587;&#x4EF6;&#x4E2D;&#x5C55;&#x793A;&#xFF0C;&#x4F7F;&#x7528; Libdoc &#x751F;&#x6210;&#x5173;&#x952E;&#x5B57;&#x6587;&#x6863;&#xFF0C;&#x4EE5;&#x53CA;&#x7F16;&#x8F91;&#x5668;RIDE &#x80FD;&#x591F;&#x5C55;&#x793A;&#x5B83;&#x5728;&#x4E00;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x4E2D;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x5730;&#x65B9;&#x3002; &#x6D4B;&#x8BD5;&#x5957;&#x4EF6;&#x7ED3;&#x6784; &#x5728;&#x4E00;&#x4E2A;&#x6761;&#x4EF6;&#x91CC;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x90FD;&#x5E94;&#x5F53;&#x662F;&#x76F8;&#x5173;&#x8054;&#x7684;&#x3002; &#x901A;&#x5E38;&#x516C;&#x5171;&#x7684; &#x521D;&#x59CB;&#x5316; &#x6216; &#x62C6;&#x5378; &#x662F;&#x4E0D;&#x9519;&#x7684;&#x63D0;&#x793A;&#x7269;&#x3002; &#x5728;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x91CC;&#x4E0D;&#x80FD;&#x6539;&#x5305;&#x542B;&#x592A;&#x591A;&#x7684;&#x6D4B;&#x8BD5;&#xFF08;&#x6700;&#x5927;10&#x4E2A;&#xFF09;&#xFF0C;&#x9664;&#x975E;&#x5B83;&#x662F;&#x6570;&#x636E;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5;&#x3002; &#x6D4B;&#x8BD5;&#x5E94;&#x5F53;&#x90FD;&#x662F;&#x72EC;&#x7ACB;&#x7684;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x4F7F;&#x7528;setup/teardown&#x3002; &#x6709;&#x65F6;&#x5019;&#x4F9D;&#x8D56;&#x6D4B;&#x8BD5;&#x65F6;&#x4E0D;&#x53EF;&#x907F;&#x514D;&#x7684;&#x3002; &#x4F8B;&#x5982;&#xFF0C;&#x5957;&#x4EF6;&#x80FD;&#x591F;&#x5206;&#x522B;&#x7684;&#x591A;&#x6B21;&#x521D;&#x59CB;&#x503C;&#x5BF9;&#x4E8E;&#x6240;&#x6709;&#x6D4B;&#x8BD5;&#x3002; &#x4ECE;&#x6765;&#x6CA1;&#x6709;&#x957F;&#x94FE;&#x5F0F;&#x7684;&#x4F9D;&#x8D56;&#x6D4B;&#x8BD5;&#x3002; &#x8003;&#x8651;&#x4F7F;&#x7528;&#x8FD9;&#x4E2A; ${PREV TEST STATUS} &#x53D8;&#x91CF;&#x6765;&#x9A8C;&#x8BC1;&#x524D;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x7684;&#x72B6;&#x6001;&#x3002; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7ED3;&#x6784; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x5E94;&#x5F53;&#x7B80;&#x5355;&#x6613;&#x61C2;&#x3002; &#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x53EA;&#x6D4B;&#x8BD5;&#x4E00;&#x4EF6;&#x4E8B;&#x60C5;&#x3002; &#x4E8B;&#x60C5;&#x80FD;&#x591F;&#x5F88;&#x5C0F;&#xFF08;&#x5355;&#x4E00;&#x7684;&#x529F;&#x80FD;&#x90E8;&#x5206;&#xFF09;&#x6216;&#x5F88;&#x5927;&#xFF08;&#x7AEF;&#x5230;&#x7AEF;&#x6D4B;&#x8BD5;&#xFF09;&#x3002; &#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#x3002; &#x59CB;&#x7EC8;&#x4F7F;&#x7528;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#xFF08;&#x5355;&#x4E00;&#x5C42;&#x62BD;&#x8C61;&#x539F;&#x7406;&#xFF09;&#x3002; &#x4E0D;&#x8981;&#x5305;&#x542B;&#x975E;&#x5FC5;&#x8981;&#x7684;&#x8BE6;&#x60C5;&#x5728;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x5C42;&#x3002; &#x4E24;&#x79CD;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#xFF1A; &#x5DE5;&#x4F5C;&#x6D41;&#x6D4B;&#x8BD5; &#x6570;&#x636E;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5; &#x5DE5;&#x4F5C;&#x6D41;&#x6D4B;&#x8BD5; &#x901A;&#x5E38;&#x6709;&#x5982;&#x4E0B;&#x51E0;&#x4E2A;&#x9636;&#x6BB5;&#xFF1A; &#x5148;&#x51B3;&#x6761;&#x4EF6;&#xFF08;&#x53EF;&#x9009;&#x62E9;&#x7684;&#xFF0C;&#x7ECF;&#x5E38;&#x5728;setup) &#x52A8;&#x4F5C;&#xFF08;&#x5BF9;&#x7CFB;&#x7EDF;&#x505A;&#x4EC0;&#x4E48;&#x4E00;&#x4E9B;&#x4E8B;&#xFF09; &#x6838;&#x5B9E;&#xFF08;&#x9A8C;&#x8BC1;&#x7ED3;&#x679C;&#xFF0C;&#x5F3A;&#x5236;&#x7684;&#xFF09; &#x6E05;&#x9664;&#xFF08;&#x53EF;&#x9009;&#x62E9;&#xFF0C;&#x7ECF;&#x5E38;&#x5728;teardown&#x53BB;&#x786E;&#x4FDD;&#x5B83;&#x88AB;&#x6267;&#x884C;&#xFF09; &#x5173;&#x952E;&#x5B57;&#x63CF;&#x8FF0;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x505A;&#x4EC0;&#x4E48;&#x3002; &#x4F7F;&#x7528;&#x6E05;&#x6670;&#x5730;&#x5173;&#x952E;&#x5B57;&#x540D;&#x79F0;&#x6765;&#x9002;&#x5E94;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#x3002; &#x5E94;&#x5F53;&#x5305;&#x542B;&#x8DB3;&#x591F;&#x7684;&#x4FE1;&#x606F;&#x5BF9;&#x4E8E;&#x624B;&#x52A8;&#x6D4B;&#x8BD5;&#x3002; &#x5E94;&#x5F53;&#x7EDD;&#x4E0D;&#x4F7F;&#x7528;&#x6587;&#x6863;&#x548C;&#x8BC4;&#x8BBA;&#x6765;&#x89E3;&#x91CA;&#x6D4B;&#x8BD5;&#x662F;&#x505A;&#x4EC0;&#x4E48;&#x7684;&#x3002; &#x4E0D;&#x540C;&#x7684;&#x6D4B;&#x8BD5;&#x6709;&#x4E0D;&#x61C2;&#x7684;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#x3002; &#x6D4B;&#x8BD5;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x8BE6;&#x60C5;&#x9700;&#x8981;&#x66F4;&#x6E05;&#x6670;&#x3002; &#x7AEF;&#x5230;&#x7AEF;&#x6D4B;&#x8BD5;&#x53EF;&#x80FD;&#x5728;&#x66F4;&#x9AD8;&#x7684;&#x7B49;&#x7EA7;&#x3002; &#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x5E94;&#x8BE5;&#x53EA;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#x3002; &#x4E0D;&#x540C;&#x7684;&#x65B9;&#x5F0F;&#x3002; &#x66F4;&#x591A;&#x7684;&#x4E13;&#x4E1A;&#x6D4B;&#x8BD5;&#x9488;&#x5BF9;&#x5E95;&#x5C42;&#x8BE6;&#x60C5;&#x548C;&#x6574;&#x5408;&#x6D4B;&#x8BD5;&#x3002; &#x53EF;&#x6267;&#x884C;&#x7684;&#x89C4;&#x683C;&#x884C;&#x4E3A;&#x662F;&#x5FC5;&#x987B;&#x7684;&#x3002; &#x4F7F;&#x7528;&#x9886;&#x57DF;&#x8BED;&#x8A00;&#x3002; &#x6BCF;&#x4E2A;&#x4EBA;&#xFF08;&#x7528;&#x6237;&#x6216;&#x4EA7;&#x54C1;&#x62E5;&#x6709;&#x8005;&#xFF09;&#x90FD;&#x80FD;&#x660E;&#x767D;&#x3002; &#x6CA1;&#x6709;&#x590D;&#x6742;&#x7684;&#x903B;&#x8F91;&#x5728;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x5C42;&#x7EA7;&#x3002; &#x6CA1;&#x6709;&#x5FAA;&#x73AF;&#x6216;&#x8005;&#x5224;&#x65AD;&#x7ED3;&#x6784;&#x3002; &#x5C0F;&#x5FC3;&#x7684;&#x4F7F;&#x7528;&#x6307;&#x5B9A;&#x53D8;&#x91CF;&#x3002; &#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x4E0D;&#x5E94;&#x8BE5;&#x770B;&#x8D77;&#x6765;&#x50CF;&#x811A;&#x672C;&#x3002; &#x6700;&#x5927;10&#x4E2A;&#x6B65;&#x9AA4;&#xFF0C;&#x66F4;&#x5C11;&#x662F;&#x53EF;&#x53D6;&#x7684;&#x3002; &#x4E0B;&#x9762;&#x4F8B;&#x5B50;&#x4F7F;&#x7528; &#x6807;&#x51C6; &#x5173;&#x952E;&#x5B57;&#x9A71;&#x52A8;&#x65B9;&#x5F0F;&#xFF1A; 1234567*** Test Cases ***Valid Login Open Broser To Login Page Input Username demo Input Password mode Submit Credentials Welcome Page Should Be Open &#x4E0B;&#x9762;&#x4F8B;&#x5B50;&#x4F7F;&#x7528;&#x9AD8;&#x7B49;&#x7EA7;&#x7684; gherkin &#x65B9;&#x5F0F;&#xFF1A; 12345*** Test Cases ***Valid Login Given browser is opened to login page When user &quot;demo&quot; logs in with password &quot;mode&quot; Then welcome page should be open &#x67E5;&#x770B;&#x8FD9;&#x4E2A;&#x7F51;&#x9875;&#x9879;&#x76EE;&#x793A;&#x8303;&#x9488;&#x5BF9;&#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7248;&#x672C;&#x3002; &#x6570;&#x636E;&#x9A71;&#x52A8;&#x6D4B;&#x8BD5; &#x4E00;&#x4E2A;&#x9AD8;&#x9636;&#x5173;&#x952E;&#x5B57;&#x5BF9;&#x6BCF;&#x4E2A;&#x6D4B;&#x8BD5;&#x3002; &#x4E0D;&#x540C;&#x7684;&#x53C2;&#x6570;&#xFF0C;&#x521B;&#x5EFA;&#x4E0D;&#x540C;&#x7684;&#x6D4B;&#x8BD5;&#x3002; &#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x80FD;&#x591F;&#x591A;&#x6B21;&#x8FD0;&#x884C;&#x76F8;&#x540C;&#x7684;&#x5173;&#x952E;&#x5B57;&#x6765;&#x9A8C;&#x8BC1;&#x591A;&#x4E2A;&#x76F8;&#x5173;&#x7684;&#x53D8;&#x5316;&#x3002; &#x5982;&#x679C;&#x8FD9;&#x4E2A;&#x5173;&#x952E;&#x5B57;&#x7684;&#x5B9E;&#x73B0;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x7528;&#x6237;&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x5B83;&#x901A;&#x5E38;&#x5305;&#x542B;&#x4E86;&#x76F8;&#x4F3C;&#x7684;&#x5DE5;&#x4F5C;&#x6D41;&#x4F5C;&#x4E3A;&#x5DE5;&#x4F5C;&#x6D41;&#x6D4B;&#x8BD5;&#x3002; &#x9664;&#x975E;&#x662F;&#x5728;&#x522B;&#x5904;&#x9700;&#x8981;&#xFF0C;&#x5728;&#x76F8;&#x540C;&#x7684;&#x6587;&#x4EF6;&#x521B;&#x5EFA;&#x548C;&#x4F7F;&#x7528;&#x5B83;&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x68D2;&#x7684;&#x4E3B;&#x610F;&#x3002; &#x63A8;&#x8350;&#x4F7F;&#x7528;&#x529F;&#x80FD;&#x6D4B;&#x8BD5;&#x6A21;&#x677F;&#x3002; &#x4E0D;&#x9700;&#x8981;&#x591A;&#x6B21;&#x91CD;&#x590D;&#x5173;&#x952E;&#x5B57;&#x3002; &#x5728;&#x4E00;&#x4E2A;&#x6D4B;&#x8BD5;&#x4E2D;&#x66F4;&#x5BB9;&#x6613;&#x7684;&#x6D4B;&#x8BD5;&#x591A;&#x4E2A;&#x53D8;&#x5316;&#x3002; &#x5C3D;&#x53EF;&#x80FD;&#x5E76;&#x63A8;&#x8350;&#x540D;&#x79F0;&#x5217;&#x6807;&#x9898;&#x3002; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x771F;&#x7684;&#x9700;&#x8981;&#x5F88;&#x591A;&#x884C;&#x7684;&#x6D4B;&#x8BD5;&#xFF0C;&#x8003;&#x8651;&#x521B;&#x9020;&#x4E00;&#x4E2A;&#x989D;&#x5916;&#x7684;&#x6A21;&#x578B;&#x4F5C;&#x4E3A;&#x57FA;&#x7840;&#x3002; &#x4F8B;&#x5B50;&#xFF1A;123456789101112131415161718*** Settings ***Test Template Login with invalid credentials should fail*** Test Cases *** USERNAME PASSWORDInvalid Username invalid ${VALID PASSWORD}Invalid Password ${VALID USERNAME} invalidInvalid Both invalid invalidEmpty Password ${VALID USERNAME} ${EMPTY}Empty Username ${EMPTY} ${VALID PASSWORD}Empty Both ${EMPTY} ${EMPTY}*** Keywords ***Login with invalid credentials should fail [Arguments] ${username} ${password} Input Username ${username} Input Password ${password} Submit Credentials Error Page Should Be Open &#x4E0A;&#x8FF0;&#x4F8B;&#x5B50;&#x7684;&#x53EF;&#x6267;&#x884C;&#x7248;&#x672C;&#xFF0C;&#x8BF7;&#x67E5;&#x770B;&#x8FD9;&#x4E2A;&#x7F51;&#x9875;&#x9879;&#x76EE;&#x793A;&#x4F8B; &#x7528;&#x6237;&#x5173;&#x952E;&#x5B57; &#x5E94;&#x8BE5;&#x7B80;&#x5355;&#x6613;&#x61C2;&#x3002; &#x548C;&#x5DE5;&#x4F5C;&#x6D41;&#x6D4B;&#x8BD5;&#x4E00;&#x6837;&#x7684;&#x89C4;&#x5219;&#x3002; &#x4E0D;&#x540C;&#x7684;&#x62BD;&#x8C61;&#x7B49;&#x7EA7;&#x3002; &#x53EF;&#x4EE5;&#x5305;&#x542B;&#x4E00;&#x4E9B;&#x7A0B;&#x5E8F;&#x903B;&#x8F91;&#xFF08;&#x5FAA;&#x73AF;&#xFF0C;&#x5224;&#x65AD;&#xFF09;&#x3002; &#x5C24;&#x5176;&#x662F;&#x4E00;&#x4E9B;&#x4F4E;&#x9636;&#x5173;&#x952E;&#x5B57;&#x3002; &#x590D;&#x6742;&#x7684;&#x903B;&#x8F91;&#x5B81;&#x613F;&#x5728;&#x7528;&#x6237;&#x5173;&#x952E;&#x5B57;&#x91CC;&#x800C;&#x4E0D;&#x662F;&#x8F6F;&#x4EF6;&#x5E93;&#x3002; &#x53D8;&#x91CF; &#x5305;&#x542B;&#x957F;&#x800C;&#x590D;&#x6742;&#x7684;&#x503C;&#x3002; &#x53EF;&#x4EE5;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4F7F;&#x7528; --variable &#x9009;&#x9879;&#xFF0C;&#x6765;&#x4F20;&#x9012;&#x4FE1;&#x606F;&#x3002; &#x4F20;&#x9012;&#x4FE1;&#x606F;&#x548C;&#x5173;&#x952E;&#x5B57;&#x3002; &#x53D8;&#x91CF;&#x547D;&#x540D; &#x6E05;&#x6670;&#x7684;&#x5E76;&#x4E14;&#x4E0D;&#x957F;&#x7684;&#x540D;&#x5B57;&#x3002; &#x80FD;&#x591F;&#x5728;&#x53D8;&#x91CF;&#x8868;&#x4E2D;&#x4F7F;&#x7528;&#x6CE8;&#x91CA;&#x7ED9;&#x6587;&#x6863;&#x66F4;&#x591A;&#x8BE6;&#x60C5;&#x3002; &#x59CB;&#x7EC8;&#x7684;&#x4F7F;&#x7528;&#x6848;&#x4F8B;&#x3002; &#x5728;&#x4E00;&#x4E2A;&#x660E;&#x786E;&#x7684;&#x4F5C;&#x7528;&#x57DF;&#x91CC;&#x9762;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x4F7F;&#x7528;&#x5C0F;&#x5199;&#x3002; &#x5176;&#x4ED6;&#x7684;&#x90FD;&#x4F7F;&#x7528;&#x5927;&#x5199;&#x3002;&#xFF08;&#x5168;&#x5C40;&#x7684;&#xFF0C;&#x5957;&#x4EF6;&#xFF0C;&#x548C;&#x6D4B;&#x8BD5;&#x7EA7;&#x522B;&#xFF09; &#x7A7A;&#x683C;&#x548C;&#x4E0B;&#x5212;&#x7EBF;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5206;&#x5272;&#x4E00;&#x4E2A;&#x5355;&#x8BCD;&#x3002; &#x63A8;&#x8350;&#x4F7F;&#x7528;&#x6E05;&#x5355;&#x53D8;&#x91CF;&#xFF0C;&#x52A8;&#x6001;&#x7684;&#x8BBE;&#x7F6E;&#x5728;&#x53D8;&#x91CF;&#x8868;&#x4E2D;&#x3002; &#x8BBE;&#x7F6E;&#x5178;&#x578B;&#x7684;&#x4F7F;&#x7528;&#x5185;&#x5D4C;&#x7684;&#x5173;&#x952E;&#x5B57; &#x8BBE;&#x7F6E;&#x5957;&#x4EF6;&#x53D8;&#x91CF; &#x8FD9;&#x4E2A;&#x521D;&#x59CB;&#x5316;&#x503C;&#x5E94;&#x5F53;&#x89E3;&#x91CA;&#xFF0C;&#x5728;&#x4F55;&#x65F6;&#x54EA;&#x91CC;&#x8FD9;&#x4E2A;&#x771F;&#x5B9E;&#x7684;&#x503C;&#x88AB;&#x8BBE;&#x7F6E;&#x3002; &#x4F8B;&#x5B50;&#xFF1A; 123456789101112*** Settings ***Suite Setup Set Active User*** Variables ***# Default sytem address. Override when tested agains other instances.${SERVER URL} http://www.baidu.com${USER} Actual value set dynamically at suite setup*** Keywords ***Set Active User ${USER} = Get Current User ${SERVER URL} set Suite Variable ${USER} &#x4F20;&#x9012;&#x548C;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C; &#x4ECE;&#x5173;&#x952E;&#x5B57;&#x4E2D;&#x5E38;&#x89C1;&#x7684;&#x5904;&#x7406;&#x662F;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x5206;&#x914D;&#x5B83;&#x4EEC;&#x7ED9;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x5E76;&#x4E14;&#x5C06;&#x5B83;&#x4EEC;&#x4F5C;&#x4E3A;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x4F20;&#x9012;&#x7ED9;&#x5176;&#x4ED6;&#x5173;&#x952E;&#x5B57;&#x3002; &#x6E05;&#x6670;&#x548C;&#x6613;&#x4E8E;&#x7406;&#x89E3;&#x7684;&#x65B9;&#x6CD5;&#x3002; &#x5141;&#x8BB8;&#x521B;&#x5EFA;&#x72EC;&#x7ACB;&#x7684;&#x5173;&#x952E;&#x5B57;&#x5E76;&#x4E14;&#x65B9;&#x4FBF;&#x91CD;&#x65B0;&#x4F7F;&#x7528;&#x3002; &#x770B;&#x8D77;&#x6765;&#x50CF;&#x7F16;&#x7A0B;&#xFF0C;&#x56E0;&#x4E3A;&#x5728;&#x6D4B;&#x8BD5;&#x6848;&#x4F8B;&#x7EA7;&#x522B;&#x4E0D;&#x662F;&#x5F88;&#x597D;&#x3002; &#x53EF;&#x4F9B;&#x9009;&#x62E9;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x4ECE;&#x5B58;&#x50A8;&#x4FE1;&#x606F;&#x7684;&#x8F6F;&#x4EF6;&#x5E93;&#x4E2D;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x5185;&#x7F6E;&#x7684;&#x8BBE;&#x7F6E;&#x6D4B;&#x8BD5;&#x53D8;&#x91CF;&#x5173;&#x952E;&#x5B57;&#x3002; &#x907F;&#x514D;&#x7F16;&#x7A0B;&#x5F0F;&#x5728;&#x6D4B;&#x8BD5;&#x7B49;&#x7EA7;&#x3002; &#x53EF;&#x4EE5;&#x66F4;&#x590D;&#x6742;&#x7684;&#x7406;&#x89E3;&#x548C;&#x5236;&#x9020;&#x56F0;&#x96BE;&#x7684;&#x80FD;&#x91CD;&#x590D;&#x4F7F;&#x7528;&#x7684;&#x5173;&#x952E;&#x5B57;&#x3002; &#x597D;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;12345678910111213*** Test Cases ***Withdraw From Account Withdraw From Account $50 Withdraw SHould Have Succeeded*** Keywords ***Withdraw From Account [Arguments] ${amount} ${STATUS} = Withdraw From User Account ${USER} ${amount} Set Test Variable ${STATUS}Withdraw Should Have Succeeded Should Be Equal ${STATUS} SUCCESS &#x4E0D;&#x662F;&#x5F88;&#x68D2;&#x7684;&#x4F8B;&#x5B50;&#xFF1A;1234567891011121314*** Test Cases ***Withdraw From Account ${status} = Withdraw From Account $50 Withdraw Should Have Succeeded ${status}*** Keywords ***Withdraw From Account [Arguments] ${amount} ${status} = Withdraw From User Account ${USER} ${amount} [Return] ${status}Withdraw Should Have Succeeded [Arguments] ${status} Should Be Equal ${stauts} SUCCESS &#x907F;&#x514D;&#x4F7F;&#x7528;&#x4F11;&#x7720; &#x4F11;&#x7720;&#x65F6;&#x975E;&#x5E38;&#x8106;&#x7684;&#x65B9;&#x5F0F;&#x9488;&#x5BF9;&#x540C;&#x6B65;&#x6D4B;&#x8BD5;&#x3002; &#x5E73;&#x5747;&#x7684;&#x5B89;&#x5168;&#x8FB9;&#x754C;&#x4F1A;&#x9020;&#x6210;&#x5F88;&#x957F;&#x7684;&#x4F11;&#x7720;&#x3002; &#x5F53;&#x4E00;&#x4E2A;&#x786E;&#x5207;&#x7684;&#x884C;&#x4E3A;&#x53D1;&#x751F;&#x65F6;&#xFF0C;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x5B57;&#x66FF;&#x4EE3;&#x4F11;&#x7720;&#x3002; &#x5173;&#x952E;&#x5B57;&#x540D;&#x79F0;&#x901A;&#x5E38;&#x662F;&#x4EE5; Wait ... &#x5F00;&#x59CB;&#x3002; &#x5E94;&#x8BE5;&#x6709;&#x4E00;&#x4E2A;&#x6700;&#x5927;&#x7684;&#x7B49;&#x5F85;&#x65F6;&#x95F4;&#x3002; &#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5185;&#x7F6E;&#x7684;&#x5173;&#x952E;&#x5B57;Wait Until Keyword Succeeds&#x6765;&#x5305;&#x88F9;&#x5728;&#x5176;&#x4ED6;&#x5173;&#x952E;&#x5B57;&#x3002; &#x6709;&#x65F6;&#x5019;&#x4F11;&#x7720;&#x4E5F;&#x53EF;&#x4EE5;&#x7B80;&#x5355;&#x7684;&#x89E3;&#x51B3;&#x65B9;&#x6848;&#x3002; &#x8BF7;&#x5C0F;&#x5FC3;&#x7684;&#x4F7F;&#x7528;&#x3002; &#x4E0D;&#x8981;&#x5728;&#x7528;&#x6237;&#x5173;&#x952E;&#x5B57;&#x4E2D;&#x4F7F;&#x7528;&#xFF0C;&#x53EF;&#x4EE5;&#x5728;&#x6D4B;&#x8BD5;&#x6216;&#x8005;&#x5176;&#x4ED6;&#x5173;&#x952E;&#x5B57;&#x4F7F;&#x7528;&#x3002; &#x5728;&#x8C03;&#x8BD5;&#x4E2D;&#x505C;&#x6B62;&#x6267;&#x884C;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x3002; Dialogs library&#x662F;&#x4E00;&#x4E2A;&#x975E;&#x5E38;&#x597D;&#x7684;&#x5E93;&#x3002;","tags":[{"name":"test","slug":"test","permalink":"http://www.lagel.me/tags/test/"},{"name":"robotframework","slug":"robotframework","permalink":"http://www.lagel.me/tags/robotframework/"}]},{"title":"Swift 第三课时","date":"2016-03-23T05:11:39.000Z","path":"swift/03.thml","text":"Swift Lession 03 &#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26; &#x9010;&#x5B57;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A;&#x4E32; &#x5B57;&#x7B26;&#x4E32;&#x7684;&#x53EF;&#x53D8;&#x6027; String &#x662F;&#x6570;&#x636E;&#x7C7B;&#x578B; &#x5B57;&#x7B26;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F; &#x4E32;&#x8054;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26; &#x5B57;&#x7B26;&#x4E32;&#x63D2;&#x5165; Unicode &#x7EAF;&#x7CB9;&#x7684; Unicode(Unicode Scalars) &#x7279;&#x6B8A;&#x7684;&#x5B57;&#x7B26;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D; &#x6269;&#x5C55;&#x7684;&#x5B57;&#x5F62;&#x4E32; &#x7EDF;&#x8BA1;&#x5B57;&#x7B26;&#x4E32; &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x5B57;&#x7B26;&#x4E32; &#x5B57;&#x7B26;&#x7D22;&#x5F15; &#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x5B57; &#x6BD4;&#x8F83;&#x5B57;&#x7B26;&#x4E32; &#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26;&#x76F8;&#x7B49; &#x524D;&#x7F00;&#x548C;&#x540E;&#x7F00;&#x76F8;&#x7B49; &#x5B57;&#x7B26;&#x4E32;&#x7684;Unicode&#x8868;&#x73B0;&#x5F62;&#x5F0F; &#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26; &#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x4E00;&#x8FDE;&#x4E32;&#x7684;&#x5B57;&#x7B26;&#x79DF;&#x8F66;&#xFF0C;&#x4F8B;&#x5982;&#xFF1A;&#x201D;hello, world&#x201D; Swift&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x76F8;&#x5F53;&#x4E8E; String &#x7C7B;&#x578B;&#x3002; &#x5C0F;&#x63D0;&#x793A; Swift &#x7684; String &#x7C7B;&#x578B;&#x662F; Foundation&#x7684; NSString &#x7C7B;&#x7684;&#x6865;&#x6881; &#x4EFB;&#x610F;&#x7684; String &#x7C7B;&#x578B;&#x8FD0;&#x884C;&#x5728; Foundation &#x4E0A;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x8C03;&#x7528; NSString &#x7684;&#x53EF;&#x4F7F;&#x7528;&#x7684;API&#x3002; &#x9010;&#x5B57;&#x7684;&#x5B57;&#x7B26;&#x4E32; &#x5B57;&#x7B26;&#x4E32;&#x662F;&#x4E00;&#x8FDE;&#x4E32;&#x56FA;&#x5B9A;&#x7684;&#x5B57;&#x7B26;&#x7EC4;&#x6210;&#x88AB;&#x4E00;&#x5BF9;&#x53CC;&#x5F15;&#x53F7; &quot;&quot;&#x5305;&#x56F4;&#x3002; 1let someString = &quot;Some string literal value&quot; &#x521D;&#x59CB;&#x5316;&#x4E00;&#x4E2A;&#x7A7A;&#x4E32;123456var emptyString = &quot;&quot; // empty string literalvar anotherEmptyString = String() // initializer syntax// &#x5224;&#x65AD;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x662F;&#x5426;&#x4E3A;&#x7A7A;if emptyString.isEmpty { print(&quot;Nothing to see here&quot;)} &#x5B57;&#x7B26;&#x4E32;&#x7684;&#x53EF;&#x53D8;&#x6027;1234567var variableString = &quot;Horse&quot;variableString += &quot; and carriage&quot;// variableString &#x73B0;&#x5728;&#x7684;&#x5185;&#x5BB9;&#x662F; &quot;Horse and carriage&quot;let constantString = &quot;Highlander&quot;constantString += &quot; and another Highlander&quot;// &#x7F16;&#x8BD1;&#x51FA;&#x9519;&#xFF0C;let &#x7533;&#x660E;&#x7684;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x5BF9;&#x8C61; String &#x662F;&#x6570;&#x636E;&#x7C7B;&#x578B; &#x5728; swift &#x4E2D; String &#x662F;&#x4E00;&#x79CD;&#x6570;&#x636E;&#x7C7B;&#x578B;&#xFF0C;&#x5982;&#x679C;&#x4F60;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;String&#x503C;&#xFF0C;&#x8FD9;&#x4E2A;&#x503C;&#x88AB;&#x62F7;&#x8D1D;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6216;&#x65B9;&#x6CD5;&#xFF0C;&#x6216;&#x5F53;&#x5B83;&#x88AB;&#x5206;&#x914D;&#x7ED9;&#x4E00;&#x4E2A;&#x5E38;&#x91CF;&#x6216;&#x8005;&#x53D8;&#x91CF;&#xFF0C;&#x4E00;&#x4E2A;&#x65B0;&#x7684;String&#x503C;&#x5C06;&#x4F1A;&#x88AB;&#x521B;&#x5EFA;&#xFF0C;&#x5B83;&#x4E0D;&#x5728;&#x662F;&#x539F;&#x5148;&#x7684;String&#x7248;&#x672C;&#x4E86;&#x3002; &#x5B57;&#x7B26;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F; &#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x8F6C;&#x6362;&#x6210;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x3002; 12345for character in &quot;Dog!&#x1F436;&quot;.characters { print(character)}// &#x5206;&#x522B;&#x6253;&#x5370;// D o g ! &#x1F436; &#x5982;&#x679C;&#x4F60;&#x60F3;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x53EF;&#x4EE5;&#x663E;&#x793A;&#x7684;&#x58F0;&#x660E;&#x3002; 1let exclamationMark: Character = &quot;!&quot; &#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x521D;&#x59CB;&#x5316;&#x4F20;&#x9012;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x6570;&#x7EC4;&#x6765;&#x521B;&#x5EFA;&#x3002; 1234let catCharacters: [Character] = [&quot;C&quot;, &quot;a&quot;, &quot;t&quot;, &quot;!&quot;, &quot;&#x1F431;&quot;]let catString = String(catCharacters)print(catString)// Cat!&#x1F431; &#x4E32;&#x8054;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26; &#x5B57;&#x7B26;&#x4E32;&#x53EF;&#x4EE5;&#x88AB;&#x76F8;&#x52A0;&#x4F7F;&#x7528;&#x64CD;&#x4F5C;&#x7B26;+&#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; 1234567891011121314let string1 = &quot;Hello&quot;let string2 = &quot; there&quot;var welcome = string1 + string2// welcome &#x73B0;&#x5728;&#x662F; &quot;Hello there&quot;// &#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; `+=`var instruction = &quot;look over&quot;instruction += string2// instruction &#x73B0;&#x5728;&#x662F; &quot;look over there&quot;// &#x53EF;&#x4EE5;&#x901A;&#x8FC7; `String` &#x7684; `append()` &#x65B9;&#x6CD5;&#x6765;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A; `Character`let exclamationMark: Character = &quot;!&quot;welcome.append(exclamationMark)// welocme &#x73B0;&#x5728;&#x662F; &quot;Hello there!&quot; &#x5B57;&#x7B26;&#x4E32;&#x63D2;&#x5165; &#x5B57;&#x7B26;&#x4E32;&#x63D2;&#x5165;&#x662F;&#x4E00;&#x79CD;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x7531;&#x5E38;&#x91CF;&#xFF0C;&#x53D8;&#x91CF;&#xFF0C;&#x5B57;&#x7B26;&#x6216;&#x8005;&#x8868;&#x8FBE;&#x5F0F;&#x7EC4;&#x5408;&#x7684;&#x5B57;&#x7B26;&#x4E32;&#x3002; 123let multiplier = 3let message = &quot;\\(multiplier) times 2.5 is \\(Double(multiplier) * 2.5)&quot;// message &#x662F; &quot;3 times 2.5 is 7.5&quot; &#x8FD9;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x5199;&#x5728;&#x5706;&#x62EC;&#x53F7;&#x5185;&#x90E8;&#xFF0C;&#x4F46;&#x662F;&#x8FD9;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x4E0D;&#x80FD;&#x5305;&#x542B;&#x4FDD;&#x7559;&#x7684;&#x53CD;&#x659C;&#x6760;(\\) Unicode Unicode &#x662F;&#x4E00;&#x4E2A;&#x56FD;&#x9645;&#x5316;&#x7684;&#x6807;&#x51C6;&#x7F16;&#x7801; &#x7EAF;&#x7CB9;&#x7684; Unicode(Unicode Scalars) Swift &#x672C;&#x5730;String&#x7C7B;&#x578B;&#x662F;&#x57FA;&#x4E8E;&#x7EAF;&#x7CB9;&#x7684;Unicode&#x503C;&#x3002; &#x7279;&#x6B8A;&#x7684;&#x5B57;&#x7B26;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x5B57;&#x7B26;&#x4E32;&#x80FD;&#x591F;&#x5305;&#x542B;&#x4EE5;&#x4E0B;&#x7684;&#x7279;&#x6B8A;&#x5B57;&#x7B26;&#xFF1A; \\0(&#x7A7A;&#x5B57;&#x7B26;&#x4E32;)&#xFF0C; \\\\(&#x53CD;&#x659C;&#x6760;), \\t(&#x6A2A;&#x5411;&#x5236;&#x8868;&#x7B26;), \\n(&#x6362;&#x884C;&#x7B26;), \\r(&#x56DE;&#x8F66;&#x7B26;), \\&quot;(&#x53CC;&#x5F15;&#x53F7;), \\&apos;(&#x5355;&#x5F15;&#x53F7;) &#x4E00;&#x4E2A;&#x7EAF;&#x7CB9;&#x7684; Unicode&#x503C;&#xFF0C;&#x5199;&#x4F5C; \\u{n}&#xFF0C;&#x5728;&#x8FD9;&#x91CC;n&#x662F;&#x4E00;&#x4E2A;1&#x5230;8&#x4F4D;&#x7684;16&#x8FDB;&#x5236;&#x6570;&#x5B57;&#x3002; 12345let wiseWords = &quot;\\&quot;Imagination is more important than knowledge\\&quot; - Einstein&quot;let dollarSign = &quot;\\u{24}&quot; // $let blackHeart = &quot;\\u{2665}&quot; // &#x2665;let sparklingHeart = &quot;\\u{1F496}&quot; // &#x1F496; &#x6269;&#x5C55;&#x7684;&#x5B57;&#x5F62;&#x4E32;1let eAcute: Character = &quot;\\u{E9}&quot; // &#xE9; &#x7EDF;&#x8BA1;&#x5B57;&#x7B26;&#x4E32; &#x4ECE;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x53D6;&#x5F97;&#x5B57;&#x7B26;&#x7684;&#x603B;&#x6570;&#xFF0C;&#x4F7F;&#x7528;String&#x7684;character&#x5C5E;&#x6027;&#x91CC;&#x7684;count&#x5C5E;&#x6027;&#x3002; 123let unusnalMenagerie = &quot;Koala &#x1F428;, Snail &#x1F40C;, Penguin &#x1F427;, Dromedary &#x1F42A;&quot;print(&quot;unusnalMenagerie has \\(unusnalMenagerie.character.count) characters&quot;)// unusnalMenagerie has 40 characters &#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x5B57;&#x7B26;&#x4E32; &#x4F60;&#x8BBF;&#x95EE;&#x548C;&#x4FEE;&#x6539;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x901A;&#x8FC7;&#x5B83;&#x4EEC;&#x81EA;&#x7531;&#x7684;&#x65B9;&#x6CD5;&#x548C;&#x5C5E;&#x6027;&#xFF0C;&#x6216;&#x8005;&#x4F7F;&#x7528;&#x4E0B;&#x6807;&#x8BED;&#x6CD5;&#x3002; &#x5B57;&#x7B26;&#x7D22;&#x5F15; &#x6BCF;&#x4E2A;String&#x503C;&#x90FD;&#x548C;index&#x7C7B;&#x578B;&#x6709;&#x8054;&#x7CFB;&#x3002;String.Index, &#x76F8;&#x5F53;&#x4E8E;&#x6BCF;&#x4E2A;&#x5B57;&#x7B26;&#x5728;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x4F4D;&#x7F6E;&#x3002; &#x4F7F;&#x7528;startIndex&#x5C5E;&#x6027;&#x53BB;&#x8BBF;&#x95EE;&#x5B57;&#x7B26;&#x4E32;&#x4E2D;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x7B26;&#x3002; &#x4F7F;&#x7528;endIndex&#x5C5E;&#x6027;&#x53BB;&#x8BBF;&#x95EE;&#x5B57;&#x7B26;&#x4E2D;&#x7684;&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x3002; &#x8FD9;&#x4E2A;endIndex&#x5C5E;&#x6027;&#x4E0D;&#x662F;&#x4E00;&#x4E2A;&#x6709;&#x6548;&#x53C2;&#x6570;&#x5BF9;&#x4E8E;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5C0F;&#x6807;&#x3002; &#x5982;&#x679C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x4E3A;&#x7A7A; startIndex&#x548C;endIndex&#x662F;&#x76F8;&#x540C;&#x7684;&#x3002; 12345678910111213141516let greeting = &quot;guten Tag!&quot;greeting[greeting.startIndex]// Ggreeting[greeting.endIndex.predecessor()]// !greeting[greeting.startIndex.successor()]// ulet index = greeting.startIndex.advancedBy(7)greeting[index]// a// &#x4F7F;&#x7528;`characters`&#x5C5E;&#x6027;&#x7684;`indices`&#x5C5E;&#x6027;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;`Range`for index in greeting.characters.indices { print(&quot;\\(greeting[index])&quot;, terminator:&quot;&quot;)}// prints &quot;G u t e n T a g ! &quot; &#x63D2;&#x5165;&#x548C;&#x5220;&#x9664;&#x5B57; &#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F7F;&#x7528;insert(_:atIndex:)&#x65B9;&#x6CD5;&#x3002; &#x63D2;&#x5165;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x5728;&#x6307;&#x5B9A;&#x7684;&#x4F4D;&#x7F6E;&#xFF0C;&#x4F7F;&#x7528;insertContentsOf(_:at:)&#x65B9;&#x6CD5;&#x3002; 12345var welcome = &quot;hello&quot;welcome.insert(&quot;!&quot;, atIndex: welcome.endIndex)// welcome &#x73B0;&#x5728;&#x662F; hello!welcome.insertContentsOf(&quot; there&quot;.characters, at: welcome.endIndex.predecessor())// welcome &#x73B0;&#x5728;&#x662F; hello there! &#x5220;&#x9664;&#x4E00;&#x4E2A;&#x6307;&#x5B9A;&#x4F4D;&#x7F6E;&#x7684;&#x5B57;&#x7B26;&#xFF0C;&#x4F7F;&#x7528;removeAtIndex(_:)&#x65B9;&#x6CD5;&#x3002; &#x5220;&#x9664;&#x4E00;&#x4E2A;&#x5B50;&#x4E32;&#xFF0C;&#x4F7F;&#x7528;RemoveRange(_:)&#x65B9;&#x6CD5;&#x3002; 12345welcome.removeAtIndex(welcome.endIndex.predecessor())// welcome &#x73B0;&#x5728;&#x662F; hello therelet range = welcome.endIndex.advancedBy(-6) ..&lt; welcome.endIndexwelcome.removeRange(range)// welcome &#x73B0;&#x5728;&#x662F; hello &#x6BD4;&#x8F83;&#x5B57;&#x7B26;&#x4E32; Swift &#x63D0;&#x4F9B;&#x4E86;&#x4E09;&#x79CD;&#x65B9;&#x5F0F;&#x6765;&#x6BD4;&#x8F83;&#x5B57;&#x7B26;&#x4E32; &#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26;&#x76F8;&#x7B49; &#x524D;&#x7F00;&#x76F8;&#x7B49; &#x540E;&#x7F00;&#x76F8;&#x7B49; &#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26;&#x76F8;&#x7B49; &#x5224;&#x65AD;&#x5B57;&#x7B26;&#x4E32;&#x548C;&#x5B57;&#x7B26;&#x76F8;&#x7B49;&#x4F7F;&#x7528;&#x7B49;&#x4E8E;&#x64CD;&#x4F5C;&#x7B26; == &#x548C;&#x4E0D;&#x7B49;&#x64CD;&#x4F5C;&#x7B26; != 123456let quotation = &quot;we&apos;re a lot alike, you and I.&quot;let sameQuotation = &quot;we&apos;re a lot alike, you and I.&quot;if quotation == sameQuotation { print(&quot;equal&quot;)}// equal &#x524D;&#x7F00;&#x548C;&#x540E;&#x7F00;&#x76F8;&#x7B49; &#x68C0;&#x9A8C;&#x4E00;&#x4E2A;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x524D;&#x7F00;&#x548C;&#x540E;&#x7F00;&#xFF0C;&#x4F7F;&#x7528; hasPrefix(_:) &#x548C; hasSuffix(_:)&#x65B9;&#x6CD5;&#xFF0C;&#x5B83;&#x4EEC;&#x90FD;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A; Boolean &#x503C;&#x3002; 1234567891011121314151617181920212223242526272829303132let remeoAndJulet = [ &quot;Act 1 Scene 1: Verona, A public place&quot;, &quot;Act 1 Scene 2: Capulet&apos;s mansion&quot;, &quot;Act 1 Scene 3: A rrom in Capulet&apos;s mansion&quot;, &quot;Act 1 Scene 4: A street outside Capulets mansion&quot;, &quot;Act 1 Scene 5: The Great Hall in Capulet&apos;s mansion&quot;, &quot;Act 2 Scene 1: Outside Capulet&apos;s mansion&quot;, &quot;Act 2 Scene 2: Capulet&apos;s orchard&quot;, &quot;Act 2 Scene 3: Outside Friar Lawrence&apos;s cell&quot;, &quot;Act 2 Scene 4: A street in Verona&quot;, &quot;Act 2 Scene 5: Capulet&apos;s mansion&quot;, &quot;Act 2 Scene 6: Friar Lawrence&apos;s cell&quot;]var act1SceneCount = 0var mansionCount = 0var cellCount = 0for scene in remeoAndJuliet { if scene.hasPrefix(&quot;Act 1&quot;) { act1SceneCount += 1 } if scene.hasSuffix(&quot;Capulet&apos;s mansion&quot;) { mansionCount += 1 } if scene.hasSuffix(&quot;Friar Lawrence&apos;s cell&quot;) { cellCount += 1 }}print(&quot;There are \\(act1SceneCount) scenes in Act 1&quot;)// print &quot;There are 5 scenes in Act 1&quot;print(&quot;\\(mansionCount) mansion scenes; \\(cellCount) cell scenes&quot;)// print &quot;6 mansion scenes; 2 cell scenes&quot; &#x5B57;&#x7B26;&#x4E32;&#x7684;Unicode&#x8868;&#x73B0;&#x5F62;&#x5F0F; &#x4E00;&#x822C;&#x6709;&#x4E09;&#x79CD;Unicode&#x8868;&#x73B0;&#x5F62;&#x5F0F;&#x3002; &#x4E00;&#x6279;UTF-8&#x5B57;&#x7B26;&#x96C6;&#x3002; &#x4E00;&#x6279;UTF-16&#x5B57;&#x7B26;&#x96C6;&#x3002; &#x4E00;&#x6279;UTF-32&#x5B57;&#x7B26;&#x96C6;&#x3002; 1234567891011121314151617181920212223let dogString = &quot;Dog!!&#x1F436;&quot;// utf8for codeUnit in dogString.utf8 { print(&quot;\\(codeUnit) &quot;, terminator: &quot;&quot;)}// 68 111 103 33 33 240 159 144 182 // utf16for codeUnit in dogString.utf16 { print(&quot;\\(codeUnit) &quot;, terminator: &quot;&quot;)}// 68 111 103 8252 55357 56374 // utf32 &#x53C8;&#x79F0; unicodeScalarsfor scalar in dogString.unicodeScalars { print(&quot;\\(scalar.value) &quot;, terminator: &quot;&quot;)}// 68 111 103 8252 128054 // utf32 &#x53C8;&#x79F0; unicodeScalarsfor scalar in dogString.unicodeScalars { print(&quot;\\(scalar) &quot;, terminator: &quot;&quot;)}// D o g !! &#x1F436;","tags":[{"name":"swift","slug":"swift","permalink":"http://www.lagel.me/tags/swift/"}]},{"title":"Swift 第二课时","date":"2016-03-22T09:39:59.000Z","path":"swift/02.html","text":"Swift Lession 02 &#x672F;&#x8BED; &#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26; &#x7B97;&#x6570;&#x64CD;&#x4F5C;&#x7B26; &#x53D6;&#x4F59;&#x64CD;&#x4F5C;&#x7B26; &#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x7B26; &#x590D;&#x5408;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26; &#x6BD4;&#x8F83;&#x64CD;&#x4F5C;&#x7B26; &#x4E09;&#x5143;&#x6761;&#x4EF6;&#x64CD;&#x4F5C;&#x7B26; nil &#x5408;&#x5E76;&#x8FD0;&#x7B97;&#x7B26; Range &#x64CD;&#x4F5C;&#x7B26; &#x95ED;&#x5408;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26; &#x534A;&#x5F00;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26; &#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26; &#x903B;&#x8F91;&#x975E; &#x903B;&#x8F91;&#x548C; &#x903B;&#x8F91;&#x6216; &#x7EC4;&#x5408;&#x903B;&#x8F91; &#x57FA;&#x672C;&#x64CD;&#x4F5C; Swift &#x50CF;c&#x8BED;&#x8A00;&#x4E00;&#x6837;&#xFF0C;&#x63D0;&#x4F9B;&#x4E86;&#x5927;&#x591A;&#x6570;&#x6807;&#x51C6;&#x7684;&#x8FD0;&#x7B97;&#x7B26;&#x548C;&#x6539;&#x8FDB;&#x4E86;&#x4E00;&#x4E9B;&#x5E38;&#x53D1;&#x751F;&#x9519;&#x8BEF;&#x7684;&#x7F16;&#x7801;&#x3002; &#x672F;&#x8BED; &#x8FD0;&#x7B97;&#x7B26;&#x5206;&#x4E3A;&#x4E09;&#x79CD;&#xFF0C;&#x4E00;&#x5143;&#xFF0C;&#x4E8C;&#x5143;&#xFF0C;&#x4E09;&#x5143;&#x64CD;&#x4F5C;&#x3002; &#x4E00;&#x5143;&#x8FD0;&#x7B97;&#x7B26;&#x64CD;&#x4F5C;&#x4E00;&#x4E2A;&#x5355;&#x72EC;&#x7684;&#x76EE;&#x6807;&#xFF08;&#x4F8B;&#x5982;: -a&#xFF09;&#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x7B26;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x524D;&#x7F00;&#xFF08;&#x4F8B;&#x5982;: !a&#xFF09;&#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x7B26;&#x53EF;&#x4EE5;&#x6DFB;&#x52A0;&#x540E;&#x7F00;&#xFF08;&#x4F8B;&#x5982;&#xFF1A;a!&#xFF09; &#x4E8C;&#x5143;&#x64CD;&#x4F5C;&#x7B26;&#x53EF;&#x4EE5;&#x64CD;&#x4F5C;&#x4E24;&#x4E2A;&#x76EE;&#x6807;&#xFF08;&#x4F8B;&#x5982;&#xFF1A; 2 + 3&#xFF09; &#x4E09;&#x5143;&#x64CD;&#x4F5C;&#x7B26;&#x53EF;&#x4EE5;&#x64CD;&#x4F5C;&#x4E09;&#x4E2A;&#x76EE;&#x6807;&#xFF0C;&#x548C;c&#x8BED;&#x8A00;&#x4E00;&#x6837;&#xFF0C;swift &#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x4E09;&#x5143;&#x64CD;&#x4F5C;&#x7B26;&#x4F8B;&#x5982;&#xFF1A;(a &gt; b? a: b) &#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26; &#x5728;&#x7A0B;&#x5E8F;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x90FD;&#x901A;&#x8FC7; = &#x6765;&#x8FDB;&#x884C;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#xFF0C;&#x533A;&#x522B;&#x4E8E;&#x6570;&#x5B66;&#x4E0A;&#x7684; = 123456let b = 10var a = 5a = b// &#x73B0;&#x5728;&#xFF0C;a&#x7684;&#x503C;&#x5DF2;&#x7ECF;&#x662F;10&#x4E86;&#xFF0C;&#x56E0;&#x4E3A;&#x6211;&#x4EEC;&#x8FDB;&#x884C;&#x4E86;&#x8D4B;&#x503C;&#x8FD0;&#x7B97;// &#x591A;&#x4E2A;&#x8D4B;&#x503C;let (x, y) = (1, 2xw) &#x7B97;&#x6570;&#x64CD;&#x4F5C;&#x7B26; Swift &#x652F;&#x6301;4&#x79CD;&#x64CD;&#x4F5C;&#x8FD0;&#x7B97;&#x7B26;&#x9488;&#x5BF9;&#x6240;&#x6709;&#x7684;&#x6570;&#x5B57;&#x7C7B;&#x578B;&#x3002; &#x52A0;&#x6CD5;&#xFF1A; + &#x51CF;&#x6CD5;&#xFF1A; - &#x4E58;&#x6CD5;&#xFF1A; * &#x9664;&#x6CD5;&#xFF1A; / 12341 + 2 // equal 35 - 3 // equal 22 * 3 //equal 610.0 / 2.5 //equal 4.0 &#x5C0F;&#x63D0;&#x793A; &#x52A0;&#x6CD5;&#x64CD;&#x4F5C;&#x4E5F;&#x652F;&#x6301;&#x5BF9;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#x64CD;&#x4F5C;&#x54E6;&#x3002;1&quot;hello &quot; + &quot;world&quot; //equal hello world &#x53D6;&#x4F59;&#x64CD;&#x4F5C;&#x7B26; &#x6C42;&#x4F59;&#x6570;&#x7684;&#x64CD;&#x4F5C;&#x7B26;&#x3002; %127 % 3 // equal 13 % 1 // equal 0 &#x6D6E;&#x70B9;&#x6570;&#x4E5F;&#x53EF;&#x4EE5;&#x8FDB;&#x884C;&#x53D6;&#x4F59;&#x8FD0;&#x7B97;18 % 2.5 // equals 0.5 &#x4E00;&#x5143;&#x64CD;&#x4F5C;&#x7B26; &#x4E00;&#x5143;&#x6709;&#x8D1F;&#x53F7;&#x548C;&#x6B63;&#x53F7;&#x64CD;&#x4F5C;&#x3002;1234567// &#x8D1F;&#x53F7;&#x64CD;&#x4F5C;let three = 3let minusThree = -three // equals -3let plusThree = -minusThree // equals 3// &#x6B63;&#x53F7;&#x64CD;&#x4F5C;let minusSix = 6let alsoMinusSix = +minusSix // equals -6 &#x590D;&#x5408;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26; &#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26;&#x662F; = &#x590D;&#x5408;&#x64CD;&#x4F5C;&#x7B26;&#x5982;&#x4E0B;&#x6240;&#x793A; &#x52A0;&#x6CD5;&#xFF1A;+= &#x51CF;&#x6CD5;&#xFF1A;-= &#x4E58;&#x6CD5;&#xFF1A;*= &#x9664;&#x6CD5;&#xFF1A;/= &#x53D6;&#x4F59;&#xFF1A;%= &#x5C0F;&#x63D0;&#x793A; &#x8FD9;&#x4E2A;&#x590D;&#x5408;&#x8D4B;&#x503C;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x662F;&#x4E0D;&#x4F1A;&#x6709;&#x4E00;&#x4E2A;&#x8FD4;&#x56DE;&#x503C;&#x7684;.12let b = a += 2// &#x8FD9;&#x79CD;&#x7528;&#x6CD5;&#x662F;&#x4E0D;&#x88AB;&#x5141;&#x8BB8;&#x7684; &#x6BD4;&#x8F83;&#x64CD;&#x4F5C;&#x7B26; Swift &#x652F;&#x6301;&#x6240;&#x6709;&#x7684; c &#x7684;&#x6807;&#x51C6;&#x6BD4;&#x8F83;&#x7B26;&#x3002; &#x7B49;&#x4E8E;&#xFF1A;== &#x4E0D;&#x7B49;&#x4E8E;&#xFF1A;!= &#x5927;&#x4E8E;&#xFF1A;&gt; &#x5C0F;&#x4E8E;&#xFF1A;&lt; &#x5927;&#x4E8E;&#x7B49;&#x4E8E;: &gt;= &#x5C0F;&#x4E8E;&#x7B49;&#x4E8E;: &lt;= &#x5C0F;&#x63D0;&#x793A; Swift &#x4E5F;&#x63D0;&#x4F9B;&#x4E24;&#x79CD;&#x989D;&#x5916;&#x7684;&#x64CD;&#x4F5C;&#x7B26;&#xFF0C;&#x9488;&#x5BF9;&#x4E8E;&#x5BF9;&#x8C61;&#x7684;&#x5F15;&#x7528;&#x5224;&#x65AD;&#x3002; === &#x5224;&#x65AD;&#x5BF9;&#x8C61;&#x662F;&#x5F15;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; !== &#x5224;&#x65AD;&#x5BF9;&#x8C61;&#x4E0D;&#x662F;&#x5F15;&#x7528;&#x540C;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61; 1234561 == 1 // true2 != 1 // tre2 &gt; 1 // true2 &lt; 1 // false1 &gt;= 1 // ture1 &lt;= 1 // true Swift &#x53EF;&#x4EE5;&#x5BF9; &#x5143;&#x7EC4;&#x8FDB;&#x884C;&#x6BD4;&#x8F83;123(1, &quot;zebra&quot;) &lt; (2, &quot;apple&quot;) // true &#x56E0;&#x4E3A; 1 &lt; 2(3, &quot;apple&quot;) &lt; (3, &quot;bird&quot;) // true &#x56E0;&#x4E3A; apple &lt; bird(4, &quot;dog&quot;) &lt; (4, &quot;dog&quot;) // true &#x56E0;&#x4E3A; 4 == 4 &#x548C; dog == dog &#x4E09;&#x5143;&#x6761;&#x4EF6;&#x64CD;&#x4F5C;&#x7B26; &#x4E09;&#x5143;&#x6761;&#x4EF6;&#x64CD;&#x4F5C;&#x7B26; ? : &#x662F;&#x5BF9;&#x7B80;&#x5355; if else &#x7684;&#x7B80;&#x4FBF;&#x8BED;&#x53E5;&#x3002;123456789let a = 3, b = 2var max = 0if a &gt; b { max = a} else { max = b}// &#x4F7F;&#x7528;&#x4E09;&#x5143;&#x6761;&#x4EF6;&#x64CD;&#x4F5C;&#x7B26;max = (a &gt; b? a: b) // max &#x7684;&#x503C;&#x662F; 3 nil &#x5408;&#x5E76;&#x8FD0;&#x7B97;&#x7B26; nil &#x5408;&#x5E76;&#x8FD0;&#x7B97;&#x7B26; ?? 1234567let defaultColorName = &quot;red&quot;let userDefinedColorName: String?var colorNameToUse = userDefinedColorName ?? defaultColorName// &#x6700;&#x540E; colorNameToUse &#x7B49;&#x4E8E; &quot;red&quot;// &#x4E0A;&#x9762;&#x7684;&#x64CD;&#x4F5C;&#x7B26; &#x7B49;&#x4EF7;&#x4E8E;(userDefinedColorName != nil)? userDefinedColorName?: defaultColorName Range &#x64CD;&#x4F5C;&#x7B26; Swift &#x5305;&#x542B;&#x4E86;&#x4E24;&#x79CD; range &#x64CD;&#x4F5C;&#x7B26; &#x95ED;&#x5408;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26; &#x8FD9;&#x4E2A;&#x95ED;&#x5408;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x5B9A;&#x4E49;&#x65B9;&#x5F0F; (a&#x2026;b) a&#x7684;&#x503C;&#x4E0D;&#x51C6;&#x5927;&#x4E8E;b, &#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6570;&#x5B66;&#x4E0A;&#x7684;&#xFF0C;&#x95ED;&#x533A;&#x95F4;[a, b] &#x95ED;&#x5408;&#x5F0F; Range &#x7ECF;&#x5E38;&#x7528;&#x4E8E; for-in &#x5FAA;&#x73AF; 123for index in 1...5 { print(&quot;\\(index) times 5 is \\(index * 5)&quot;)} &#x534A;&#x5F00;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26; &#x8FD9;&#x79CD;&#x95ED;&#x5408;&#x5F0F; Range &#x64CD;&#x4F5C;&#x7B26;&#x7684;&#x654C;&#x8425;&#x65B9;&#x5F0F; (a..&lt;b) a &#x7684;&#x503C;&#x5C0F;&#x4E8E; b&#xFF0C;&#x53EF;&#x4EE5;&#x7406;&#x89E3;&#x4E3A;&#x6570;&#x5B66;&#x4E2D;&#x7684;&#xFF0C;&#x534A;&#x95ED;&#x534A;&#x5F00;&#x533A;&#x95F4; [a, b) 123456let names = [&quot;Anna&quot;, &quot;Alex&quot;, &quot;Brian&quot;, &quot;Jack&quot;]let count = names.countfor i in 0..&lt;count { print(&quot;Peson \\(i + 1) is called \\(names[i])&quot;)} &#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26; &#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26;&#x662F;&#x4FEE;&#x6539;&#x548C;&#x7EC4;&#x5408; &#x5E03;&#x5C14;&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002;Swift &#x652F;&#x6301;&#x4E09;&#x79CD;&#x6807;&#x51C6;&#x7684;&#x903B;&#x8F91;&#x8FD0;&#x7B97;&#x7B26; &#x903B;&#x8F91;&#x975E; ! &#x903B;&#x8F91;&#x548C; &amp;&amp; &#x903B;&#x8F91;&#x6216; || &#x903B;&#x8F91;&#x975E; &#x903B;&#x8F91;&#x975E;&#x7684;&#x4F5C;&#x7528;&#x5C31;&#x662F;&#x5C06;&#x503C;&#x53D6;&#x53CD;&#xFF0C;true &#x53D8;&#x4E3A; false false &#x53D8;&#x4E3A; true 12345let allowedEntry = falseif !allowedEntry { print(&quot;ACCESS DENIED&quot;)}// prints &quot;ACCESS DENIED&quot; &#x903B;&#x8F91;&#x548C; &#x903B;&#x8F91;&#x548C; &#x64CD;&#x4F5C;&#x7B26; a &amp;&amp; b &#x53EA;&#x6709; a &#x548C; b &#x540C;&#x65F6;&#x4E3A; true &#x662F;&#xFF0C;&#x903B;&#x8F91;&#x548C;&#x624D;&#x4E3A; true 1234567let a = true, b = falseif a &amp;&amp; b { print(&quot;welcome&quot;)} else { print(&quot;ACCESS DENIED&quot;)}// prints &quot;ACCESS DENIED&quot; &#x56E0;&#x4E3A;a &#x548C; b &#x4E0D;&#x5168;&#x4E3A; true &#x903B;&#x8F91;&#x6216; &#x903B;&#x8F91;&#x6216; &#x64CD;&#x4F5C;&#x7B26; a || b&#xFF0C; &#x53EA;&#x8981; a &#x548C; b &#x6709;&#x4E00;&#x4E2A;&#x4E3A; true &#x6574;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x4E3A; true 1234567let a = true, b = falseif a || b { print(&quot;welcome&quot;)} else { print(&quot;ACCESS DENIED&quot;)}// prints &quot;welcome&quot; &#x56E0;&#x4E3A; a &#x4E3A; true, &#x6545;&#x6574;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x4E3A;&#x771F; &#x7EC4;&#x5408;&#x903B;&#x8F91; &#x4E00;&#x4E2A;&#x8868;&#x8FBE;&#x5F0F;&#x7ECF;&#x5E38;&#x9700;&#x8981;&#x4F7F;&#x7528; &amp;&amp; || ! &#x6765;&#x7EC4;&#x5408;&#x4F7F;&#x7528;&#x3002; 12345678let a = true, b = false, c = true, d = falseif (a &amp;&amp; b) || c || d { print(&quot;welcome&quot;)} else { print(&quot;ACCESS DENIED&quot;)}// prints welcome &#x56E0;&#x4E3A; a &amp;&amp; b &#x662F; false, c &#x662F; true, d &#x662F; false","tags":[{"name":"swift","slug":"swift","permalink":"http://www.lagel.me/tags/swift/"}]},{"title":"Android TextToSpeech简单应用","date":"2016-03-22T02:24:36.000Z","path":"android/text_to_speech.html","text":"TextToSpeech&#x7684;&#x7B80;&#x5355;&#x5E94;&#x7528; TextToSpeech &#x5408;&#x6210;&#x8BED;&#x97F3;&#x662F;&#x4ECE;&#x4E00;&#x53E5;&#x6587;&#x5B57;&#x7ACB;&#x5373;&#x64AD;&#x653E;&#x6216;&#x8005;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8BED;&#x97F3;&#x6587;&#x4EF6;&#x3002;&#x5728;&#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x7684;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x662F;&#x8BAF;&#x98DE;&#x7684;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x5E76;&#x4E14;&#x8FD9;&#x91CC;&#x53EA;&#x6D89;&#x53CA;&#x5230;&#x64AD;&#x653E;&#x8BED;&#x97F3;&#x6587;&#x4EF6;&#xFF0C;&#x6CA1;&#x6709;&#x6D89;&#x53CA;&#x5230;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x8BED;&#x97F3;&#x6587;&#x4EF6;&#x3002; &#x5B9E;&#x4F8B;&#x5316;&#x4E00;&#x4E2A; TextToSpeech &#x5BF9;&#x8C61; 123456789101112private static final String IFLYTEK = &quot;com.iflytek.tts&quot;;TextToSpeech tts = null;int version = Build.VERSION.SDK_INT;Log.i(TAG, action);if (tts == null) { if (version &gt; 14) { tts = new TextToSpeech(context, this, IFLYTEK); } else { tts = new TextToSpeech(context, this); }} &#x8FD9;&#x91CC;&#x7684; this &#x5BF9;&#x8C61;&#x4E00;&#x5B9A;&#x8981;&#x5B9E;&#x73B0; OnInitListener &#x63A5;&#x53E3;&#x5728;android&#x7248;&#x672C;14&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x63D0;&#x4F9B;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;TTS&#x5BF9;&#x8C61;&#x7684;&#x540C;&#x65F6;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x9ED8;&#x8BA4;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x3002; &#x5B9E;&#x73B0; OnInitListener &#x63A5;&#x53E3; 123456789@Overridepublic void onInit(int status) { if (status == TextToSpeech.SUCCESS) { ready = true; Log.i(TAG, &quot;&#x521D;&#x59CB;&#x5316;&#x6210;&#x529F;&quot;); } else { show(&quot;&#x6682;&#x65E0;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&quot;); }} Android&#x7248;&#x672C;14&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#xFF0C;&#x9700;&#x8981;&#x8BBE;&#x5B9A;&#x9ED8;&#x8BA4;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#xFF0C;&#x9700;&#x8981;&#x8C03;&#x7528;123if (ready) { tts.setEngineByPackageName(IFLYTEK);} &#x8C03;&#x7528;setEngineByPackageName&#x65F6;&#xFF0C;&#x9700;&#x8981;&#x5728;tts&#x5BF9;&#x8C61;&#x7684;onInit&#x8C03;&#x7528;&#x6210;&#x529F;&#x4E4B;&#x540E;&#x3002; &#x5728;&#x4F7F;&#x7528;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x4E4B;&#x524D;&#xFF0C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x9700;&#x8981;&#x68C0;&#x6D4B;&#x4E00;&#x4E0B;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x3002; 1234567891011private boolean checkApkExist(String packageName) { if (packageName == null || &quot;&quot;.equals(packageName.trim())) { return false; } try { ApplicationInfo info = context.getPackageManager().getApplicationInfo(packageName, PackageManager.GET_UNINSTALLED_PACKAGES); } catch (PackageManager.NameNotFoundException e) { return false; } return true;} &#x5982;&#x679C;&#xFF0C;&#x8BED;&#x97F3;&#x5F15;&#x64CE;&#x5DF2;&#x7ECF;&#x5B89;&#x88C5;&#x4E86;&#xFF0C;&#x90A3;&#x4E48;&#x6211;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; speak &#x65B9;&#x6CD5;&#x4E86;&#xFF0C;&#x5C06;&#x6211;&#x4EEC;&#x7684;&#x4E00;&#x6BB5;&#x6587;&#x5B57;&#x8F6C;&#x6362;&#x6210;&#x8BED;&#x97F3;&#x3002; 123if (ready) { tts.speak(&quot;&#x6211;&#x662F;&#x4E2D;&#x56FD;&#x4EBA;&quot;, TextToSpeech.QUEUE_ADD, null);} &#x6CE8;&#x610F;&#xFF1A;&#x8C03;&#x7528; speak &#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x4E00;&#x5B9A;&#x662F;&#x8981;&#x5728; OnInit &#x65B9;&#x6CD5;&#x56DE;&#x8C03;&#x4E4B;&#x540E;&#x3002;&#x4E0A;&#x9762;&#x7684;&#x8C03;&#x7528;&#x65B9;&#x6CD5;&#xFF0C;&#x5728;API 21&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5DF2;&#x7ECF;&#x88AB;&#x5F03;&#x7528;&#x3002; &#x5982;&#x679C;speak&#x4E86;&#x4E00;&#x6BB5;&#x5F88;&#x957F;&#x7684;&#x8BDD;&#xFF0C;&#x6211;&#x4EEC;&#x60F3;&#x505C;&#x6B62;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;stop&#x65B9;&#x6CD5;&#x3002; 123if (ready &amp;&amp; tts.isSpeaking()) { tts.stop();} &#x6700;&#x540E;&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x5173;&#x95ED;Activity &#x7684;&#x65F6;&#x5019;&#xFF0C;&#x8BF7;&#x8C28;&#x8BB0;&#x91CA;&#x653E;&#x8D44;&#x6E90;&#x3002; 1234567@Overridepublic void onDestroy() { if (tts != null) { tts.shutdown(); tts = null; }} &#x70B9;&#x51FB;&#x8FD9;&#x91CC;&#xFF0C;&#x67E5;&#x770B;&#x6E90;&#x4EE3;&#x7801;","tags":[{"name":"android","slug":"android","permalink":"http://www.lagel.me/tags/android/"}]},{"title":"Swift Lesson 01","date":"2016-03-17T07:54:36.000Z","path":"swift/01.html","text":"Swift &#x7B2C;&#x4E00;&#x8BFE;&#x65F6; &#x5E38;&#x91CF;&#x4E0E;&#x53D8;&#x91CF; &#x7C7B;&#x578B;&#x6CE8;&#x89E3; &#x6253;&#x5370; &#x6CE8;&#x91CA; &#x6570;&#x5B57;&#x7C7B;&#x578B; &#x6570;&#x5B57;&#x754C;&#x9650; Int UInt &#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B; &#x7C7B;&#x578B;&#x5B89;&#x5168;&#x548C;&#x7C7B;&#x578B;&#x63A8;&#x8BBA; &#x6570;&#x5B57;&#x8FDB;&#x5236; &#x7C7B;&#x578B;&#x82B1;&#x540D;&#xFF08;&#x522B;&#x540D;&#xFF09; Boolean &#x5143;&#x7EC4; (Tuples) Optionals(&#x53EF;&#x9009;&#x7684;) nil optional &#x7ED1;&#x5B9A; &#x9690;&#x5F0F;&#x5C55;&#x5F00; optional &#x9519;&#x8BEF;&#x5904;&#x7406; &#x65AD;&#x8A00; &#x5E38;&#x91CF;&#x4E0E;&#x53D8;&#x91CF;&#x5E38;&#x91CF; &#x4E0D;&#x53EF;&#x88AB;&#x4FEE;&#x6539;&#x3002;&#x53D8;&#x91CF; &#x53EF;&#x88AB;&#x4FEE;&#x6539;&#x3002; &#x58F0;&#x660E;&#x65B9;&#x5F0F;12let maxLoginAttempts = 10var currentAttempt = 0 &#x591A;&#x4E2A;&#x53D8;&#x91CF;&#x58F0;&#x660E;1var x = 0, y = 0, z = 0.0 &#x5C0F;&#x63D0;&#x793A; &#x5982;&#x679C;&#x5B58;&#x50A8;&#x7684;&#x503C;&#x4E0D;&#x4F1A;&#x53D1;&#x751F;&#x6539;&#x53D8;&#xFF0C;&#x8BF7;&#x4F7F;&#x7528;&#x5E38;&#x91CF;&#xFF0C;&#x53D8;&#x91CF;&#x53EA;&#x7528;&#x6765;&#x5B58;&#x50A8;&#x6C47;&#x4F1A;&#x6539;&#x53D8;&#x7684;&#x5185;&#x5BB9;&#x3002; &#x7C7B;&#x578B;&#x6CE8;&#x89E3; &#x5F53;&#x4F60;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x53D8;&#x91CF;&#x65F6;&#xFF0C;&#x53EF;&#x4EE5;&#x663E;&#x793A;&#x7684;&#x6307;&#x5B9A;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#xFF08;&#x867D;&#x7136;Swift&#x975E;&#x5E38;&#x806A;&#x660E;&#xFF0C;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x63A8;&#x5BFC;&#xFF09;&#x3002; &#x4F7F;&#x7528;&#x65B9;&#x5F0F;1var welcomeMessage: String &#x591A;&#x4E2A;&#x53D8;&#x91CF;&#x58F0;&#x660E;1var red, green, blue: Double &#x5C0F;&#x63D0;&#x793A; &#x5982;&#x679C;&#x4F60;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x521D;&#x59CB;&#x503C;&#xFF0C;&#x5C31;&#x4E0D;&#x7528;&#x6307;&#x5B9A;&#x53D8;&#x91CF;&#x7C7B;&#x578B;&#x3002; &#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x662F;&#x4E0D;&#x5FC5;&#x8981;&#x7684;1var red: String = &quot;test&quot; &#x6253;&#x5370; print() &#x51FD;&#x6570;&#x662F;Swift&#x7684;&#x57FA;&#x672C;&#x6253;&#x5370;&#x529F;&#x80FD;, &#x5B83;&#x53EF;&#x4EE5;&#x6253;&#x5370;&#x4EFB;&#x610F;&#x7684;&#x5E38;&#x91CF;&#x548C;&#x53D8;&#x91CF; &#x6CE8;&#x91CA; &#x6CE8;&#x91CA;&#x662F;&#x4E00;&#x4E2A;&#x8BED;&#x8A00;&#x7684;&#x57FA;&#x672C;&#x6A21;&#x5757;&#xFF0C;&#x65B9;&#x4FBF;&#x6211;&#x4EEC;&#x8C03;&#x8BD5;&#xFF0C;&#x9690;&#x85CF;&#x4E0D;&#x5FC5;&#x8981;&#x7684;&#x4FE1;&#x606F;&#xFF0C;&#x89E3;&#x91CA;&#x4E00;&#x6BB5;&#x7A0B;&#x5E8F;&#x7684;&#x529F;&#x80FD;&#x7B49;&#x3002; &#x4F7F;&#x7528;&#x65B9;&#x5F0F;12345// &#x6211;&#x662F;&#x5355;&#x884C;&#x6CE8;&#x91CA;/* &#x6211;&#x662F;&#x591A;&#x884C;&#x6CE8;&#x91CA;&#x5FEB;&#x70B9;&#x6CE8;&#x91CA;&#x6211;&#xFF01;/* &#x6211;&#x4E0D;&#x540C;&#x4E8E;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#xFF0C;&#x6211;&#x8FD8;&#x53EF;&#x4EE5;&#x5D4C;&#x5957;&#x591A;&#x884C;&#x6CE8;&#x91CA;&#x54E6;! */*/ &#x6570;&#x5B57;&#x7C7B;&#x578B;&#x548C;c&#x8BED;&#x8A00;&#x4E00;&#x6837;&#xFF0C;&#x5B83;&#x4E5F;&#x63D0;&#x4F9B;&#x4E86; signed &#x548C; unsigned &#x4E24;&#x79CD;&#x6570;&#x5B57;&#x7C7B;&#x578B;(&#x6709;&#x7B26;&#x53F7;&#x548C;&#x65E0;&#x7B26;&#x53F7;)&#x6709;&#x7B26;&#x53F7;&#x7684;&#x6570;&#x5B57;&#xFF1A;&#xFF08;&#x6B63;&#x6570;&#xFF0C;0&#xFF0C;&#x8D1F;&#x6570;&#xFF09;&#x65E0;&#x7B26;&#x53F7;&#x7684;&#x6570;&#x5B57;&#xFF1A;&#xFF08;&#x6B63;&#x6570;&#xFF0C;0&#xFF09;Swift&#x5C06;&#x6570;&#x5B57;&#x6309;&#x7167;&#x4F4D;&#x6570;&#x5206;&#x6210;&#x4E86;&#x51E0;&#x7C7B;&#xFF1A; 8 16 32 64 &#x6570;&#x5B57;&#x754C;&#x9650; Swfit &#x63D0;&#x4F9B;&#x4E86;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x6570;&#x5B57;&#x7684;&#x6700;&#x5927;&#x503C;&#x548C;&#x6700;&#x5C0F;&#x503C;&#x3002; 12let max = UInt8.max // 255let min = UInt8.min // 0 Int Swift &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x7684;&#x7C7B;&#x578B; Int &#x5B83;&#x662F;&#x6839;&#x636E;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x7684;&#x4F4D;&#x6570;&#x5B9A;&#x4E49;&#x7684;&#x3002; &#x5728;32&#x4F4D;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;Int &#x7B49;&#x4E8E; Int32 &#x5728;64&#x4F4D;&#x7CFB;&#x7EDF;&#x4E2D;&#xFF0C;Int &#x7B49;&#x4E8E; Int64 UInt Swfit &#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x65E0;&#x7B26;&#x53F7;&#x7684;&#x7C7B;&#x578B; UInt, &#x5B83;&#x548C; Int &#x7C7B;&#x578B;&#x4E00;&#x81F4;&#xFF0C;&#x6839;&#x636E;&#x5F53;&#x524D;&#x7CFB;&#x7EDF;&#x7684;&#x4F4D;&#x6570;&#x5B9A;&#x4E49;&#x3002; &#x5C0F;&#x63D0;&#x793A; &#x5982;&#x679C;&#x5F53;&#x4F60;&#x9700;&#x8981;&#x660E;&#x786E;&#x6307;&#x5B9A;&#x65E0;&#x7B26;&#x53F7;&#x7684;&#x7C7B;&#x578B;&#x65F6;&#x624D;&#x4F7F;&#x7528;UInt&#xFF0C;&#x5426;&#x5219; Int &#x7C7B;&#x578B;&#x5E94;&#x5F53;&#x662F;&#x4F60;&#x7684;&#x9996;&#x9009;&#x9879;&#x3002; &#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B; &#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x4E00;&#x822C;&#x6307; Double &#x548C; Float Double &#x4EE3;&#x8868; 64&#x4F4D; &#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B;&#x3002; Float &#x4EE3;&#x8868; 32&#x4F4D; &#x6D6E;&#x70B9;&#x6570;&#x7C7B;&#x578B;&#x3002; &#x5C0F;&#x63D0;&#x793A; Double &#x7C7B;&#x578B;&#x7684;&#x7CBE;&#x786E;&#x5EA6;&#x81F3;&#x5C11;&#x6709; 15&#x4F4D;&#xFF0C;&#x800C; Float &#x7C7B;&#x578B;&#x7684;&#x7CBE;&#x786E;&#x5EA6;&#x6BD4; Double &#x5C11; 6&#x4F4D;&#x3002; &#x7C7B;&#x578B;&#x5B89;&#x5168;&#x548C;&#x7C7B;&#x578B;&#x63A8;&#x8BBA; Swift &#x8BED;&#x8A00;&#x662F;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x7684;&#x8BED;&#x8A00;&#xFF0C;&#x540C; java &#x4E00;&#x6837;&#xFF0C;&#x4F46;&#x540C;&#x65F6;&#x4E0D;&#x540C;&#x4E8E; java &#x7684;&#x662F;&#xFF0C;&#x5B83;&#x53EF;&#x4EE5;&#x63A8;&#x5BFC;&#x51FA;&#x53D8;&#x91CF;&#x7684;&#x7C7B;&#x578B;&#x3002;&#x4E24;&#x4E2A;&#x7279;&#x70B9;&#x662F;&#x540C;&#x4E8B;&#x517C;&#x5907;&#x7684;&#x3002; 12345678910let pi = 3.1415926// pi &#x7C7B;&#x578B;&#x662F; Doublelet maxLimit = 2// maxLimit &#x7C7B;&#x578B;&#x662F; Intlet anotherPi = 3 + 0.1415926// anotherPi &#x7C7B;&#x578B;&#x662F; Doublevar str = &quot;test&quot;// str &#x7C7B;&#x578B;&#x662F; Stringstr = 1// &#x7F16;&#x8BD1;&#x9519;&#x8BEF;&#xFF0C;&#x4E0D;&#x80FD;&#x6307;&#x6D3E; Int &#x7C7B;&#x578B;&#x7ED9; String &#x7C7B;&#x578B;&#x3002; &#x6570;&#x5B57;&#x8FDB;&#x5236; Swift &#x4E5F;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x76F4;&#x63A5;&#x8868;&#x793A;&#x6570;&#x5B57;&#x7684;&#x8FDB;&#x5236;12345678910111213141516// &#x5341;&#x8FDB;&#x5236;let decimalInteger = 17// &#x4E8C;&#x8FDB;&#x5236;let binaryInteger = 0b10001// &#x516B;&#x8FDB;&#x5236;let octalInteger = 0o21// &#x5341;&#x516D;&#x8FDB;&#x5236;// hexadecimaInteger = 0x11// &#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;1.25e2 = 1.25 * 10 * 101.25e-2 = 1.25 / 10 / 10// &#x5341;&#x516D;&#x8FDB;&#x5236;&#x79D1;&#x5B66;&#x8BA1;&#x6570;&#x6CD5;0xFp2 = 15 * 2 * 20xFp-2 = 15 / 2 / 2// &#x58F0;&#x660E;&#x6570;&#x5B57;(&#x652F;&#x6301;_)let oneMillion = 1_000_000 &#x7C7B;&#x578B;&#x82B1;&#x540D;&#xFF08;&#x522B;&#x540D;&#xFF09; &#x7ED9; Swift &#x5DF2;&#x7ECF;&#x5B58;&#x5728;&#x7684;&#x7C7B;&#x578B;&#x540D;&#x79F0;&#xFF0C;&#x53D6;&#x4E00;&#x4E2A;&#x522B;&#x540D; 123typealias AudioSample = UInt16var maxAmplitudeFound = AudioSample.min Boolean &#x548C;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E00;&#x6837; True False 1234let i = 1if i { print(i)} &#x5143;&#x7EC4; (Tuples) &#x5143;&#x7EC4;&#x662F;&#x591A;&#x4E2A;&#x6570;&#x636E;&#x7EC4;&#x6210;&#x4E00;&#x7EC4;&#xFF0C;&#x5B83;&#x5305;&#x542B;&#x4EFB;&#x610F;&#x7C7B;&#x578B; &#x4F8B;&#x5982;1234let http404 = (404, &quot;Not Found&quot;)let http200 = (status: 200, description: &quot;OK&quot;)print(http200.status, http200.description)// 200 OK &#x5C0F;&#x63D0;&#x793A; &#x5143;&#x7EC4;&#x662F;&#x975E;&#x5E38;&#x6709;&#x7528;&#x7684;&#x6570;&#x7EC4;&#x7ED3;&#x6784;&#xFF0C;&#x53EF;&#x4EE5;&#x5B58;&#x50A8;&#x4EFB;&#x610F;&#x7684;&#x7C7B;&#x578B;&#xFF0C;&#x53EF;&#x4EE5;&#x6839;&#x636E;&#x4F60;&#x7684;&#x9700;&#x6C42;&#x58F0;&#x660E;&#x72EC;&#x7279;&#x7684;&#x6570;&#x636E;&#x7ED3;&#x6784;&#x3002; Optionals(&#x53EF;&#x9009;&#x7684;) &#x4F60;&#x53EF;&#x4EE5;&#x5728;&#x503C;&#x53EF;&#x80FD;&#x4E0D;&#x5B58;&#x5728;&#x7684;&#x5730;&#x65B9;&#x4F7F;&#x7528; optionals.123let possibleNumber = &quot;123&quot;let convertedNumber = Int(possibleNumber)// convertedNumber &#x88AB;&#x63A8;&#x5BFC;&#x6210;&#x4E00;&#x4E2A; Int? &#x6216;&#x8005; Optional Int(Int? or not Int) nil &#x4F60;&#x53EF;&#x4EE5;&#x7ED9; optional &#x53D8;&#x91CF;&#x5206;&#x914D;&#x4E00;&#x4E2A;&#x7279;&#x6B8A;&#x7684;&#x503C; nil . 123456let surverAnswer: String?// surverAnswer &#x7684;&#x503C;&#x81EA;&#x52A8;&#x7684;&#x88AB;&#x8BBE;&#x7F6E;&#x6210; nil// &#x53EF;&#x4EE5;&#x4F7F;&#x7528; if &#x8BED;&#x53E5;&#x6765;&#x68C0;&#x6D4B;&#x503C;&#x662F;&#x5426;&#x662F; nilif surverAnswer != nil { print(&quot;surverAnswer is /(surverAnswer)&quot;)} &#x5C0F;&#x63D0;&#x793A; &#x5C1D;&#x8BD5;&#x4F7F;&#x7528; ! &#x6765;&#x5224;&#x65AD; optional &#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x6709;&#x6548;&#x63A7;&#x5236;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x53D1;&#x751F;&#x3002;&#x6BCF;&#x6B21;&#x4F18;&#x5148;&#x5224;&#x65AD; optional &#x503C;&#x5B58;&#x5728;&#x65F6;&#xFF0C;&#x624D;&#x53BB;&#x4F7F;&#x7528; optional &#x503C;&#x3002; optional &#x7ED1;&#x5B9A; optional &#x7ED1;&#x5B9A;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5728; if &#x548C; while &#x8BED;&#x53E5;&#x4E2D;123if let a = Int(&quot;4&quot;), b = Int(&quot;10&quot;) where a &lt; b { print(&quot;\\(a) &lt; \\(b)&quot;)} &#x9690;&#x5F0F;&#x5C55;&#x5F00; optional &#x9690;&#x5F0F;&#x5C55;&#x5F00;&#x7684;&#x597D;&#x5904;&#xFF0C;&#x5728;&#x4E8E;&#x4E0D;&#x7528;&#x5728;&#x6BCF;&#x6B21;&#x8C03;&#x7528; optional&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x53BB;&#x68C0;&#x6D4B;&#x5B83;&#x662F;&#x5426;&#x5B58;&#x5728;&#x3002; 1234567let possibleString: String? = &quot;Ha ha&quot;let forcedString: String = possibleString!// &#x8C03;&#x7528; possibleString &#x65F6;&#xFF0C;&#x9700;&#x8981;&#x4F7F;&#x7528; ! &#x53BB;&#x68C0;&#x6D4B;&#x5B83;&#x7684;&#x503C;&#x662F;&#x5426;&#x5B58;&#x5728;let assumedString: String! = &quot;Ha ha&quot;let implicitString: String = assumedString// &#x8C03;&#x7528; assumedString &#x65F6;&#xFF0C;&#x4E0D;&#x9700;&#x8981;&#x4F7F;&#x7528; &#xFF01;&#x53BB;&#x68C0;&#x6D4B;&#xFF0C;&#x5B83;&#x4F1A;&#x81EA;&#x52A8;&#x68C0;&#x6D4B;&#x503C;&#x662F;&#x5426;&#x5B58;&#x5728;&#x3002; &#x5C0F;&#x63D0;&#x793A; &#x5982;&#x679C; &#x9690;&#x5F0F;&#x5C55;&#x5F00; optional&#x7684;&#x503C;&#x662F;nil&#xFF0C;&#x5C1D;&#x8BD5;&#x4F7F;&#x7528;&#x5B83;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x5B83;&#x4F1A;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x8FD0;&#x884C;&#x65F6;&#x9519;&#x8BEF;&#x3002; &#x9519;&#x8BEF;&#x5904;&#x7406; &#x5F53;&#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x906D;&#x9047;&#x9519;&#x8BEF;&#x65F6;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528; &#x9519;&#x8BEF;&#x5904;&#x7406; &#x6765;&#x54CD;&#x5E94;&#x4F60;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002; &#x4F60;&#x53EF;&#x4EE5;&#x6307;&#x660E;&#x4F60;&#x7684;&#x51FD;&#x6570;&#x629B;&#x51FA;&#x4E00;&#x4E2A;&#x9519;&#x8BEF;&#x3002;&#x4F7F;&#x7528;&#x5173;&#x952E;&#x5B57; throws &#x4F7F;&#x7528; try catch &#x6765;&#x6355;&#x83B7;&#x4F60;&#x7684;&#x9519;&#x8BEF;&#x4FE1;&#x606F;&#x3002; 123456789101112func makeASandwich() throws { &#xB7;&#xB7;&#xB7;}do { try makeASandwich() eatASandwich()} catch Error.OutOfCleanDishes { washDishes()} catch Error.MissingIngredients(let ingredients) { buyGroceries(ingredients)} &#x65AD;&#x8A00; &#x6709;&#x65F6;&#x5019;&#xFF0C;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x4E0D;&#x53EF;&#x80FD;&#x7B80;&#x5355;&#x7684;&#x7EE7;&#x7EED;&#x6267;&#x884C;&#xFF0C;&#x5F53;&#x5B83;&#x4E0D;&#x6EE1;&#x8DB3;&#x4E00;&#x4E9B;&#x7279;&#x5B9A;&#x7684;&#x6761;&#x4EF6;&#x3002;&#x5728;&#x8FD9;&#x4E9B;&#x60C5;&#x51B5;&#x4E0B;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x65AD;&#x8A00;&#x5728;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x4E2D;&#x5230;&#x4EE3;&#x7801;&#x8FD0;&#x884C;&#x7ED3;&#x675F;&#xFF0C;&#x5F53;&#x53D1;&#x751F;&#x5728;&#x4E00;&#x4E9B;&#x7F3A;&#x5931;&#x548C;&#x65E0;&#x6548;&#x503C;&#x7684;&#x65F6;&#x5019;&#x53EF;&#x4EE5;&#x63D0;&#x4F9B;&#x4E00;&#x4E2A;&#x8C03;&#x8BD5;&#x673A;&#x4F1A;&#x3002; &#x8C03;&#x8BD5;&#x4E0E;&#x65AD;&#x8A00; 12let age = -3assert(age &gt;=0, &quot;A person&apos;s age cannot be less than zero&quot;) &#x5C0F;&#x63D0;&#x793A; &#x4F7F;&#x7528;&#x673A;&#x6784;&#x7F16;&#x8BD1;&#x540E;&#x7684;&#x4EE3;&#x7801;&#xFF0C;&#x65AD;&#x8A00;&#x662F;&#x88AB;&#x7981;&#x7528;&#x7684;&#x3002;&#x4F8B;&#x5982;&#xFF0C;&#x5F53;&#x4F60;&#x7F16;&#x8BD1;&#x6B63;&#x5F0F;&#x7248;&#x65F6;&#x5728; Xcode &#x4E2D;&#x662F;&#x7981;&#x7528;&#x7684;&#x3002; &#x65AD;&#x8A00;&#x7684;&#x4F7F;&#x7528;&#x573A;&#x666F; &#x4E00;&#x4E2A;&#x6570;&#x5B57;&#x4E0B;&#x6807;&#x662F;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x4E0B;&#x6807;&#x5B9E;&#x73B0;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x4E0B;&#x6807;&#x7D22;&#x5F15;&#x503C;&#x4E0D;&#x80FD;&#x592A;&#x4F4E;&#x548C;&#x592A;&#x9AD8;&#x3002; &#x901A;&#x8FC7;&#x51FD;&#x6570;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x503C;&#xFF0C;&#x4F46;&#x662F;&#x4E00;&#x4E2A;&#x65E0;&#x6548;&#x7684;&#x503C;&#x610F;&#x5473;&#x7740;&#x8FD9;&#x4E2A;&#x51FD;&#x6570;&#x662F;&#x4E0D;&#x80FD;&#x5B8C;&#x6210;&#x4EFB;&#x52A1;&#x7684;&#x3002; &#x4E00;&#x4E2A;&#x53EF;&#x9009;&#x7684;&#x503C;&#x662F; nil, &#x4F46;&#x662F;&#x4E00;&#x4E2A; non-nil &#x503C;&#x88AB;&#x4F7F;&#x7528;&#xFF0C;&#x800C;&#x4E14;&#x4EE3;&#x7801;&#x8FD8;&#x6267;&#x884C;&#x6210;&#x529F;&#x4E86;&#x3002; &#x5C0F;&#x63D0;&#x793A; &#x65AD;&#x8A00;&#x80FD;&#x591F;&#x9020;&#x6210;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x505C;&#x6B62;&#x8FD0;&#x884C;&#xFF0C;&#x8FD9;&#x4E0D;&#x80FD;&#x66FF;&#x4EE3;&#x4F60;&#x7684;&#x4EE3;&#x7801;&#x8BBE;&#x8BA1;&#x7684;&#x5F53;&#x4E00;&#x4E2A;&#x65E0;&#x6548;&#x7684;&#x60C5;&#x51B5;&#x4ECE;&#x4E0D;&#x53EF;&#x80FD;&#x4E0A;&#x5347;&#x5230;&#x53EF;&#x80FD;&#x3002;&#x65E2;&#x7136;&#x5982;&#x6B64;&#xFF0C;&#x5728;&#x4E00;&#x4E2A;&#x65E0;&#x6548;&#x7684;&#x60C5;&#x51B5;&#x53D8;&#x4E3A;&#x53EF;&#x80FD;&#x65F6;&#xFF0C;&#x4E00;&#x4E2A;&#x65AD;&#x8A00;&#x662F;&#x6709;&#x6548;&#x7684;&#x65B9;&#x5F0F;&#xFF0C;&#x5728;&#x4F60;&#x7684;&#x5E94;&#x7528;&#x53D1;&#x5E03;&#x524D;&#x53EF;&#x4EE5;&#x786E;&#x4FDD;&#x8FD9;&#x4E2A;&#x6761;&#x4EF6;&#x80FD;&#x591F;&#x9AD8;&#x4EAE;&#x5E76;&#x4E14;&#x901A;&#x77E5;&#x5230;&#x5F00;&#x53D1;&#x8005;&#x3002;","tags":[{"name":"swift","slug":"swift","permalink":"http://www.lagel.me/tags/swift/"}]},{"title":"Hello World","date":"2016-03-16T02:43:16.000Z","path":"blog/hello.html","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]